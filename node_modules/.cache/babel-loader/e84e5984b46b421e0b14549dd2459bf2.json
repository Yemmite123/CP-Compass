{"ast":null,"code":"var _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Profile/EmploymentDetails/index.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport { addEmploymentDetails } from \"#/store/profile/actions\";\nimport actionTypes from \"#/store/profile/actionTypes\";\nimport Alert from \"#/components/Alert\";\nimport Modal from \"#/components/Modal\";\nimport { validateFields, serializeErrors, employmentOption, qualificationOption, industiesList } from \"#/utils\";\nimport CustomInput from \"#/components/CustomInput\";\nimport \"./style.scss\";\n\nclass EmploymentDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      qualification: \"\",\n      status: \"\",\n      appointmentDate: new Date(),\n      occupation: \"\",\n      companyName: \"\",\n      companyAddress: \"\",\n      companyType: \"\",\n      officialPhoneNumber: \"\",\n      officialEmailAddress: \"\",\n      errors: null,\n      countryCode: \"+234\",\n      isBvnModal: false\n    };\n\n    this.setValues = () => {\n      const {\n        userInfo\n      } = this.props;\n\n      if (userInfo) {\n        this.setState({\n          qualification: userInfo && userInfo.qualification ? userInfo.qualification : \"\",\n          status: userInfo && userInfo.status ? userInfo.status : \"\",\n          appointmentDate: userInfo && userInfo.appointmentDate ? new Date(userInfo.appointmentDate.split(\"T\")[0]) : \"\",\n          occupation: userInfo && userInfo.occupation ? userInfo.occupation : \"\",\n          companyName: userInfo && userInfo.companyName ? userInfo.companyName : \"\",\n          companyAddress: userInfo && userInfo.companyAddress ? userInfo.companyAddress : \"\",\n          companyType: userInfo && userInfo.companyType ? userInfo.companyType : \"\",\n          officialPhoneNumber: userInfo && userInfo.officialPhoneNumber ? userInfo.officialPhoneNumber : \"\",\n          officialEmailAddress: userInfo && userInfo.officialEmailAddress ? userInfo.officialEmailAddress : \"\"\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleStatusChange = event => {\n      const {\n        value\n      } = event.target;\n      this.setState({\n        status: value\n      });\n    };\n\n    this.handleQualificationChange = event => {\n      const {\n        value\n      } = event.target;\n      this.setState({\n        qualification: value\n      });\n    };\n\n    this.handleChangeDate = (item, date) => {\n      this.setState({\n        [item]: date\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (!this.props.isBvnActive) {\n        return this.toggleBvnModal();\n      }\n\n      const {\n        addEmploymentDetails\n      } = this.props;\n      const {\n        qualification,\n        status,\n        appointmentDate,\n        occupation,\n        companyName,\n        companyAddress,\n        companyType,\n        officialPhoneNumber,\n        officialEmailAddress,\n        countryCode\n      } = this.state;\n      this.setState({\n        errors: null\n      });\n      const hasNoQualification = status === \"retired\" || status === \"student\";\n      const data = this.state;\n      const required = hasNoQualification ? [] : [\"qualification\"];\n      const errors = validateFields(data, required);\n\n      if (Object.keys(errors).length > 0) {\n        return this.setState({\n          errors\n        });\n      }\n\n      let payload = {\n        qualification,\n        status,\n        appointmentDate: moment(appointmentDate).format(\"YYYY-MM-DD\"),\n        occupation,\n        companyName,\n        companyType,\n        companyAddress,\n        officialPhoneNumber,\n        officialEmailAddress,\n        countryCode\n      };\n\n      if (status === 'self-employed') {\n        payload = {\n          status,\n          qualification,\n          companyName,\n          companyAddress,\n          companyType\n        };\n      }\n\n      if (hasNoQualification) {\n        payload = {\n          status\n        };\n      }\n\n      addEmploymentDetails(payload);\n    };\n\n    this.handleBvnSetup = () => {\n      this.props.history.push(\"/app/onboarding\");\n    };\n\n    this.toggleBvnModal = () => {\n      this.setState(prevState => ({\n        isBvnModal: !prevState.isBvnModal\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.setValues();\n  }\n\n  render() {\n    const {\n      isBvnModal,\n      countryCode,\n      qualification,\n      appointmentDate,\n      errors,\n      occupation,\n      companyName,\n      companyAddress,\n      companyType,\n      officialPhoneNumber,\n      officialEmailAddress,\n      status\n    } = this.state;\n    const {\n      loading,\n      error,\n      data\n    } = this.props;\n    const errorObject = serializeErrors(error);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"section-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }, isBvnModal && /*#__PURE__*/React.createElement(Modal, {\n      classes: \"bvn-active\",\n      onClose: this.toggleBvnModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    }, \"Please Setup your BVN to continue\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm btn-block mt-4\",\n      onClick: this.handleBvnSetup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, \"Setup BVN\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"section-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, \"Employment Details\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"section-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, \"We\\u2019d like to know what you do.\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"section-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, status !== \"retired\" && status !== \"student\" && /*#__PURE__*/React.createElement(CustomInput, {\n      name: \"qualification\",\n      label: \"Level of Qualification\",\n      type: \"select\",\n      options: qualificationOption,\n      value: qualification,\n      onChange: this.handleQualificationChange,\n      error: errors ? errors.qualification : errorObject && errorObject[\"qualification\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 62\n      }\n    }), /*#__PURE__*/React.createElement(CustomInput, {\n      name: \"status\",\n      label: \"Employment Status\",\n      type: \"select\",\n      options: employmentOption,\n      value: status,\n      onChange: this.handleStatusChange,\n      error: errors ? errors.status : errorObject && errorObject[\"status\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }), status === \"employed\" && /*#__PURE__*/React.createElement(CustomInput, {\n      name: \"occupation\",\n      label: \"Occupation\",\n      value: occupation,\n      onChange: this.handleChange,\n      error: errors ? errors.occupation : errorObject && errorObject[\"occupation\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 39\n      }\n    }), status === \"employed\" && /*#__PURE__*/React.createElement(CustomInput, {\n      name: \"appointmentDate\",\n      label: \"Appointment Date\",\n      value: appointmentDate,\n      type: \"date\",\n      onChange: date => this.handleChangeDate(\"appointmentDate\", date),\n      error: errors ? errors.appointmentDate : errorObject && errorObject[\"appointmentDate\"],\n      maxDate: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 39\n      }\n    }), (status === \"employed\" || status === \"self-employed\") && /*#__PURE__*/React.createElement(CustomInput, {\n      name: \"companyName\",\n      label: \"Company Name\",\n      value: companyName,\n      onChange: this.handleChange,\n      error: errors ? errors.companyName : errorObject && errorObject[\"companyName\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 71\n      }\n    }), (status === \"employed\" || status === \"self-employed\") && /*#__PURE__*/React.createElement(CustomInput, {\n      name: \"companyAddress\",\n      label: \"Company Address\",\n      value: companyAddress,\n      onChange: this.handleChange,\n      error: errors ? errors.companyAddress : errorObject && errorObject[\"companyAddress\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 71\n      }\n    }), (status === \"employed\" || status === \"self-employed\") && /*#__PURE__*/React.createElement(CustomInput, {\n      name: \"companyType\",\n      label: \"Company Type\",\n      type: \"select\",\n      options: industiesList,\n      value: companyType,\n      onChange: this.handleChange,\n      error: errors ? errors.companyType : errorObject && errorObject[\"companyType\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 71\n      }\n    }), status === \"employed\" && /*#__PURE__*/React.createElement(CustomInput, {\n      name: \"officialPhoneNumber\",\n      label: \"Official Phone Number\",\n      type: \"phone\",\n      value: officialPhoneNumber,\n      countryCodeValue: countryCode,\n      onChange: this.handleChange,\n      error: errors ? errors.officialPhoneNumber : errorObject && errorObject[\"officialPhoneNumber\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 39\n      }\n    }), status === \"employed\" && /*#__PURE__*/React.createElement(CustomInput, {\n      name: \"officialEmailAddress\",\n      label: \"Official Email Address\",\n      value: officialEmailAddress,\n      onChange: this.handleChange,\n      error: errors ? errors.officialEmailAddress : errorObject && errorObject[\"officialEmailAddress\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 39\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"section-form__button-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }\n    }, error && typeof error === \"string\" && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }\n    }, error), data && /*#__PURE__*/React.createElement(Alert, {\n      alert: {\n        type: \"success\",\n        message: data.message\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-default\",\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 15\n      }\n    }, \"Save changes\", loading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    app: {\n      profile: {\n        userProfile: {\n          data: userData\n        },\n        employment: {\n          error,\n          data\n        }\n      }\n    }\n  } = state;\n  return {\n    loading: getActionLoadingState(state, actionTypes.ADD_EMPLOYMENT_REQUEST),\n    error,\n    data,\n    isBvnActive: userData && userData.bvn ? true : false\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addEmploymentDetails: payload => dispatch(addEmploymentDetails(payload))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EmploymentDetails));","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Profile/EmploymentDetails/index.js"],"names":["React","withRouter","connect","moment","getActionLoadingState","addEmploymentDetails","actionTypes","Alert","Modal","validateFields","serializeErrors","employmentOption","qualificationOption","industiesList","CustomInput","EmploymentDetails","Component","state","qualification","status","appointmentDate","Date","occupation","companyName","companyAddress","companyType","officialPhoneNumber","officialEmailAddress","errors","countryCode","isBvnModal","setValues","userInfo","props","setState","split","handleChange","event","name","value","target","handleStatusChange","handleQualificationChange","handleChangeDate","item","date","handleSubmit","preventDefault","isBvnActive","toggleBvnModal","hasNoQualification","data","required","Object","keys","length","payload","format","handleBvnSetup","history","push","prevState","componentDidMount","render","loading","error","errorObject","type","message","mapStateToProps","app","profile","userProfile","userData","employment","ADD_EMPLOYMENT_REQUEST","bvn","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport { addEmploymentDetails } from \"#/store/profile/actions\";\nimport actionTypes from \"#/store/profile/actionTypes\";\nimport Alert from \"#/components/Alert\";\nimport Modal from \"#/components/Modal\";\nimport {\n  validateFields,\n  serializeErrors,\n  employmentOption,\n  qualificationOption,\n  industiesList,\n} from \"#/utils\";\nimport CustomInput from \"#/components/CustomInput\";\nimport \"./style.scss\";\n\nclass EmploymentDetails extends React.Component {\n  state = {\n    qualification: \"\",\n    status: \"\",\n    appointmentDate: new Date(),\n    occupation: \"\",\n    companyName: \"\",\n    companyAddress: \"\",\n    companyType: \"\",\n    officialPhoneNumber: \"\",\n    officialEmailAddress: \"\",\n    errors: null,\n    countryCode: \"+234\",\n    isBvnModal: false,\n  };\n\n  componentDidMount() {\n    this.setValues();\n  }\n\n  setValues = () => {\n    const { userInfo } = this.props;\n    if (userInfo) {\n      this.setState({\n        qualification:\n          userInfo && userInfo.qualification ? userInfo.qualification : \"\",\n        status: userInfo && userInfo.status ? userInfo.status : \"\",\n        appointmentDate:\n          userInfo && userInfo.appointmentDate\n            ? new Date(userInfo.appointmentDate.split(\"T\")[0])\n            : \"\",\n        occupation: userInfo && userInfo.occupation ? userInfo.occupation : \"\",\n        companyName:\n          userInfo && userInfo.companyName ? userInfo.companyName : \"\",\n        companyAddress:\n          userInfo && userInfo.companyAddress ? userInfo.companyAddress : \"\",\n        companyType: \n          userInfo && userInfo.companyType ? userInfo.companyType : \"\",\n        officialPhoneNumber:\n          userInfo && userInfo.officialPhoneNumber\n            ? userInfo.officialPhoneNumber\n            : \"\",\n        officialEmailAddress:\n          userInfo && userInfo.officialEmailAddress\n            ? userInfo.officialEmailAddress\n            : \"\",\n      });\n    }\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleStatusChange = (event) => {\n    const { value } = event.target;\n    this.setState({ status: value });\n  };\n\n  handleQualificationChange = (event) => {\n    const { value } = event.target;\n    this.setState({ qualification: value });\n  };\n\n  handleChangeDate = (item, date) => {\n    this.setState({ [item]: date });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!this.props.isBvnActive) {\n      return this.toggleBvnModal();\n    }\n\n    const { addEmploymentDetails } = this.props;\n    const {\n      qualification,\n      status,\n      appointmentDate,\n      occupation,\n      companyName,\n      companyAddress,\n      companyType,\n      officialPhoneNumber,\n      officialEmailAddress,\n      countryCode,\n    } = this.state;\n\n    this.setState({ errors: null });\n\n    const hasNoQualification = status === \"retired\" || status === \"student\";\n    const data = this.state;\n    const required = hasNoQualification ? [] : [\"qualification\"];\n    const errors = validateFields(data, required);\n\n    if (Object.keys(errors).length > 0) {\n      return this.setState({ errors });\n    }\n    let payload = {\n      qualification,\n      status,\n      appointmentDate: moment(appointmentDate).format(\"YYYY-MM-DD\"),\n      occupation,\n      companyName,\n      companyType,\n      companyAddress,\n      officialPhoneNumber,\n      officialEmailAddress,\n      countryCode,\n    };\n\n    if(status === 'self-employed') {\n      payload = {status, qualification, companyName, companyAddress, companyType};\n    }\n    if(hasNoQualification) {\n      payload = {status};\n    }\n\n    addEmploymentDetails(payload);\n  };\n\n  handleBvnSetup = () => {\n    this.props.history.push(\"/app/onboarding\");\n  };\n\n  toggleBvnModal = () => {\n    this.setState((prevState) => ({ isBvnModal: !prevState.isBvnModal }));\n  };\n\n  render() {\n    const {\n      isBvnModal,\n      countryCode,\n      qualification,\n      appointmentDate,\n      errors,\n      occupation,\n      companyName,\n      companyAddress,\n      companyType,\n      officialPhoneNumber,\n      officialEmailAddress,\n      status,\n    } = this.state;\n    const { loading, error, data } = this.props;\n    const errorObject = serializeErrors(error);\n\n    return (\n      <div className=\"section-container\">\n        {isBvnModal && (\n          <Modal classes=\"bvn-active\" onClose={this.toggleBvnModal}>\n            <div className=\"text-center\">\n              <h3 className=\"text-deep-blue\">\n                Please Setup your BVN to continue\n              </h3>\n              <button\n                className=\"btn btn-primary btn-sm btn-block mt-4\"\n                onClick={this.handleBvnSetup}\n              >\n                Setup BVN\n              </button>\n            </div>\n          </Modal>\n        )}\n        <div>\n          <h2 className=\"section-header\">Employment Details</h2>\n          <p className=\"section-description\">We’d like to know what you do.</p>\n          <form onSubmit={this.handleSubmit} className=\"section-form\">\n            {status !== \"retired\" && status !== \"student\" && <CustomInput\n              name=\"qualification\"\n              label=\"Level of Qualification\"\n              type=\"select\"\n              options={qualificationOption}\n              value={qualification}\n              onChange={this.handleQualificationChange}\n              error={\n                errors\n                  ? errors.qualification\n                  : errorObject && errorObject[\"qualification\"]\n              }\n            />}\n            <CustomInput\n              name=\"status\"\n              label=\"Employment Status\"\n              type=\"select\"\n              options={employmentOption}\n              value={status}\n              onChange={this.handleStatusChange}\n              error={\n                errors ? errors.status : errorObject && errorObject[\"status\"]\n              }\n            />\n            {status === \"employed\" && <CustomInput\n              name=\"occupation\"\n              label=\"Occupation\"\n              value={occupation}\n              onChange={this.handleChange}\n              error={\n                errors\n                  ? errors.occupation\n                  : errorObject && errorObject[\"occupation\"]\n              }\n            />}\n            {status === \"employed\" && <CustomInput\n              name=\"appointmentDate\"\n              label=\"Appointment Date\"\n              value={appointmentDate}\n              type=\"date\"\n              onChange={(date) =>\n                this.handleChangeDate(\"appointmentDate\", date)\n              }\n              error={\n                errors\n                  ? errors.appointmentDate\n                  : errorObject && errorObject[\"appointmentDate\"]\n              }\n              maxDate={new Date()}\n            />}\n            {(status === \"employed\" || status === \"self-employed\") && <CustomInput\n              name=\"companyName\"\n              label=\"Company Name\"\n              value={companyName}\n              onChange={this.handleChange}\n              error={\n                errors\n                  ? errors.companyName\n                  : errorObject && errorObject[\"companyName\"]\n              }\n            />}\n            {(status === \"employed\" || status === \"self-employed\") && <CustomInput\n              name=\"companyAddress\"\n              label=\"Company Address\"\n              value={companyAddress}\n              onChange={this.handleChange}\n              error={\n                errors\n                  ? errors.companyAddress\n                  : errorObject && errorObject[\"companyAddress\"]\n              }\n            />}\n            {(status === \"employed\" || status === \"self-employed\") && <CustomInput\n              name=\"companyType\"\n              label=\"Company Type\"\n              type=\"select\"\n              options={industiesList}\n              value={companyType}\n              onChange={this.handleChange}\n              error={\n                errors\n                  ? errors.companyType\n                  : errorObject && errorObject[\"companyType\"]\n              }\n            />}\n            {status === \"employed\" && <CustomInput\n              name=\"officialPhoneNumber\"\n              label=\"Official Phone Number\"\n              type=\"phone\"\n              value={officialPhoneNumber}\n              countryCodeValue={countryCode}\n              onChange={this.handleChange}\n              error={\n                errors\n                  ? errors.officialPhoneNumber\n                  : errorObject && errorObject[\"officialPhoneNumber\"]\n              }\n            />}\n            {status === \"employed\" && <CustomInput\n              name=\"officialEmailAddress\"\n              label=\"Official Email Address\"\n              value={officialEmailAddress}\n              onChange={this.handleChange}\n              error={\n                errors\n                  ? errors.officialEmailAddress\n                  : errorObject && errorObject[\"officialEmailAddress\"]\n              }\n            />}\n            <div className=\"section-form__button-area\">\n              {error && typeof error === \"string\" && (\n                <p className=\"text-error text-left\">{error}</p>\n              )}\n              {data && (\n                <Alert alert={{ type: \"success\", message: data.message }} />\n              )}\n              <button className=\"btn-default\" disabled={loading}>\n                Save changes\n                {loading && (\n                  <div className=\"spinner-border spinner-border-white spinner-border-sm ml-2\"></div>\n                )}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const {\n    app: {\n      profile: {\n        userProfile: { data: userData },\n        employment: { error, data },\n      },\n    },\n  } = state;\n  return {\n    loading: getActionLoadingState(state, actionTypes.ADD_EMPLOYMENT_REQUEST),\n    error,\n    data,\n    isBvnActive: userData && userData.bvn ? true : false,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addEmploymentDetails: (payload) => dispatch(addEmploymentDetails(payload)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(EmploymentDetails)\n);\n"]},"metadata":{},"sourceType":"module"}