{"ast":null,"code":"var _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Support/SingleTicket/index.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport actionTypes from \"#/store/support/actionTypes\";\nimport { getSingleTicket, sendMessage } from '#/store/support/actions';\nimport Back from '#/components/Back';\nimport MessageItem from '#/components/MessageItem';\nimport Attachment from \"#/assets/icons/attachment.svg\";\nimport SendMessage from \"#/assets/icons/send-message.svg\";\nimport { validateFields, serializeErrors } from '#/utils';\nimport './style.scss';\nimport Modal from '#/components/Modal';\n\nclass SingleTicket extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: '',\n      files: [],\n      fileNames: [],\n      messages: [],\n      image: '',\n      showImageModal: false\n    };\n    this.imgRef = React.createRef();\n\n    this.updateMessages = messages => {\n      this.setState({\n        messages: [...this.state.messages, ...messages]\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n\n      if (name === 'message' && event.keyCode === 13) {\n        return this.submitMessage();\n      }\n    };\n\n    this.handleFileClick = e => {\n      e.preventDefault();\n      this.imgRef.current.click();\n    };\n\n    this.handleImageSelect = event => {\n      event.persist();\n      const {\n        target\n      } = event;\n      const {\n        fileNames,\n        files\n      } = this.state;\n\n      if (target.files[0]) {\n        this.setState({\n          files: [...files, ...target.files],\n          fileNames: [...fileNames, ...target.files]\n        });\n      }\n    };\n\n    this.handleShowImage = image => {\n      this.setState({\n        image\n      }, () => {\n        this.toggleImageModal();\n      });\n    };\n\n    this.removeAttachment = index => {\n      const {\n        files\n      } = this.state;\n      const updatedFiles = [...files].filter((v, i) => i !== index);\n      this.setState({\n        files: updatedFiles\n      });\n    };\n\n    this.submitMessage = event => {\n      event.preventDefault();\n      const {\n        sendMessage,\n        user\n      } = this.props;\n      const {\n        params\n      } = this.props.match;\n      const {\n        message,\n        files,\n        messages\n      } = this.state;\n      const data = this.state;\n      const required = ['message'];\n      const errors = validateFields(data, required);\n\n      if (Object.keys(errors).length > 0 && !files) {\n        return;\n      }\n\n      const formData = new FormData();\n\n      for (var x = 0; x < files.length; x++) {\n        formData.append(files.length > 1 ? 'attachment' : 'attachment[]', files[x]);\n      }\n\n      formData.append('message', message);\n      sendMessage(params.ticketId, formData).then(data => {\n        const messageItem = { ...data,\n          user: {\n            picture: user.pictureUrl,\n            isStaff: 0\n          }\n        };\n        this.setState({\n          messages: [...messages, messageItem],\n          message: '',\n          files: [],\n          fileNames: []\n        });\n      });\n    };\n\n    this.toggleImageModal = () => {\n      this.setState(prevState => ({\n        showImageModal: !prevState.showImageModal\n      }));\n    };\n  }\n\n  componentDidMount() {\n    const {\n      params\n    } = this.props.match;\n    this.props.getSingleTicket(params.ticketId).then(data => {\n      var _data$ticket;\n\n      this.updateMessages((_data$ticket = data.ticket) === null || _data$ticket === void 0 ? void 0 : _data$ticket.ticketResponses);\n    });\n  }\n\n  render() {\n    const {\n      ticket,\n      loading,\n      sendLoading,\n      error\n    } = this.props;\n    const {\n      message,\n      files,\n      messages,\n      image,\n      showImageModal\n    } = this.state;\n    const errorObject = serializeErrors(error);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"single-ticket-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Back, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }), showImageModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleImageModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      alt: \"attachment\",\n      className: \"img-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"border p-4 text-center mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-primary text-primary spinner-border-md mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-deep-blue text-medium mb-0 ticket-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, ticket && ticket.title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, messages && messages.length > 0 && messages.map(message => /*#__PURE__*/React.createElement(MessageItem, {\n      message: message,\n      key: message.id,\n      viewImage: this.handleShowImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \" border message-area p-3 mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      placeholder: \"Send a message...\",\n      className: \"border-0 w-100\",\n      value: message,\n      name: \"message\",\n      onChange: this.handleChange,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-center cursor-pointer attachment-section\",\n      onClick: this.handleFileClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Attachment,\n      alt: \"attachment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bg-default d-flex align-items-center justify-content-center send-message cursor-pointer\",\n      onClick: this.submitMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, !sendLoading && /*#__PURE__*/React.createElement(\"img\", {\n      src: SendMessage,\n      alt: \"send\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 32\n      }\n    }), sendLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border text-white spinner-border-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, files && files.length > 0 && files.map((file, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-items\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, file && file.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-x-small mb-0 remove-item\",\n      onClick: () => this.removeAttachment(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, \"remove\"))))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, errorObject && errorObject['attachment.0']), error && typeof error === 'string' && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 48\n      }\n    }, error), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"file\",\n      ref: this.imgRef,\n      accept: \"image/png, image/jpeg, application/pdf\",\n      onChange: this.handleImageSelect,\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    app: {\n      support: {\n        ticket,\n        error\n      },\n      profile: {\n        userProfile: {\n          data: user\n        }\n      }\n    }\n  } = state;\n  return {\n    loading: getActionLoadingState(state, actionTypes.GET_SINGLE_TICKET_REQUEST),\n    sendLoading: getActionLoadingState(state, actionTypes.SEND_MESSAGE_REQUEST),\n    ticket,\n    user,\n    error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getSingleTicket: id => dispatch(getSingleTicket(id)),\n    sendMessage: (id, payload) => dispatch(sendMessage(id, payload))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SingleTicket));","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Support/SingleTicket/index.js"],"names":["React","connect","withRouter","getActionLoadingState","actionTypes","getSingleTicket","sendMessage","Back","MessageItem","validateFields","serializeErrors","Modal","SingleTicket","Component","state","message","files","fileNames","messages","image","showImageModal","imgRef","createRef","updateMessages","setState","handleChange","event","name","value","target","keyCode","submitMessage","handleFileClick","e","preventDefault","current","click","handleImageSelect","persist","handleShowImage","toggleImageModal","removeAttachment","index","updatedFiles","filter","v","i","user","props","params","match","data","required","errors","Object","keys","length","formData","FormData","x","append","ticketId","then","messageItem","picture","pictureUrl","isStaff","prevState","componentDidMount","ticket","ticketResponses","render","loading","sendLoading","error","errorObject","title","map","id","Attachment","SendMessage","file","mapStateToProps","app","support","profile","userProfile","GET_SINGLE_TICKET_REQUEST","SEND_MESSAGE_REQUEST","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport actionTypes from \"#/store/support/actionTypes\";\nimport { getSingleTicket, sendMessage } from '#/store/support/actions'\nimport Back from '#/components/Back';\nimport MessageItem from '#/components/MessageItem';\nimport Attachment from '#/assets/icons/attachment.svg';\nimport SendMessage from '#/assets/icons/send-message.svg';\nimport { validateFields , serializeErrors} from '#/utils'\nimport './style.scss';\nimport Modal from '#/components/Modal';\n\nclass SingleTicket extends React.Component {\n\n  state = {\n    message: '',\n    files: [],\n    fileNames: [],\n    messages: [],\n    image: '',\n    showImageModal: false,\n    }\n  imgRef = React.createRef();\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    this.props.getSingleTicket(params.ticketId)\n      .then(data => {\n        this.updateMessages(data.ticket?.ticketResponses);\n      })\n  }\n\n  updateMessages = (messages) => {\n    this.setState({ messages: [...this.state.messages, ...messages] })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target\n    this.setState({ [name]: value });\n\n    if(name === 'message' && event.keyCode === 13){\n      return this.submitMessage()\n    }\n  }\n\n  handleFileClick = (e) => {\n    e.preventDefault();\n    this.imgRef.current.click()\n  }\n\n  handleImageSelect = (event) => {\n    event.persist()\n    const { target } = event;\n    const { fileNames, files } = this.state\n\n    if(target.files[0]){\n      this.setState({ files: [...files, ...target.files], fileNames: [...fileNames, ...target.files]})\n    }\n  }\n\n  handleShowImage = (image) => {\n    this.setState({ image }, () => {\n      this.toggleImageModal()\n    })\n  }\n\n  removeAttachment = (index) => {\n    const { files } = this.state;\n    const updatedFiles = [...files].filter((v, i) => i !==index);\n    \n    this.setState({ files: updatedFiles})\n  }\n\n  submitMessage = (event) => {\n    event.preventDefault()\n    const { sendMessage, user } = this.props;\n    const { params } = this.props.match;\n    const { message, files, messages } = this.state;\n\n    const data = this.state;\n    const required = [ 'message'];\n    const errors = validateFields(data, required)\n\n    if (Object.keys(errors).length > 0 && !files) {\n      return;\n    }\n\n    const formData = new FormData();\n\n    for(var x = 0; x < files.length; x++) {\n      formData.append(files.length > 1 ? 'attachment' : 'attachment[]', files[x])\n    }\n    formData.append('message', message);\n\n    sendMessage(params.ticketId, formData)\n      .then(data => {\n        const messageItem = {...data,\n          user: { picture: user.pictureUrl, isStaff: 0, }\n        }\n        this.setState({ messages: [...messages, messageItem ], message: '', files: [], fileNames: [] })\n      });\n  }\n  \n  toggleImageModal = () => {\n    this.setState(prevState => ({ showImageModal: !prevState.showImageModal }));\n  }\n\n  render() {\n    const { ticket, loading, sendLoading, error } = this.props;\n    const { message, files, messages, image, showImageModal } = this.state;\n    const errorObject = serializeErrors(error);\n\n    return (\n      <div className=\"single-ticket-page\">\n        <Back/>\n        {showImageModal && \n          <Modal onClose={this.toggleImageModal}>\n            <img src={image} alt=\"attachment\" className=\"img-fluid\" />\n          </Modal>\n        }\n        <div className=\"border p-4 text-center mt-3\">\n          {loading &&\n            <div className=\"text-center\">\n              <div className=\"spinner-border spinner-border-primary text-primary spinner-border-md mr-2\"></div>\n            </div>\n          }\n          <h3 className=\"text-deep-blue text-medium mb-0 ticket-title\">\n            {ticket && ticket.title}\n          </h3>\n        </div>\n        <div className=\"message-container\">\n          {messages && messages.length > 0 && messages.map(message => (\n            <MessageItem message={message} key={message.id} viewImage={this.handleShowImage}/>\n            ))\n          }\n        </div>\n        <div className=\" border message-area p-3 mt-2\">\n          <div className=\"d-flex w-100\">\n            <form onSubmit={this.submitMessage}>\n              <textarea\n                placeholder=\"Send a message...\"\n                className=\"border-0 w-100\"\n                value={message}\n                name=\"message\"\n                onChange={this.handleChange}\n                type=\"text\"\n              />\n            </form>\n            \n            <div className=\"d-flex align-items-center justify-content-center cursor-pointer attachment-section\" onClick={this.handleFileClick}>\n              <img src={Attachment} alt=\"attachment\"/>\n            </div>\n            <div className=\"bg-default d-flex align-items-center justify-content-center send-message cursor-pointer\" onClick={this.submitMessage}>\n              {!sendLoading && <img src={SendMessage} alt=\"send\"/> }\n              {sendLoading &&\n              <div className=\"spinner-border text-white spinner-border-sm\"></div>\n              }\n            </div>\n          </div>\n          <div className=\"d-flex\">\n              {files && files.length > 0  && \n              files.map((file, index) => (\n                <div className=\"file-items\" key={index}>\n                  <p>{file && file.name}</p>\n                  <p className=\"text-x-small mb-0 remove-item\" onClick={() => this.removeAttachment(index)}>remove</p>\n                </div>\n              ))\n              }\n          </div>\n        </div>\n        <p className=\"text-error text-left\">{errorObject && errorObject['attachment.0']}</p>\n        {error && typeof error === 'string' && <p className=\"text-error mt-2\">{error}</p>}\n        <input type=\"file\" className=\"file\" ref={this.imgRef} accept=\"image/png, image/jpeg, application/pdf\" onChange={this.handleImageSelect} multiple/> \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { app: { support: { ticket, error }, profile: { userProfile: { data: user } } } } = state;\n\n  return {\n    loading: getActionLoadingState(state, actionTypes.GET_SINGLE_TICKET_REQUEST),\n    sendLoading: getActionLoadingState(state, actionTypes.SEND_MESSAGE_REQUEST),\n    ticket,\n    user,\n    error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getSingleTicket: (id) => dispatch(getSingleTicket(id)),\n    sendMessage: (id, payload) => dispatch(sendMessage(id, payload)),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SingleTicket));\n"]},"metadata":{},"sourceType":"module"}