{"ast":null,"code":"var _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/Login/ForgotPassword/index.js\";\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { sendResetLink } from \"#/store/login/actions\";\nimport actionTypes from \"#/store/login/actionTypes\";\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport { validateFields, serializeErrors } from '#/utils';\nimport Textbox from '#/components/Textbox';\nimport AuthNav from '#/components/AuthNav';\nimport './style.scss';\n\nclass ForgotPassword extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      errors: null\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        sendResetLink,\n        history\n      } = this.props;\n      const {\n        email\n      } = this.state;\n      this.setState({\n        errors: null\n      });\n      const data = this.state;\n      const required = ['email'];\n      const errors = validateFields(data, required);\n\n      if (Object.keys(errors).length > 0) {\n        return this.setState({\n          errors\n        });\n      }\n\n      sendResetLink(email, history);\n    };\n  }\n\n  render() {\n    const {\n      email,\n      errors\n    } = this.state;\n    const {\n      loading,\n      error\n    } = this.props;\n    const errorObject = serializeErrors(error);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"forgot-password-page text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AuthNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 left-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Reset your password\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottom-section mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }, \"Cancel password reset? \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 44\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 39\n      }\n    }, \"Sign in\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-7 right-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Textbox, {\n      onChange: this.handleChange,\n      name: \"email\",\n      value: email,\n      label: \"Email\",\n      placeholder: \"Email address\",\n      boxClasses: \"mt-3\",\n      type: \"email\",\n      error: errors ? errors.email : errorObject && errorObject['email'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary w-100 mt-3\",\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, \"Send me a reset link\", loading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 23\n      }\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    auth: {\n      login: {\n        error\n      }\n    }\n  } = state;\n  return {\n    loading: getActionLoadingState(state, actionTypes.SEND_RESET_LINK_REQUEST),\n    error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sendResetLink: (email, history) => dispatch(sendResetLink(email, history))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ForgotPassword));","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/Login/ForgotPassword/index.js"],"names":["React","Link","withRouter","connect","sendResetLink","actionTypes","getActionLoadingState","validateFields","serializeErrors","Textbox","AuthNav","ForgotPassword","Component","state","email","errors","handleChange","event","name","value","target","setState","handleSubmit","preventDefault","history","props","data","required","Object","keys","length","render","loading","error","errorObject","mapStateToProps","auth","login","SEND_RESET_LINK_REQUEST","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport { sendResetLink  } from \"#/store/login/actions\";\nimport actionTypes from \"#/store/login/actionTypes\";\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport { validateFields, serializeErrors } from '#/utils';\nimport Textbox from '#/components/Textbox';\nimport AuthNav from '#/components/AuthNav';\nimport './style.scss';\n\nclass ForgotPassword extends React.Component {\n  state = {\n    email: '',\n    errors: null,\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { sendResetLink, history } = this.props;\n    const { email } = this.state;\n\n    this.setState({ errors: null });\n\n    const data = this.state;\n    const required = [ 'email' ];\n    const errors = validateFields(data, required)\n\n    if (Object.keys(errors).length > 0) {\n      return this.setState({ errors });\n    }\n\n    sendResetLink(email, history);\n  }\n\n  render () {\n    const { email, errors } = this.state;\n    const { loading, error } = this.props;\n    const errorObject = serializeErrors(error);\n\n    return (\n      <div className=\"forgot-password-page text-center\">\n        <AuthNav />\n        <div className=\"box\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-5 left-section\">\n                <h3 className=\"mt-4\">Reset your password</h3>\n                <div className=\"bottom-section mt-4\">\n                  <p>\n                    Cancel password reset? <span></span>\n                    <Link to=\"/login\"><b>Sign in</b></Link>\n                  </p>\n                </div>\n              </div>\n              <div className=\"col-md-7 right-section\">\n                <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\n                  <Textbox\n                    onChange={this.handleChange}\n                    name=\"email\"\n                    value={email}\n                    label=\"Email\"\n                    placeholder=\"Email address\"\n                    boxClasses=\"mt-3\"\n                    type=\"email\"\n                    error={errors ? errors.email : (errorObject && errorObject['email'])}\n\n                  />\n                  <button className=\"btn btn-sm btn-primary w-100 mt-3\" disabled={loading}>\n                    Send me a reset link\n                    {loading &&\n                      <div className=\"spinner-border spinner-border-white spinner-border-sm ml-2\"></div>\n                    }\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { auth: { login: { error } }  } = state;\n\n  return {\n    loading: getActionLoadingState(state, actionTypes.SEND_RESET_LINK_REQUEST),\n    error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendResetLink: (email, history) => dispatch(sendResetLink(email, history)),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ForgotPassword));\n"]},"metadata":{},"sourceType":"module"}