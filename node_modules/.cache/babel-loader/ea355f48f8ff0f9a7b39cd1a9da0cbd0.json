{"ast":null,"code":"import axios from 'axios';\nimport CONFIG from '#/config';\nimport * as actions from \"./actionTypes\";\nimport { logout, updateUser } from \"#/store/user/actions\";\nimport { showAlert } from '#/store/ui/actions';\n\nconst clearError = () => {\n  return {\n    type: actions.CLEAR_ERROR\n  };\n};\n\nconst getTermedInvestmentsRequest = () => {\n  return {\n    type: actions.GET_ALL_INVESTMENTS_REQUEST\n  };\n};\n\nconst getTermedInvestmentsrror = message => {\n  return {\n    type: actions.GET_ALL_INVESTMENTS_ERROR,\n    error: message\n  };\n};\n\nconst getTermedInvestmentsSuccess = data => {\n  return {\n    type: actions.GET_ALL_INVESTMENTS_SUCCESS,\n    data\n  };\n};\n\nexport const getTermedInvestments = () => {\n  return (dispatch, getState) => {\n    dispatch(getTermedInvestmentsRequest());\n    const {\n      token\n    } = getState().user;\n    axios.get(`${CONFIG.BASE_URL}/services/termed/investments?limit=40&page=1`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      }\n    }).then(response => {\n      response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n      dispatch(getTermedInvestmentsSuccess(response.data));\n    }).catch(({\n      response\n    }) => {\n      response && response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if (response && [400, 404, 422, 403].includes(response.status)) {\n        return dispatch(getTermedInvestmentsrror(response.data.error ? response.data.error : response.data.message));\n      }\n\n      if (response && [401].includes(response.status)) {\n        dispatch(showAlert({\n          type: 'error',\n          message: 'Your session has expired'\n        }));\n        return setTimeout(() => dispatch(logout()), 2000);\n      }\n\n      if (response && response.status >= 500) {\n        return dispatch(getTermedInvestmentsrror('Oops! We did something wrong.'));\n      }\n\n      return dispatch(getTermedInvestmentsrror('Oops! We did something wrong.'));\n    });\n  };\n};\n\nconst getInvestmentDetailsRequest = () => {\n  return {\n    type: actions.GET_INVESTMENT_DETAILS_REQUEST\n  };\n};\n\nconst getInvestmentDetailsError = message => {\n  return {\n    type: actions.GET_INVESTMENT_DETAILS_ERROR,\n    error: message\n  };\n};\n\nconst getInvestmentDetailsSuccess = data => {\n  return {\n    type: actions.GET_INVESTMENT_DETAILS_SUCCESS,\n    data\n  };\n};\n\nexport const getInvestmentDetails = id => {\n  return (dispatch, getState) => {\n    dispatch(getInvestmentDetailsRequest());\n    const {\n      token\n    } = getState().user;\n    axios.get(`${CONFIG.BASE_URL}/services/${id}/investments`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      }\n    }).then(response => {\n      response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n      dispatch(getInvestmentDetailsSuccess(response.data));\n    }).catch(({\n      response\n    }) => {\n      response && response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if (response && [400, 404, 422, 403].includes(response.status)) {\n        return dispatch(getInvestmentDetailsError(response.data.error ? response.data.error : response.data.message));\n      }\n\n      if (response && [401].includes(response.status)) {\n        dispatch(showAlert({\n          type: 'error',\n          message: 'Your session has expired'\n        }));\n        return setTimeout(() => dispatch(logout()), 2000);\n      }\n\n      if (response && response.status >= 500) {\n        return dispatch(getInvestmentDetailsError('Oops! We did something wrong.'));\n      }\n\n      return dispatch(getInvestmentDetailsError('Oops! We did something wrong.'));\n    });\n  };\n}; //book new investment\n\nconst bookNewInvestmentRequest = () => {\n  return {\n    type: actions.BOOK_NEW_INVESTMENT_REQUEST\n  };\n};\n\nconst bookNewInvestmentError = message => {\n  return {\n    type: actions.BOOK_NEW_INVESTMENT_ERROR,\n    error: message\n  };\n};\n\nconst bookNewInvestmentSuccess = data => {\n  return {\n    type: actions.BOOK_NEW_INVESTMENT_SUCCESS,\n    data\n  };\n};\n\nexport const bookNewInvestment = data => {\n  return (dispatch, getState) => {\n    dispatch(bookNewInvestmentRequest());\n    const {\n      type,\n      payload,\n      id\n    } = data;\n    const {\n      token\n    } = getState().user;\n    return new Promise(resolve => {\n      axios.post(`${CONFIG.BASE_URL}/services/${id}/${type}/orders`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      }).then(response => {\n        var _response$headers;\n\n        ((_response$headers = response.headers) === null || _response$headers === void 0 ? void 0 : _response$headers.authorization) && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n        dispatch(bookNewInvestmentSuccess(response.data));\n        resolve(response.data.data);\n      }).catch(error => {\n        error.response && dispatch(updateUser({\n          token: error.response.headers.authorization\n        }));\n\n        if (error.response && [400, 404, 422, 403].includes(error.response.status)) {\n          setTimeout(() => dispatch(clearError()), 5000);\n          return dispatch(bookNewInvestmentError(error.response.data.error ? error.response.data.error : error.response.data.message));\n        }\n\n        if (error.response && [401].includes(error.response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (error.response && error.response.status >= 500) {\n          dispatch(bookNewInvestmentError('Oops! We did something wrong.'));\n          return setTimeout(() => dispatch(clearError()), 5000);\n        }\n\n        dispatch(bookNewInvestmentError('Oops! We did something wrong.'));\n        return setTimeout(() => dispatch(clearError()), 5000);\n      });\n    });\n  };\n}; //book new investment with payment\n\nconst bookInvestmentWithPayRequest = () => {\n  return {\n    type: actions.BOOK_INVESTMENT_WITH_PAY_REQUEST\n  };\n};\n\nconst bookInvestmentWithPayError = message => {\n  return {\n    type: actions.BOOK_INVESTMENT_WITH_PAY_ERROR,\n    error: message\n  };\n};\n\nconst bookInvestmentWithPaySuccess = data => {\n  return {\n    type: actions.BOOK_INVESTMENT_WITH_PAY_SUCCESS,\n    data\n  };\n};\n\nexport const bookInvestmentWithPay = data => {\n  return (dispatch, getState) => {\n    dispatch(bookInvestmentWithPayRequest());\n    const {\n      type,\n      payload,\n      id\n    } = data;\n    const {\n      token\n    } = getState().user;\n    return new Promise(resolve => {\n      axios.post(`${CONFIG.BASE_URL}/services/${id}/${type}/investment/pay`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      }).then(response => {\n        var _response$headers2, _response$data$data, _response$data$data$o;\n\n        ((_response$headers2 = response.headers) === null || _response$headers2 === void 0 ? void 0 : _response$headers2.authorization) && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n        dispatch(bookInvestmentWithPaySuccess(response.data));\n        resolve(response.data.data);\n\n        if ((_response$data$data = response.data.data) === null || _response$data$data === void 0 ? void 0 : (_response$data$data$o = _response$data$data.order) === null || _response$data$data$o === void 0 ? void 0 : _response$data$data$o.investment.authorization_url) {\n          return window.location = response.data.data.order.investment.authorization_url;\n        }\n      }).catch(({\n        response\n      }) => {\n        response && (response === null || response === void 0 ? void 0 : response.headers.authorization) && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if (response && [400, 404, 422, 403].includes(response.status)) {\n          dispatch(bookInvestmentWithPayError(response.data.error ? response.data.error : response.data.message));\n          return setTimeout(() => dispatch(clearError()), 5000);\n        }\n\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (response && response.status >= 500) {\n          dispatch(bookInvestmentWithPayError('Oops! We did something wrong.'));\n          return setTimeout(() => dispatch(clearError()), 5000);\n        }\n\n        dispatch(bookInvestmentWithPayError('Oops! We did something wrong.'));\n        return setTimeout(() => dispatch(clearError()), 5000);\n      });\n    });\n  };\n}; //LIQUIDATE investment\n\nconst liquidateInvestmentRequest = () => {\n  return {\n    type: actions.LIQUIDATE_INVESTMENT_REQUEST\n  };\n};\n\nconst liquidateInvestmentError = message => {\n  return {\n    type: actions.LIQUIDATE_INVESTMENT_ERROR,\n    error: message\n  };\n};\n\nconst liquidateInvestmentSuccess = data => {\n  return {\n    type: actions.LIQUIDATE_INVESTMENT_SUCCESS,\n    data\n  };\n};\n\nexport const liquidateInvestment = (id, payload) => {\n  return (dispatch, getState) => {\n    dispatch(liquidateInvestmentRequest());\n    const {\n      token\n    } = getState().user;\n    return new Promise(resolve => {\n      axios.post(`${CONFIG.BASE_URL}/services/investments/${id}/terminate`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      }).then(response => {\n        var _response$headers3, _response$data;\n\n        ((_response$headers3 = response.headers) === null || _response$headers3 === void 0 ? void 0 : _response$headers3.authorization) && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n        dispatch(liquidateInvestmentSuccess(response.data));\n        dispatch(showAlert({\n          type: 'success',\n          message: (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message\n        }));\n        resolve(response.data.data);\n      }).catch(({\n        response\n      }) => {\n        response && (response === null || response === void 0 ? void 0 : response.headers.authorization) && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if (response && [400, 404, 422, 403].includes(response.status)) {\n          dispatch(liquidateInvestmentError(response.data.error ? response.data.error : response.data.message));\n          return setTimeout(() => dispatch(clearError()), 5000);\n        }\n\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (response && response.status >= 500) {\n          return dispatch(liquidateInvestmentError('Oops! We did something wrong.'));\n        }\n\n        return dispatch(liquidateInvestmentError('Oops! We did something wrong.'));\n      });\n    });\n  };\n}; //LIQUIDATION DETAILS investment\n\nconst getLiquidationDetailsRequest = () => {\n  return {\n    type: actions.GET_LIQUIDATION_DETAILS_REQUEST\n  };\n};\n\nconst getLiquidationDetailsError = message => {\n  return {\n    type: actions.GET_LIQUIDATION_DETAILS_ERROR,\n    error: message\n  };\n};\n\nconst getLiquidationDetailsSuccess = data => {\n  return {\n    type: actions.GET_LIQUIDATION_DETAILS_SUCCESS,\n    data\n  };\n};\n\nexport const getLiquidationDetails = payload => {\n  return (dispatch, getState) => {\n    dispatch(getLiquidationDetailsRequest());\n    const {\n      token\n    } = getState().user;\n    return new Promise(resolve => {\n      axios.post(`${CONFIG.BASE_URL}/services/investments/liquidation-details`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      }).then(response => {\n        var _response$headers4;\n\n        ((_response$headers4 = response.headers) === null || _response$headers4 === void 0 ? void 0 : _response$headers4.authorization) && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n        dispatch(getLiquidationDetailsSuccess(response.data));\n        resolve(response.data.data);\n      }).catch(({\n        response\n      }) => {\n        response && (response === null || response === void 0 ? void 0 : response.headers.authorization) && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if (response && [400, 404, 422, 403].includes(response.status)) {\n          dispatch(getLiquidationDetailsError(response.data.error ? response.data.error : response.data.message));\n          return setTimeout(() => dispatch(clearError()), 5000);\n        }\n\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (response && response.status >= 500) {\n          return dispatch(getLiquidationDetailsError('Oops! We did something wrong.'));\n        }\n\n        return dispatch(getLiquidationDetailsError('Oops! We did something wrong.'));\n      });\n    });\n  };\n}; //get recommended investments\n\nconst getRecommendedInvestmentsRequest = () => {\n  return {\n    type: actions.GET_RECOMMENDED_INVESTMENTS_REQUEST\n  };\n};\n\nconst getRecommendedInvestmentsError = message => {\n  return {\n    type: actions.GET_RECOMMENDED_INVESTMENTS_ERROR,\n    error: message\n  };\n};\n\nconst getRecommendedInvestmentsSuccess = data => {\n  return {\n    type: actions.GET_RECOMMENDED_INVESTMENTS_SUCCESS,\n    data\n  };\n};\n\nexport const getRecommendedInvestments = (id, payload) => {\n  return (dispatch, getState) => {\n    dispatch(getRecommendedInvestmentsRequest());\n    const {\n      token\n    } = getState().user;\n    return new Promise(resolve => {\n      axios.get(`${CONFIG.BASE_URL}/segments/recommendations`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      }).then(response => {\n        var _response$headers5;\n\n        ((_response$headers5 = response.headers) === null || _response$headers5 === void 0 ? void 0 : _response$headers5.authorization) && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n        dispatch(getRecommendedInvestmentsSuccess(response.data));\n        resolve(response.data.data);\n      }).catch(({\n        response\n      }) => {\n        response && (response === null || response === void 0 ? void 0 : response.headers.authorization) && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if (response && [400, 404, 422, 403].includes(response.status)) {\n          return dispatch(getRecommendedInvestmentsError(response.data.error ? response.data.error : response.data.message)); // return setTimeout(() => dispatch(clearError()), 5000)\n        }\n\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (response && response.status >= 500) {\n          return dispatch(getRecommendedInvestmentsError('Oops! We did something wrong.'));\n        }\n\n        return dispatch(getRecommendedInvestmentsError('Oops! We did something wrong.'));\n      });\n    });\n  };\n}; //CALCULATE investment\n\nconst calculateInvestmentRequest = () => {\n  return {\n    type: actions.CALCULATE_INVESTMENT_REQUEST\n  };\n};\n\nconst calculateInvestmentError = message => {\n  return {\n    type: actions.CALCULATE_INVESTMENT_ERROR,\n    error: message\n  };\n};\n\nconst calculateInvestmentSuccess = data => {\n  return {\n    type: actions.CALCULATE_INVESTMENT_SUCCESS,\n    data\n  };\n};\n\nexport const calculateInvestment = payload => {\n  return (dispatch, getState) => {\n    dispatch(calculateInvestmentRequest());\n    const {\n      token\n    } = getState().user;\n    return new Promise(resolve => {\n      axios.post(`${CONFIG.BASE_URL}/services/investments/calculator`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      }).then(response => {\n        var _response$headers6;\n\n        ((_response$headers6 = response.headers) === null || _response$headers6 === void 0 ? void 0 : _response$headers6.authorization) && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n        dispatch(calculateInvestmentSuccess(response.data));\n        resolve(response.data.data);\n      }).catch(({\n        response\n      }) => {\n        response && (response === null || response === void 0 ? void 0 : response.headers.authorization) && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if (response && [400, 404, 422, 403].includes(response.status)) {\n          dispatch(calculateInvestmentError(response.data.error ? response.data.error : response.data.message));\n          return setTimeout(() => dispatch(clearError()), 5000);\n        }\n\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (response && response.status >= 500) {\n          dispatch(calculateInvestmentError('Oops! We did something wrong.'));\n          return setTimeout(() => dispatch(clearError()), 5000);\n        }\n\n        dispatch(calculateInvestmentError('Oops! We did something wrong.'));\n        return setTimeout(() => dispatch(clearError()), 5000);\n      });\n    });\n  };\n}; //CALCULATE investment\n\nconst disableAutochargeRequest = () => {\n  return {\n    type: actions.DISABLE_AUTOCHARGE_REQUEST\n  };\n};\n\nconst disableAutochargeError = message => {\n  return {\n    type: actions.DISABLE_AUTOCHARGE_ERROR,\n    error: message\n  };\n};\n\nconst disableAutochargeSuccess = data => {\n  return {\n    type: actions.DISABLE_AUTOCHARGE_SUCCESS,\n    data\n  };\n};\n\nexport const disableAutocharge = id => {\n  return (dispatch, getState) => {\n    dispatch(disableAutochargeRequest());\n    const {\n      token\n    } = getState().user;\n    return new Promise(resolve => {\n      axios.put(`${CONFIG.BASE_URL}/services/investments/${id}/disable-autocharge`, {}, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      }).then(response => {\n        var _response$headers7;\n\n        ((_response$headers7 = response.headers) === null || _response$headers7 === void 0 ? void 0 : _response$headers7.authorization) && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n        dispatch(showAlert({\n          type: 'success',\n          message: response.data.message\n        }));\n        dispatch(disableAutochargeSuccess(response.data));\n        resolve(response.data.data);\n      }).catch(({\n        response\n      }) => {\n        response && (response === null || response === void 0 ? void 0 : response.headers.authorization) && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if (response && [400, 404, 422, 403].includes(response.status)) {\n          dispatch(disableAutochargeError(response.data.error ? response.data.error : response.data.message));\n          return setTimeout(() => dispatch(clearError()), 5000);\n        }\n\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (response && response.status >= 500) {\n          return dispatch(disableAutochargeError('Oops! We did something wrong.'));\n        }\n\n        return dispatch(disableAutochargeError('Oops! We did something wrong.'));\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/store/investment/actions.js"],"names":["axios","CONFIG","actions","logout","updateUser","showAlert","clearError","type","CLEAR_ERROR","getTermedInvestmentsRequest","GET_ALL_INVESTMENTS_REQUEST","getTermedInvestmentsrror","message","GET_ALL_INVESTMENTS_ERROR","error","getTermedInvestmentsSuccess","data","GET_ALL_INVESTMENTS_SUCCESS","getTermedInvestments","dispatch","getState","token","user","get","BASE_URL","headers","Authorization","then","response","authorization","catch","includes","status","setTimeout","getInvestmentDetailsRequest","GET_INVESTMENT_DETAILS_REQUEST","getInvestmentDetailsError","GET_INVESTMENT_DETAILS_ERROR","getInvestmentDetailsSuccess","GET_INVESTMENT_DETAILS_SUCCESS","getInvestmentDetails","id","bookNewInvestmentRequest","BOOK_NEW_INVESTMENT_REQUEST","bookNewInvestmentError","BOOK_NEW_INVESTMENT_ERROR","bookNewInvestmentSuccess","BOOK_NEW_INVESTMENT_SUCCESS","bookNewInvestment","payload","Promise","resolve","post","bookInvestmentWithPayRequest","BOOK_INVESTMENT_WITH_PAY_REQUEST","bookInvestmentWithPayError","BOOK_INVESTMENT_WITH_PAY_ERROR","bookInvestmentWithPaySuccess","BOOK_INVESTMENT_WITH_PAY_SUCCESS","bookInvestmentWithPay","order","investment","authorization_url","window","location","liquidateInvestmentRequest","LIQUIDATE_INVESTMENT_REQUEST","liquidateInvestmentError","LIQUIDATE_INVESTMENT_ERROR","liquidateInvestmentSuccess","LIQUIDATE_INVESTMENT_SUCCESS","liquidateInvestment","getLiquidationDetailsRequest","GET_LIQUIDATION_DETAILS_REQUEST","getLiquidationDetailsError","GET_LIQUIDATION_DETAILS_ERROR","getLiquidationDetailsSuccess","GET_LIQUIDATION_DETAILS_SUCCESS","getLiquidationDetails","getRecommendedInvestmentsRequest","GET_RECOMMENDED_INVESTMENTS_REQUEST","getRecommendedInvestmentsError","GET_RECOMMENDED_INVESTMENTS_ERROR","getRecommendedInvestmentsSuccess","GET_RECOMMENDED_INVESTMENTS_SUCCESS","getRecommendedInvestments","calculateInvestmentRequest","CALCULATE_INVESTMENT_REQUEST","calculateInvestmentError","CALCULATE_INVESTMENT_ERROR","calculateInvestmentSuccess","CALCULATE_INVESTMENT_SUCCESS","calculateInvestment","disableAutochargeRequest","DISABLE_AUTOCHARGE_REQUEST","disableAutochargeError","DISABLE_AUTOCHARGE_ERROR","disableAutochargeSuccess","DISABLE_AUTOCHARGE_SUCCESS","disableAutocharge","put"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport CONFIG from '#/config';\nimport * as actions from \"./actionTypes\";\nimport { logout, updateUser } from \"#/store/user/actions\";\nimport { showAlert } from '#/store/ui/actions';\n\nconst clearError = () => {\n  return {\n    type: actions.CLEAR_ERROR,\n  }\n}\n\nconst getTermedInvestmentsRequest = () => {\n  return {\n    type: actions.GET_ALL_INVESTMENTS_REQUEST,\n  }\n}\n\nconst getTermedInvestmentsrror = (message) => {\n  return {\n    type: actions.GET_ALL_INVESTMENTS_ERROR,\n    error: message,\n  }\n}\n\nconst getTermedInvestmentsSuccess = (data) => {\n  return {\n    type: actions.GET_ALL_INVESTMENTS_SUCCESS,\n    data,\n  }\n}\n\nexport const getTermedInvestments = () => {\n  return (dispatch, getState) => {\n    dispatch(getTermedInvestmentsRequest());\n\n    const { token } = getState().user;\n\n    axios.get(`${CONFIG.BASE_URL}/services/termed/investments?limit=40&page=1`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    })\n      .then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        dispatch(getTermedInvestmentsSuccess(response.data));\n      })\n      .catch(({ response }) => {\n        response && response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if (response && [400, 404, 422, 403].includes(response.status)) {\n          return dispatch(getTermedInvestmentsrror(response.data.error ? response.data.error : response.data.message));\n        }\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n          return setTimeout(() => dispatch(logout()), 2000)\n        }\n        if (response && response.status >= 500) {\n          return dispatch(getTermedInvestmentsrror('Oops! We did something wrong.'));\n        }\n        return dispatch(getTermedInvestmentsrror('Oops! We did something wrong.'));\n      })\n  }\n}\n\n\nconst getInvestmentDetailsRequest = () => {\n  return {\n    type: actions.GET_INVESTMENT_DETAILS_REQUEST,\n  }\n}\n\nconst getInvestmentDetailsError = (message) => {\n  return {\n    type: actions.GET_INVESTMENT_DETAILS_ERROR,\n    error: message,\n  }\n}\n\nconst getInvestmentDetailsSuccess = (data) => {\n  return {\n    type: actions.GET_INVESTMENT_DETAILS_SUCCESS,\n    data,\n  }\n}\n\nexport const getInvestmentDetails = (id) => {\n  return (dispatch, getState) => {\n    dispatch(getInvestmentDetailsRequest());\n\n    const { token } = getState().user;\n\n    axios.get(`${CONFIG.BASE_URL}/services/${id}/investments`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    })\n      .then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        dispatch(getInvestmentDetailsSuccess(response.data));\n      })\n      .catch(({ response }) => {\n        response && response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if (response && [400, 404, 422, 403].includes(response.status)) {\n          return dispatch(getInvestmentDetailsError(response.data.error ? response.data.error : response.data.message));\n        }\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n          return setTimeout(() => dispatch(logout()), 2000)\n        }\n        if (response && response.status >= 500) {\n          return dispatch(getInvestmentDetailsError('Oops! We did something wrong.'));\n        }\n        return dispatch(getInvestmentDetailsError('Oops! We did something wrong.'));\n      })\n  }\n}\n\n//book new investment\nconst bookNewInvestmentRequest = () => {\n  return {\n    type: actions.BOOK_NEW_INVESTMENT_REQUEST,\n  }\n}\n\nconst bookNewInvestmentError = (message) => {\n  return {\n    type: actions.BOOK_NEW_INVESTMENT_ERROR,\n    error: message,\n  }\n}\n\nconst bookNewInvestmentSuccess = (data) => {\n  return {\n    type: actions.BOOK_NEW_INVESTMENT_SUCCESS,\n    data,\n  }\n}\n\nexport const bookNewInvestment = (data) => {\n  return (dispatch, getState) => {\n    dispatch(bookNewInvestmentRequest());\n    const { type, payload, id } = data;\n    const { token } = getState().user;\n\n    return new Promise((resolve) => {\n      axios.post(`${CONFIG.BASE_URL}/services/${id}/${type}/orders`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(response => {\n          response.headers?.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          dispatch(bookNewInvestmentSuccess(response.data));\n          resolve(response.data.data)\n        })\n        .catch((error) => {\n          error.response && dispatch(updateUser({\n            token: error.response.headers.authorization\n          }))\n          if (error.response && [400, 404, 422, 403].includes(error.response.status)) {\n            setTimeout(() => dispatch(clearError()), 5000)\n            return dispatch(bookNewInvestmentError(error.response.data.error ? error.response.data.error : error.response.data.message));\n          }\n          if (error.response && [401].includes(error.response.status)) {\n            dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n            return setTimeout(() => dispatch(logout()), 2000)\n          }\n          if (error.response && error.response.status >= 500) {\n            dispatch(bookNewInvestmentError('Oops! We did something wrong.'));\n            return setTimeout(() => dispatch(clearError()), 5000)\n          }\n          dispatch(bookNewInvestmentError('Oops! We did something wrong.'));\n          return setTimeout(() => dispatch(clearError()), 5000)\n        })\n    })\n  }\n}\n\n//book new investment with payment\nconst bookInvestmentWithPayRequest = () => {\n  return {\n    type: actions.BOOK_INVESTMENT_WITH_PAY_REQUEST,\n  }\n}\n\nconst bookInvestmentWithPayError = (message) => {\n  return {\n    type: actions.BOOK_INVESTMENT_WITH_PAY_ERROR,\n    error: message,\n  }\n}\n\nconst bookInvestmentWithPaySuccess = (data) => {\n  return {\n    type: actions.BOOK_INVESTMENT_WITH_PAY_SUCCESS,\n    data,\n  }\n}\n\nexport const bookInvestmentWithPay = (data) => {\n  return (dispatch, getState) => {\n    dispatch(bookInvestmentWithPayRequest());\n    const { type, payload, id } = data;\n    const { token } = getState().user;\n\n    return new Promise((resolve) => {\n      axios.post(`${CONFIG.BASE_URL}/services/${id}/${type}/investment/pay`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(response => {\n          response.headers?.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          dispatch(bookInvestmentWithPaySuccess(response.data));\n          resolve(response.data.data)\n          if (response.data.data?.order?.investment.authorization_url) {\n            return window.location = response.data.data.order.investment.authorization_url;\n          }\n        })\n        .catch(({ response }) => {\n          response && response?.headers.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          if (response && [400, 404, 422, 403].includes(response.status)) {\n            dispatch(bookInvestmentWithPayError(response.data.error ? response.data.error : response.data.message));\n            return setTimeout(() => dispatch(clearError()), 5000)\n          }\n          if (response && [401].includes(response.status)) {\n            dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n            return setTimeout(() => dispatch(logout()), 2000)\n          }\n          if (response && response.status >= 500) {\n            dispatch(bookInvestmentWithPayError('Oops! We did something wrong.'));\n            return setTimeout(() => dispatch(clearError()), 5000)\n          }\n          dispatch(bookInvestmentWithPayError('Oops! We did something wrong.'));\n          return setTimeout(() => dispatch(clearError()), 5000)\n        })\n    })\n  }\n}\n\n\n//LIQUIDATE investment\nconst liquidateInvestmentRequest = () => {\n  return {\n    type: actions.LIQUIDATE_INVESTMENT_REQUEST,\n  }\n}\n\nconst liquidateInvestmentError = (message) => {\n  return {\n    type: actions.LIQUIDATE_INVESTMENT_ERROR,\n    error: message,\n  }\n}\n\nconst liquidateInvestmentSuccess = (data) => {\n  return {\n    type: actions.LIQUIDATE_INVESTMENT_SUCCESS,\n    data,\n  }\n}\n\nexport const liquidateInvestment = (id, payload) => {\n  return (dispatch, getState) => {\n    dispatch(liquidateInvestmentRequest());\n    const { token } = getState().user;\n\n    return new Promise((resolve) => {\n      axios.post(`${CONFIG.BASE_URL}/services/investments/${id}/terminate`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(response => {\n          response.headers?.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          dispatch(liquidateInvestmentSuccess(response.data));\n          dispatch(showAlert({ type: 'success', message: response.data?.message }))\n          resolve(response.data.data)\n        })\n        .catch(({ response }) => {\n          response && response?.headers.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          if (response && [400, 404, 422, 403].includes(response.status)) {\n            dispatch(liquidateInvestmentError(response.data.error ? response.data.error : response.data.message));\n            return setTimeout(() => dispatch(clearError()), 5000)\n          }\n          if (response && [401].includes(response.status)) {\n            dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n            return setTimeout(() => dispatch(logout()), 2000)\n          }\n          if (response && response.status >= 500) {\n            return dispatch(liquidateInvestmentError('Oops! We did something wrong.'));\n          }\n          return dispatch(liquidateInvestmentError('Oops! We did something wrong.'));\n        })\n    })\n  }\n}\n\n//LIQUIDATION DETAILS investment\nconst getLiquidationDetailsRequest = () => {\n  return {\n    type: actions.GET_LIQUIDATION_DETAILS_REQUEST,\n  }\n}\n\nconst getLiquidationDetailsError = (message) => {\n  return {\n    type: actions.GET_LIQUIDATION_DETAILS_ERROR,\n    error: message,\n  }\n}\n\nconst getLiquidationDetailsSuccess = (data) => {\n  return {\n    type: actions.GET_LIQUIDATION_DETAILS_SUCCESS,\n    data,\n  }\n}\n\nexport const getLiquidationDetails = (payload) => {\n  return (dispatch, getState) => {\n    dispatch(getLiquidationDetailsRequest());\n    const { token } = getState().user;\n\n    return new Promise((resolve) => {\n      axios.post(`${CONFIG.BASE_URL}/services/investments/liquidation-details`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(response => {\n          response.headers?.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          dispatch(getLiquidationDetailsSuccess(response.data));\n          resolve(response.data.data)\n        })\n        .catch(({ response }) => {\n          response && response?.headers.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          if (response && [400, 404, 422, 403].includes(response.status)) {\n            dispatch(getLiquidationDetailsError(response.data.error ? response.data.error : response.data.message));\n            return setTimeout(() => dispatch(clearError()), 5000)\n          }\n          if (response && [401].includes(response.status)) {\n            dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n            return setTimeout(() => dispatch(logout()), 2000)\n          }\n          if (response && response.status >= 500) {\n            return dispatch(getLiquidationDetailsError('Oops! We did something wrong.'));\n          }\n          return dispatch(getLiquidationDetailsError('Oops! We did something wrong.'));\n        })\n    })\n  }\n}\n\n\n//get recommended investments\nconst getRecommendedInvestmentsRequest = () => {\n  return {\n    type: actions.GET_RECOMMENDED_INVESTMENTS_REQUEST,\n  }\n}\n\nconst getRecommendedInvestmentsError = (message) => {\n  return {\n    type: actions.GET_RECOMMENDED_INVESTMENTS_ERROR,\n    error: message,\n  }\n}\n\nconst getRecommendedInvestmentsSuccess = (data) => {\n  return {\n    type: actions.GET_RECOMMENDED_INVESTMENTS_SUCCESS,\n    data,\n  }\n}\n\nexport const getRecommendedInvestments = (id, payload) => {\n  return (dispatch, getState) => {\n    dispatch(getRecommendedInvestmentsRequest());\n    const { token } = getState().user;\n\n    return new Promise((resolve) => {\n      axios.get(`${CONFIG.BASE_URL}/segments/recommendations`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(response => {\n          response.headers?.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          dispatch(getRecommendedInvestmentsSuccess(response.data));\n          resolve(response.data.data)\n        })\n        .catch(({ response }) => {\n          response && response?.headers.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          if (response && [400, 404, 422, 403].includes(response.status)) {\n            return dispatch(getRecommendedInvestmentsError(response.data.error ? response.data.error : response.data.message));\n            // return setTimeout(() => dispatch(clearError()), 5000)\n          }\n          if (response && [401].includes(response.status)) {\n            dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n            return setTimeout(() => dispatch(logout()), 2000)\n          }\n          if (response && response.status >= 500) {\n            return dispatch(getRecommendedInvestmentsError('Oops! We did something wrong.'));\n          }\n          return dispatch(getRecommendedInvestmentsError('Oops! We did something wrong.'));\n        })\n    })\n  }\n}\n\n//CALCULATE investment\nconst calculateInvestmentRequest = () => {\n  return {\n    type: actions.CALCULATE_INVESTMENT_REQUEST,\n  }\n}\n\nconst calculateInvestmentError = (message) => {\n  return {\n    type: actions.CALCULATE_INVESTMENT_ERROR,\n    error: message,\n  }\n}\n\nconst calculateInvestmentSuccess = (data) => {\n  return {\n    type: actions.CALCULATE_INVESTMENT_SUCCESS,\n    data,\n  }\n}\n\nexport const calculateInvestment = (payload) => {\n  return (dispatch, getState) => {\n    dispatch(calculateInvestmentRequest());\n    const { token } = getState().user;\n\n    return new Promise((resolve) => {\n      axios.post(`${CONFIG.BASE_URL}/services/investments/calculator`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(response => {\n          response.headers?.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          dispatch(calculateInvestmentSuccess(response.data));\n          resolve(response.data.data)\n        })\n        .catch(({ response }) => {\n          response && response?.headers.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          if (response && [400, 404, 422, 403].includes(response.status)) {\n            dispatch(calculateInvestmentError(response.data.error ? response.data.error : response.data.message));\n            return setTimeout(() => dispatch(clearError()), 5000)\n          }\n          if (response && [401].includes(response.status)) {\n            dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n            return setTimeout(() => dispatch(logout()), 2000)\n          }\n          if (response && response.status >= 500) {\n            dispatch(calculateInvestmentError('Oops! We did something wrong.'));\n            return setTimeout(() => dispatch(clearError()), 5000)\n          }\n          dispatch(calculateInvestmentError('Oops! We did something wrong.'));\n          return setTimeout(() => dispatch(clearError()), 5000)\n        })\n    })\n  }\n}\n\n//CALCULATE investment\nconst disableAutochargeRequest = () => {\n  return {\n    type: actions.DISABLE_AUTOCHARGE_REQUEST,\n  }\n}\n\nconst disableAutochargeError = (message) => {\n  return {\n    type: actions.DISABLE_AUTOCHARGE_ERROR,\n    error: message,\n  }\n}\n\nconst disableAutochargeSuccess = (data) => {\n  return {\n    type: actions.DISABLE_AUTOCHARGE_SUCCESS,\n    data,\n  }\n}\n\nexport const disableAutocharge = (id) => {\n  return (dispatch, getState) => {\n    dispatch(disableAutochargeRequest());\n    const { token } = getState().user;\n\n    return new Promise((resolve) => {\n      axios.put(`${CONFIG.BASE_URL}/services/investments/${id}/disable-autocharge`, {}, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(response => {\n          response.headers?.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          dispatch(showAlert({ type: 'success', message: response.data.message }))\n          dispatch(disableAutochargeSuccess(response.data));\n          resolve(response.data.data)\n        })\n        .catch(({ response }) => {\n          response && response?.headers.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          if (response && [400, 404, 422, 403].includes(response.status)) {\n            dispatch(disableAutochargeError(response.data.error ? response.data.error : response.data.message));\n            return setTimeout(() => dispatch(clearError()), 5000)\n          }\n          if (response && [401].includes(response.status)) {\n            dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n            return setTimeout(() => dispatch(logout()), 2000)\n          }\n          if (response && response.status >= 500) {\n            return dispatch(disableAutochargeError('Oops! We did something wrong.'));\n          }\n          return dispatch(disableAutochargeError('Oops! We did something wrong.'));\n        })\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}