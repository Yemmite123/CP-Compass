{"ast":null,"code":"var _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/components/EventComponent/index.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport jwt_decode from \"jwt-decode\";\nimport { getRefreshToken } from '#/store/dashboard/actions';\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport actionTypes from '#/store/dashboard/actionTypes';\n\nclass EventComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleScroll = event => {\n      event.preventDefault();\n      const {\n        token,\n        loading\n      } = this.props;\n      const decoded = jwt_decode(token);\n      const expTime = new Date(decoded.exp * 1000);\n      const currentTime = new Date();\n      var DifferenceInTime = expTime.getTime() - currentTime.getTime();\n\n      if (Math.floor(DifferenceInTime / 60000) < 5 && !loading) {\n        return this.props.getRefreshToken();\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  render() {\n    const {\n      Component\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Component, Object.assign({\n      page: \"App\"\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    user: {\n      token\n    }\n  } = state;\n  return {\n    loading: getActionLoadingState(state, actionTypes.GET_REFRESH_TOKEN_REQUEST),\n    token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getRefreshToken: () => dispatch(getRefreshToken())\n  };\n};\n\nexport default React.memo(withRouter(connect(mapStateToProps, mapDispatchToProps)(EventComponent)));","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/components/EventComponent/index.js"],"names":["React","withRouter","connect","jwt_decode","getRefreshToken","getActionLoadingState","actionTypes","EventComponent","Component","handleScroll","event","preventDefault","token","loading","props","decoded","expTime","Date","exp","currentTime","DifferenceInTime","getTime","Math","floor","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","mapStateToProps","state","user","GET_REFRESH_TOKEN_REQUEST","mapDispatchToProps","dispatch","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;AAEA,MAAMC,cAAN,SAA6BP,KAAK,CAACQ,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAU3CC,YAV2C,GAU3BC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAqB,KAAKC,KAAhC;AACA,YAAMC,OAAO,GAAGZ,UAAU,CAACS,KAAD,CAA1B;AAEA,YAAMI,OAAO,GAAG,IAAIC,IAAJ,CAASF,OAAO,CAACG,GAAR,GAAe,IAAxB,CAAhB;AACA,YAAMC,WAAW,GAAG,IAAIF,IAAJ,EAApB;AACA,UAAIG,gBAAgB,GAAGJ,OAAO,CAACK,OAAR,KAAoBF,WAAW,CAACE,OAAZ,EAA3C;;AACA,UAAGC,IAAI,CAACC,KAAL,CAAWH,gBAAgB,GAAG,KAA9B,IAAuC,CAAvC,IAA4C,CAACP,OAAhD,EAAyD;AACvD,eAAO,KAAKC,KAAL,CAAWV,eAAX,EAAP;AACD;AACF,KArB0C;AAAA;;AAE3CoB,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKjB,YAAvC;AACD;;AAEDkB,EAAAA,oBAAoB,GAAG;AACrBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqC,KAAKnB,YAA1C;AACD;;AAeDoB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErB,MAAAA;AAAF,QAAgB,KAAKM,KAA3B;AAEA,wBACE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC;AAAhB,OAA0B,KAAKA,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAGD;;AA7B0C;;AAgC7C,MAAMgB,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AACJC,IAAAA,IAAI,EAAE;AAAEpB,MAAAA;AAAF;AADF,MAEFmB,KAFJ;AAIA,SAAO;AACLlB,IAAAA,OAAO,EAAER,qBAAqB,CAAC0B,KAAD,EAAQzB,WAAW,CAAC2B,yBAApB,CADzB;AAELrB,IAAAA;AAFK,GAAP;AAID,CATD;;AAWA,MAAMsB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL/B,IAAAA,eAAe,EAAE,MAAM+B,QAAQ,CAAC/B,eAAe,EAAhB;AAD1B,GAAP;AAGD,CAJD;;AAKA,eAAeJ,KAAK,CAACoC,IAAN,CAAWnC,UAAU,CAACC,OAAO,CAAC4B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C3B,cAA7C,CAAD,CAArB,CAAf","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport jwt_decode from \"jwt-decode\";\nimport { getRefreshToken } from '#/store/dashboard/actions';\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport actionTypes from '#/store/dashboard/actionTypes';\n\nclass EventComponent extends React.Component {\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = (event) => {\n    event.preventDefault();\n    const { token, loading } = this.props;\n    const decoded = jwt_decode(token);\n\n    const expTime = new Date(decoded.exp  * 1000);\n    const currentTime = new Date();\n    var DifferenceInTime = expTime.getTime() - currentTime.getTime();\n    if(Math.floor(DifferenceInTime / 60000) < 5 && !loading) {\n      return this.props.getRefreshToken();\n    }\n  }\n\n  render() {\n    const { Component } = this.props;\n\n    return (\n      <Component page=\"App\" {...this.props} />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { \n    user: { token }\n  } = state;\n\n  return {\n    loading: getActionLoadingState(state, actionTypes.GET_REFRESH_TOKEN_REQUEST),\n    token\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getRefreshToken: () => dispatch(getRefreshToken()),\n  };\n};\nexport default React.memo(withRouter(connect(mapStateToProps, mapDispatchToProps)(EventComponent)));\n"]},"metadata":{},"sourceType":"module"}