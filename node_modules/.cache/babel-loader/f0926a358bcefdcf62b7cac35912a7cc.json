{"ast":null,"code":"var _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Marketplace/Predefined/index.js\";\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport moment from 'moment';\nimport Back from '#/components/Back';\nimport Card from '#/components/Card';\nimport SelectBox from '#/components/SelectBox';\nimport Modal from '#/components/Modal';\nimport PinInput from '#/components/PinInput';\nimport Textbox from '#/components/Textbox';\nimport PaymentMethod from '#/components/PaymentMethod';\nimport DebitCard from '#/components/DebitCard';\nimport DateBox from '#/components/DateBox';\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport { getCards } from '#/store/wallet/actions';\nimport { bookNewInvestment, bookInvestmentWithPay, calculateInvestment } from '#/store/investment/actions';\nimport investmentActionTypes from '#/store/investment/actionTypes';\nimport { confirmPin } from '#/store/security/actions';\nimport securityActionTypes from '#/store/security/actionTypes';\nimport { investmentFrequency, validateFields, serializeErrors, fundingSource, formatCurrency, convertDate, verifyFrequencyPeriod, formatCurrencyToString, formatStringToCurrency } from '#/utils';\nimport './style.scss';\n\nclass Predefined extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      type: '',\n      title: '',\n      target: '',\n      targetDate: new Date(),\n      frequency: '',\n      startDate: new Date(),\n      confirmationModal: false,\n      showTransactionModal: false,\n      setupSuccessModal: false,\n      addMoneyModal: false,\n      fundingSourceModal: false,\n      allCardsModal: false,\n      enterAmountModal: false,\n      showAutomateModal: false,\n      amount: '',\n      pin: {},\n      pinError: null,\n      selectedMethod: '',\n      errors: null,\n      selectedMethodError: null,\n      entryError: null,\n      selectedCard: null,\n      installment: '',\n      expectedTotalReturns: '',\n      withpay: false\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n\n      if (name === 'target' || name === 'amount') {\n        this.setState({\n          errors: null\n        });\n        return this.setState({\n          [name]: formatCurrencyToString(value)\n        }, () => {\n          if (isNaN(this.state[name])) {\n            return this.setState({\n              errors: {\n                [name]: 'enter a valid number'\n              }\n            });\n          }\n        });\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleChangeDate = (item, date) => {\n      this.setState({\n        [item]: date\n      });\n    };\n\n    this.handlePin = pin => {\n      this.setState({\n        pin\n      });\n    };\n\n    this.handleSelectMethod = event => {\n      this.setState({\n        selectedMethod: event.target.id\n      });\n    };\n\n    this.handleComfirmation = e => {\n      e.preventDefault();\n      this.setState({\n        errors: null,\n        entryError: null\n      });\n\n      if (!this.props.isApproved) {\n        return this.setState({\n          entryError: 'Your account is awaiting approval'\n        });\n      }\n\n      if (!this.props.isBvnActive) {\n        return this.setState({\n          entryError: 'Access denied. Please complete your BVN profile'\n        });\n      }\n\n      const data = this.state;\n      const required = ['title', 'target', 'targetDate', 'frequency', 'startDate'];\n      const errors = validateFields(data, required);\n\n      if (Object.keys(errors).length > 0) {\n        return this.setState({\n          errors\n        });\n      }\n\n      const info = {\n        startDate: moment(this.state.startDate).format('YYYY-MM-DD'),\n        endDate: moment(this.state.targetDate).format('YYYY-MM-DD'),\n        frequency: this.state.frequency,\n        targetAmount: formatCurrencyToString(this.state.target)\n      };\n      const entryError = verifyFrequencyPeriod(info);\n\n      if (entryError) {\n        return this.setState({\n          entryError\n        });\n      }\n\n      this.props.calculateInvestment(info).then(data => {\n        this.setState({\n          installment: data.installment,\n          expectedTotalReturns: data.expectedTotalReturns\n        }, () => {\n          this.toggleConfirmationModal();\n        });\n      });\n    };\n\n    this.handleEnterPin = () => {\n      this.toggleConfirmationModal();\n      this.toggleTransactionPinModal();\n    };\n\n    this.handleTransactionVerification = e => {\n      e.preventDefault();\n      const {\n        pin\n      } = this.state;\n      const {\n        confirmPin\n      } = this.props;\n      this.setState({\n        pinError: null\n      });\n      const initialPin = [pin.value1, pin.value2, pin.value3, pin.value4].join('');\n\n      if (initialPin.length < 4) {\n        return this.setState({\n          pinError: 'field is required'\n        });\n      }\n\n      confirmPin({\n        pin: initialPin\n      }).then(data => {\n        this.toggleTransactionPinModal();\n        this.toggleAddMoneyModal();\n      });\n    };\n\n    this.handleBookWithoutPay = e => {\n      e.preventDefault();\n      const {\n        bookNewInvestment\n      } = this.props;\n      const {\n        location: {\n          state\n        }\n      } = this.props.history;\n      const {\n        title,\n        target,\n        startDate,\n        targetDate,\n        frequency\n      } = this.state;\n      const payload = {\n        title,\n        targetAmount: formatCurrencyToString(target),\n        currency: 'NGN',\n        startDate: moment(startDate).format('YYYY-MM-DD'),\n        endDate: moment(targetDate).format('YYYY-MM-DD'),\n        frequency\n      };\n      const data = {\n        type: 'predefined',\n        payload,\n        id: state === null || state === void 0 ? void 0 : state.investment.id\n      };\n      bookNewInvestment(data).then(data => {\n        this.toggleAddMoneyModal();\n        this.toggleSetupSuccessModal();\n      });\n    };\n\n    this.handleSuccess = () => {\n      this.toggleSetupSuccessModal();\n      this.props.history.push('/app/marketplace/termed-investments');\n    };\n\n    this.handleEnterAmount = () => {\n      this.toggleAddMoneyModal();\n      this.toggleAmountModal();\n    };\n\n    this.handlePickFundingSource = () => {\n      this.toggleAmountModal();\n      this.toggleFundingModal();\n    };\n\n    this.handleSelectedFundingSource = () => {\n      const {\n        selectedMethod\n      } = this.state;\n      const required = ['selectedMethod'];\n      const errors = validateFields({\n        selectedMethod\n      }, required);\n\n      if (Object.keys(errors).length > 0) {\n        return this.setState({\n          selectedMethodError: 'please select a method'\n        });\n      }\n\n      if (selectedMethod === 'wallet') {\n        this.setState({\n          type: 'wallet'\n        });\n        this.toggleFundingModal();\n        return this.toggleAutomateModal();\n      }\n\n      this.toggleFundingModal();\n      return this.toggleAllCardsModal();\n    };\n\n    this.handleSelectCard = card => {\n      this.setState({\n        selectedCard: card,\n        type: 'card'\n      }, () => {\n        this.toggleAllCardsModal();\n        return this.toggleAutomateModal();\n      });\n    };\n\n    this.handleAutomateStep = () => {\n      this.setState({\n        type: 'card'\n      }, () => {\n        this.toggleAllCardsModal();\n        return this.toggleAutomateModal();\n      });\n    };\n\n    this.handleBookWithPay = autoCharge => {\n      const {\n        selectedCard\n      } = this.state;\n      const {\n        bookInvestmentWithPay\n      } = this.props;\n      const {\n        location: {\n          state\n        }\n      } = this.props.history;\n      const {\n        title,\n        target,\n        startDate,\n        targetDate,\n        frequency,\n        type,\n        amount\n      } = this.state;\n      const payment = {\n        method: type,\n        type: 'debit',\n        reoccurring: selectedCard ? true : false,\n        cardId: selectedCard && selectedCard.id\n      };\n      const payload = {\n        title,\n        targetAmount: formatCurrencyToString(target),\n        currency: 'NGN',\n        startDate: moment(startDate).format('YYYY-MM-DD'),\n        endDate: moment(targetDate).format('YYYY-MM-DD'),\n        frequency,\n        payment,\n        initialAmount: formatCurrencyToString(amount),\n        autoCharge\n      };\n      const data = {\n        type: 'predefined',\n        payload,\n        id: state === null || state === void 0 ? void 0 : state.investment.id\n      };\n      bookInvestmentWithPay(data).then(data => {\n        this.setState({\n          withpay: true\n        });\n        type === 'wallet' && this.closeAutomateSuccess();\n        type === 'card' && selectedCard && this.closeAutomateSuccess();\n      });\n    };\n\n    this.closeAutomateSuccess = () => {\n      this.toggleAutomateModal();\n      this.toggleSetupSuccessModal();\n    };\n\n    this.toggleConfirmationModal = () => {\n      this.setState({\n        confirmationModal: !this.state.confirmationModal\n      });\n    };\n\n    this.toggleAddMoneyModal = () => {\n      this.setState({\n        addMoneyModal: !this.state.addMoneyModal\n      });\n    };\n\n    this.toggleFundingModal = () => {\n      this.setState({\n        fundingSourceModal: !this.state.fundingSourceModal\n      });\n    };\n\n    this.toggleAmountModal = () => {\n      this.setState({\n        enterAmountModal: !this.state.enterAmountModal\n      });\n    };\n\n    this.toggleAllCardsModal = () => {\n      this.setState({\n        allCardsModal: !this.state.allCardsModal\n      });\n    };\n\n    this.toggleTransactionPinModal = () => {\n      this.setState({\n        showTransactionModal: !this.state.showTransactionModal\n      });\n    };\n\n    this.toggleSetupSuccessModal = () => {\n      this.setState({\n        setupSuccessModal: !this.state.setupSuccessModal\n      });\n    };\n\n    this.toggleAutomateModal = () => {\n      this.setState(prevState => ({\n        showAutomateModal: !prevState.showAutomateModal\n      }));\n    };\n  }\n\n  componentDidMount() {\n    const {\n      location: {\n        state\n      }\n    } = this.props.history;\n\n    if (!(state === null || state === void 0 ? void 0 : state.investment)) {\n      this.props.history.push('/app/marketplace/termed-investments');\n    }\n\n    this.props.getCards();\n  }\n\n  render() {\n    const {\n      title,\n      target,\n      targetDate,\n      startDate,\n      confirmationModal,\n      showTransactionModal,\n      pinError,\n      errors,\n      addMoneyModal,\n      fundingSourceModal,\n      selectedMethod,\n      selectedMethodError,\n      allCardsModal,\n      setupSuccessModal,\n      enterAmountModal,\n      frequency,\n      entryError,\n      amount,\n      showAutomateModal,\n      installment,\n      withpay,\n      expectedTotalReturns\n    } = this.state;\n    const {\n      error,\n      cards,\n      pinLoading,\n      confirmPinError,\n      newError,\n      loading,\n      payLoading,\n      walletDetails,\n      calcLoading,\n      investError\n    } = this.props;\n    const {\n      location: {\n        state\n      }\n    } = this.props.history;\n    const errorObject = investError ? serializeErrors(investError) : serializeErrors(error);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"predefined-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 7\n      }\n    }, confirmationModal && /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }\n    }, \"Confirm Investment Setup\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }\n    }, \"To achieve your target of \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 42\n      }\n    }, \"N\", formatCurrency(target)), \" by \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 78\n      }\n    }, convertDate(targetDate)), \", you have to save\", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 13\n      }\n    }, \" N\", formatCurrency(installment), \" \", frequency), \". Adding interests, your target amount will be approximately\", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 15\n      }\n    }, \" N\", formatCurrency(expectedTotalReturns), \".\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-deep-blue mr-3 mb-0 cursor-pointer\",\n      onClick: this.toggleConfirmationModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 15\n      }\n    }, \"Review Plan\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: this.handleEnterPin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 15\n      }\n    }, \"Set up\")))), showTransactionModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 15\n      }\n    }, \"Enter Transaction PIN\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-100 ml-auto mr-auto mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PinInput, {\n      onChange: this.handlePin,\n      error: pinError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary btn-block mt-5\",\n      onClick: this.handleTransactionVerification,\n      disabled: pinLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 15\n      }\n    }, \"Confirm Investment Setup\", pinLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    })), pinError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 28\n      }\n    }, pinError), confirmPinError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 35\n      }\n    }, confirmPinError))), setupSuccessModal && /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/complete-success.svg'),\n      alt: \"setup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 15\n      }\n    }, \"Investment setup successful!\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }\n    }, \"Your \", state === null || state === void 0 ? void 0 : state.investment.name, \" plan has been setup \", !withpay && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 111\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-blue font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 117\n      }\n    }, \"pay\"), \" so\"), \" you can start enjoying returns on your principal.\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary btn-block mt-3\",\n      onClick: this.handleSuccess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }\n    }, \"Proceed\"))), addMoneyModal && /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/close.svg'),\n      alt: \"close\",\n      onClick: this.toggleAddMoneyModal,\n      className: \"cursor-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 15\n      }\n    }, \"Do you want to add money to this investment now?\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 15\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-primary text-primary spinner-border-sm mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mr-3 text-deep-blue mb-0 cursor-pointer\",\n      onClick: this.handleBookWithoutPay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }\n    }, \"No, I\\u2019ll add money later\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: this.handleEnterAmount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }\n    }, \"Yes\")), newError && typeof newError === 'string' && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 60\n      }\n    }, newError))), enterAmountModal && /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 13\n      }\n    }, \"How much do you want to add to this investment right now?\"), /*#__PURE__*/React.createElement(Textbox, {\n      onChange: this.handleChange,\n      type: \"text\",\n      label: \"Amount\",\n      placeholder: \"Amount\",\n      name: \"amount\",\n      value: formatStringToCurrency(amount),\n      error: errors ? errors.amount : errorObject && errorObject['amount'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 15\n      }\n    })), walletDetails && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-grey text-x-small mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 15\n      }\n    }, \"Available balance \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 76\n      }\n    }, \"\\u20A6 \", walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : 0)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: this.handlePickFundingSource,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 15\n      }\n    }, \"Proceed\"))), fundingSourceModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleFundingModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 13\n      }\n    }, \"Choose a funding source\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 13\n      }\n    }, fundingSource.map(method => /*#__PURE__*/React.createElement(PaymentMethod, {\n      onSelect: this.handleSelectMethod,\n      selected: selectedMethod === method.value ? true : false,\n      imgUrl: method.imgUrl,\n      imgBlue: method.imgBlue,\n      key: Math.random() * 1000,\n      value: method.value,\n      label: method.label,\n      balance: walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }\n    })), selectedMethodError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 39\n      }\n    }, selectedMethodError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary mt-3\",\n      onClick: this.handleSelectedFundingSource,\n      disabled: payLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 15\n      }\n    }, \"Proceed\", payLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 19\n      }\n    }))))), allCardsModal && /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/close.svg'),\n      alt: \"close\",\n      onClick: this.toggleAllCardsModal,\n      className: \"cursor-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 15\n      }\n    })), cards && cards.cards.length > 0 && cards.cards.map(card => /*#__PURE__*/React.createElement(DebitCard, {\n      card: card,\n      handleSelect: this.handleSelectCard,\n      key: card.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center cursor-pointer\",\n      onClick: this.handleAutomateStep,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/add-card.svg'),\n      className: \"img-fluid mr-3\",\n      alt: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-deep-blue text-medium mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 15\n      }\n    }, \"Add money from a new debit card\")), /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/right-arrow.svg'),\n      className: \"img-fluid cursor-pointer\",\n      alt: \"arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 13\n      }\n    }))), showAutomateModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleAutomateModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 17\n      }\n    }, \"Automate funding for this investment\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-small text-black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }\n    }, \"Allow us to fund from your source \", frequency, \" without asking.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 15\n      }\n    }, payLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-primary text-primary spinner-border-sm mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mr-3 text-deep-blue mb-0 cursor-pointer\",\n      onClick: () => this.handleBookWithPay(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 17\n      }\n    }, \"No, I\\u2019ll add money myself\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: () => this.handleBookWithPay(true),\n      disabled: payLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 17\n      }\n    }, \"Yes\")), newError && typeof newError === 'string' && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 60\n      }\n    }, newError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Back, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-medium text-deep-blue \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 13\n      }\n    }, \"Create new \", state === null || state === void 0 ? void 0 : state.investment.name, \" plan\"))), /*#__PURE__*/React.createElement(Card, {\n      classes: \"card mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 17\n      }\n    }, \"Give your new investment a name. You could name it after your goal. E.g. Freedom goal\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Textbox, {\n      onChange: this.handleChange,\n      type: \"text\",\n      label: \"Plan title\",\n      placeholder: \"Plan title\",\n      name: \"title\",\n      value: title,\n      error: errors ? errors.title : errorObject && errorObject['title'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 17\n      }\n    }, \"How much do you need to make this goal work?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Textbox, {\n      onChange: this.handleChange,\n      type: \"text\",\n      label: \"Target amount\",\n      placeholder: \"Set target amount\",\n      name: \"target\",\n      value: formatStringToCurrency(target),\n      error: errors ? errors.target : errorObject && errorObject['target'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 17\n      }\n    }, \"When do you want to start?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(DateBox, {\n      onChange: date => this.handleChangeDate('startDate', date),\n      label: \"Start Date\",\n      placeholder: \"Set start date\",\n      name: \"startDate\",\n      value: startDate,\n      error: errors ? errors.startDate : errorObject && errorObject['startDate'],\n      min: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 17\n      }\n    }, \"By what date do you want to have your invested target amount?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(DateBox, {\n      onChange: date => this.handleChangeDate('targetDate', date),\n      label: \"Target date\",\n      placeholder: \"Set start date\",\n      name: \"targetDate\",\n      value: targetDate,\n      error: errors ? errors.targetDate : errorObject && errorObject['endDate'],\n      min: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 17\n      }\n    }, \"How often do you want to set money aside for this investment?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SelectBox, {\n      onChange: this.handleChange,\n      label: \"Frequency\",\n      placeholder: \"Set frequency\",\n      name: \"frequency\",\n      boxClasses: \"mt-3\",\n      options: investmentFrequency,\n      value: \"value\",\n      optionName: \"name\",\n      error: errors ? errors.frequency : errorObject && errorObject['frequency'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right mt-3 d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 13\n      }\n    }, entryError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2 mr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 28\n      }\n    }, entryError), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary btn-md-block\",\n      onClick: this.handleComfirmation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 15\n      }\n    }, \"Proceed\", calcLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border text-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 21\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  var _config$data;\n\n  const {\n    app: {\n      wallet: {\n        cards,\n        walletDetails\n      },\n      security: {\n        error: confirmPinError\n      },\n      investment: {\n        newError,\n        error: investError\n      },\n      config,\n      profile: {\n        userProfile: {\n          data\n        }\n      }\n    }\n  } = state;\n  return {\n    loading: getActionLoadingState(state, investmentActionTypes.BOOK_NEW_INVESTMENT_REQUEST),\n    payLoading: getActionLoadingState(state, investmentActionTypes.BOOK_INVESTMENT_WITH_PAY_REQUEST),\n    pinLoading: getActionLoadingState(state, securityActionTypes.CONFIRM_PIN_REQUEST),\n    calcLoading: getActionLoadingState(state, investmentActionTypes.CALCULATE_INVESTMENT_REQUEST),\n    cards,\n    confirmPinError,\n    newError,\n    investError,\n    walletDetails,\n    interestRate: config === null || config === void 0 ? void 0 : (_config$data = config.data) === null || _config$data === void 0 ? void 0 : _config$data.investmentConfig,\n    isBvnActive: data && data.bvn ? true : false,\n    isApproved: data && data.isApproved === 1 ? true : false\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCards: () => dispatch(getCards()),\n    bookNewInvestment: data => dispatch(bookNewInvestment(data)),\n    bookInvestmentWithPay: data => dispatch(bookInvestmentWithPay(data)),\n    confirmPin: payload => dispatch(confirmPin(payload)),\n    calculateInvestment: payload => dispatch(calculateInvestment(payload))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Predefined));","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Marketplace/Predefined/index.js"],"names":["React","withRouter","connect","moment","Back","Card","SelectBox","Modal","PinInput","Textbox","PaymentMethod","DebitCard","DateBox","getActionLoadingState","getCards","bookNewInvestment","bookInvestmentWithPay","calculateInvestment","investmentActionTypes","confirmPin","securityActionTypes","investmentFrequency","validateFields","serializeErrors","fundingSource","formatCurrency","convertDate","verifyFrequencyPeriod","formatCurrencyToString","formatStringToCurrency","Predefined","Component","state","type","title","target","targetDate","Date","frequency","startDate","confirmationModal","showTransactionModal","setupSuccessModal","addMoneyModal","fundingSourceModal","allCardsModal","enterAmountModal","showAutomateModal","amount","pin","pinError","selectedMethod","errors","selectedMethodError","entryError","selectedCard","installment","expectedTotalReturns","withpay","handleChange","event","name","value","setState","isNaN","handleChangeDate","item","date","handlePin","handleSelectMethod","id","handleComfirmation","e","preventDefault","props","isApproved","isBvnActive","data","required","Object","keys","length","info","format","endDate","targetAmount","then","toggleConfirmationModal","handleEnterPin","toggleTransactionPinModal","handleTransactionVerification","initialPin","value1","value2","value3","value4","join","toggleAddMoneyModal","handleBookWithoutPay","location","history","payload","currency","investment","toggleSetupSuccessModal","handleSuccess","push","handleEnterAmount","toggleAmountModal","handlePickFundingSource","toggleFundingModal","handleSelectedFundingSource","toggleAutomateModal","toggleAllCardsModal","handleSelectCard","card","handleAutomateStep","handleBookWithPay","autoCharge","payment","method","reoccurring","cardId","initialAmount","closeAutomateSuccess","prevState","componentDidMount","render","error","cards","pinLoading","confirmPinError","newError","loading","payLoading","walletDetails","calcLoading","investError","errorObject","toggleModal","require","wallet","NGN","map","imgUrl","imgBlue","Math","random","label","mapStateToProps","app","security","config","profile","userProfile","BOOK_NEW_INVESTMENT_REQUEST","BOOK_INVESTMENT_WITH_PAY_REQUEST","CONFIRM_PIN_REQUEST","CALCULATE_INVESTMENT_REQUEST","interestRate","investmentConfig","bvn","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport moment from 'moment';\nimport Back from '#/components/Back';\nimport Card from '#/components/Card';\nimport SelectBox from '#/components/SelectBox';\nimport Modal from '#/components/Modal';\nimport PinInput from '#/components/PinInput';\nimport Textbox from '#/components/Textbox';\nimport PaymentMethod from '#/components/PaymentMethod';\nimport DebitCard from '#/components/DebitCard';\nimport DateBox from '#/components/DateBox';\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport { getCards } from '#/store/wallet/actions'\nimport { bookNewInvestment, bookInvestmentWithPay, calculateInvestment } from '#/store/investment/actions'\nimport investmentActionTypes from '#/store/investment/actionTypes';\nimport { confirmPin } from '#/store/security/actions'\nimport securityActionTypes from '#/store/security/actionTypes';\nimport {\n  investmentFrequency,\n  validateFields,\n  serializeErrors,\n  fundingSource,\n  formatCurrency,\n  convertDate, \n  verifyFrequencyPeriod,\n  formatCurrencyToString,\n  formatStringToCurrency\n } from '#/utils'\nimport './style.scss';\n\nclass Predefined extends React.Component {\n\n  state = {\n    type: '',\n    title: '',\n    target: '',\n    targetDate: new Date(),\n    frequency: '',\n    startDate: new Date(),\n    confirmationModal: false,\n    showTransactionModal: false,\n    setupSuccessModal: false,\n    addMoneyModal: false,\n    fundingSourceModal: false,\n    allCardsModal: false,\n    enterAmountModal: false,\n    showAutomateModal: false,\n    amount: '',\n    pin: {},\n    pinError: null,\n    selectedMethod: '',\n    errors: null,\n    selectedMethodError: null,\n    entryError: null,\n    selectedCard: null,\n    installment: '',\n    expectedTotalReturns: '',\n    withpay: false,\n  }\n\n  componentDidMount() {\n    const { location: { state } } = this.props.history\n    if (!state?.investment) {\n      this.props.history.push('/app/marketplace/termed-investments')\n    }\n    this.props.getCards();\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    if(name === 'target' || name === 'amount') {\n      this.setState({ errors: null});\n        return this.setState({ [name]: formatCurrencyToString(value)}, ()=> {\n          if(isNaN(this.state[name])) {\n            return this.setState({ errors: { [name]: 'enter a valid number' } })\n          }\n        });\n      }\n    this.setState({ [name]: value });\n  }\n\n  handleChangeDate = (item, date) => {\n    this.setState({ [item]: date });\n  }\n\n  handlePin = (pin) => {\n    this.setState({pin})\n  }\n\n  handleSelectMethod = (event) => {\n    this.setState({ selectedMethod: event.target.id });\n  }\n\n  //handles displaying the confirmation modal for the investment\n  handleComfirmation = (e) => {\n    e.preventDefault();\n    this.setState({ errors: null, entryError: null  });\n\n    if(!this.props.isApproved) {\n      return this.setState({ entryError: 'Your account is awaiting approval' })\n    }\n    if(!this.props.isBvnActive){\n      return this.setState({ entryError: 'Access denied. Please complete your BVN profile' })\n    }\n\n    const data = this.state;\n    const required = [ 'title', 'target', 'targetDate', 'frequency', 'startDate' ];\n    const errors = validateFields(data, required)\n\n    if (Object.keys(errors).length > 0) {\n      return this.setState({ errors });\n    }\n    const info = { \n      startDate: moment(this.state.startDate).format('YYYY-MM-DD'),\n      endDate: moment(this.state.targetDate).format('YYYY-MM-DD'),\n      frequency: this.state.frequency,\n      targetAmount: formatCurrencyToString(this.state.target),\n    }\n    const entryError = verifyFrequencyPeriod(info)\n    if (entryError) {\n      return this.setState({ entryError });\n    }\n    this.props.calculateInvestment(info)\n    .then(data => {\n      this.setState({ installment: data.installment, expectedTotalReturns: data.expectedTotalReturns }, () => {\n        this.toggleConfirmationModal()\n      })\n    })\n  }\n\n  //move to enterering transaction pin\n  handleEnterPin = () => {\n    this.toggleConfirmationModal();\n    this.toggleTransactionPinModal();\n  }\n\n  //submit transaction pin for verification\n  handleTransactionVerification = (e) => {\n    e.preventDefault()\n    const { pin } = this.state\n    const { confirmPin } = this.props\n    this.setState({ pinError: null })\n\n    const initialPin = [ pin.value1, pin.value2, pin.value3, pin.value4 ].join('');\n    if (initialPin.length < 4 ) {\n      return this.setState({ pinError: 'field is required'})\n    }\n    confirmPin({ pin: initialPin })\n      .then(data => {\n        this.toggleTransactionPinModal();\n        this.toggleAddMoneyModal()\n    })\n  }\n\n  //submit booking details without payment\n  handleBookWithoutPay = (e) => {\n    e.preventDefault();\n\n    const { bookNewInvestment } = this.props;\n    const { location: { state } } = this.props.history\n    const { title, target, startDate, targetDate, frequency } = this.state\n    const payload = { title, targetAmount: formatCurrencyToString(target), currency: 'NGN', startDate: moment(startDate).format('YYYY-MM-DD'), endDate: moment(targetDate).format('YYYY-MM-DD'), frequency }\n    const data = { type: 'predefined', payload, id: state?.investment.id }\n\n    bookNewInvestment(data)\n    .then(data => {\n      this.toggleAddMoneyModal();\n      this.toggleSetupSuccessModal();\n    });\n  }\n\n  //handle proceed from the success modal\n  handleSuccess = () => {\n    this.toggleSetupSuccessModal();\n    this.props.history.push('/app/marketplace/termed-investments')\n  }\n\n  //displays the modal to enter the amount you might want to invest\n  handleEnterAmount = () => {\n    this.toggleAddMoneyModal();\n    this.toggleAmountModal();\n  }\n  \n  //displays the modal to select a funding course\n  handlePickFundingSource = () => {\n    this.toggleAmountModal();\n    this.toggleFundingModal();\n  }\n  \n  // handles for when a funcding source is selected\n  handleSelectedFundingSource = () => {\n    const { selectedMethod } = this.state\n    \n    const required = [ 'selectedMethod'];\n    const errors = validateFields({  selectedMethod }, required)\n    if (Object.keys(errors).length > 0) {\n      return this.setState({ selectedMethodError: 'please select a method' });\n    }\n    if(selectedMethod === 'wallet') {\n      this.setState({ type: 'wallet' });\n      this.toggleFundingModal();\n      return this.toggleAutomateModal();\n    }\n    this.toggleFundingModal();\n    return this.toggleAllCardsModal()\n  }\n\n\n  handleSelectCard = (card) => {\n    this.setState({ selectedCard: card, type: 'card' }, \n      ()=> {\n        this.toggleAllCardsModal();\n        return this.toggleAutomateModal();\n      })\n  }\n\n  handleAutomateStep = () => {\n    this.setState({ type: 'card' }, \n    ()=> {\n      this.toggleAllCardsModal();\n      return this.toggleAutomateModal();\n    })\n  }\n\n  //submit booking details without payment\n  handleBookWithPay = (autoCharge) => {\n    const { selectedCard } = this.state;\n    const { bookInvestmentWithPay } = this.props;\n    const { location: { state } } = this.props.history\n    const { title, target, startDate, targetDate, frequency, type, amount} = this.state;\n    const payment = { method: type, type: 'debit', reoccurring: selectedCard ? true : false, cardId: selectedCard && selectedCard.id}\n    const payload = { title, targetAmount: formatCurrencyToString(target), currency: 'NGN', startDate: moment(startDate).format('YYYY-MM-DD'), endDate: moment(targetDate).format('YYYY-MM-DD'), frequency, payment,\n    initialAmount: formatCurrencyToString(amount), autoCharge }\n    const data = { type: 'predefined', payload, id: state?.investment.id }\n\n    bookInvestmentWithPay(data)\n    .then(data => {\n      this.setState({ withpay: true });\n      type === 'wallet' && this.closeAutomateSuccess();\n      type === 'card' && selectedCard && this.closeAutomateSuccess();\n    });\n  }\n\n  closeAutomateSuccess = () => {\n    this.toggleAutomateModal();\n    this.toggleSetupSuccessModal();\n  }\n\n  toggleConfirmationModal = () => {\n    this.setState({ confirmationModal: !this.state.confirmationModal })\n  }\n\n  toggleAddMoneyModal = () => {\n    this.setState({ addMoneyModal: !this.state.addMoneyModal })\n  }\n\n  toggleFundingModal = () => {\n    this.setState({ fundingSourceModal: !this.state.fundingSourceModal })\n  }\n\n  toggleAmountModal = () => {\n    this.setState({ enterAmountModal: !this.state.enterAmountModal })\n  }\n\n  toggleAllCardsModal = () => {\n    this.setState({ allCardsModal: !this.state.allCardsModal })\n  }\n\n  toggleTransactionPinModal = () => {\n    this.setState({ showTransactionModal: !this.state.showTransactionModal })\n  }\n\n  toggleSetupSuccessModal = () => {\n    this.setState({ setupSuccessModal: !this.state.setupSuccessModal })\n  }\n\n  toggleAutomateModal = () => {\n    this.setState(prevState => ({ showAutomateModal: !prevState.showAutomateModal }));\n  }\n\n\n  render() {\n    const { \n      title, target, targetDate, \n      startDate, confirmationModal, showTransactionModal, \n      pinError, errors, addMoneyModal,\n      fundingSourceModal, selectedMethod, selectedMethodError,\n      allCardsModal, setupSuccessModal, enterAmountModal,\n    frequency, entryError, amount, showAutomateModal,\n    installment, withpay, expectedTotalReturns } = this.state;\n\n    const { error, cards, pinLoading, confirmPinError, newError, loading, payLoading, walletDetails, calcLoading, investError } = this.props;\n    const { location: { state } } = this.props.history;\n    const errorObject = investError ? serializeErrors(investError) : serializeErrors(error);\n\n    return (\n      <div className=\"predefined-page\">\n        {confirmationModal &&\n          <Modal>\n          <div className=\"text-left\">\n            <h3 className=\"text-deep-blue\">Confirm Investment Setup</h3>\n            <p>To achieve your target of <b>N{formatCurrency(target)}</b> by <b>{convertDate(targetDate)}</b>, you have to save\n            <b> N{formatCurrency(installment)} {frequency}</b>.\n              Adding interests, your target amount will be approximately \n              <b> N{formatCurrency(expectedTotalReturns)}.</b>\n            </p>\n            <div className=\"d-flex justify-content-end align-items-center\">\n              <p className=\"text-deep-blue mr-3 mb-0 cursor-pointer\" onClick={this.toggleConfirmationModal}>Review Plan</p>\n              <button className=\"btn btn-sm btn-primary\" onClick={this.handleEnterPin}>\n                Set up\n              </button>\n            </div>\n          </div>\n        </Modal>\n        }\n        {showTransactionModal &&\n          <Modal onClose={this.toggleModal}>\n            <div className=\"text-center\">\n              <h3>Enter Transaction PIN</h3>\n              <div className=\"w-100 ml-auto mr-auto mt-3\">\n                <PinInput onChange={this.handlePin} error={pinError}/>\n              </div>\n              <button className=\"btn btn-sm btn-primary btn-block mt-5\" onClick={this.handleTransactionVerification} disabled={pinLoading}>\n                Confirm Investment Setup\n                {pinLoading &&\n                    <div className=\"spinner-border spinner-border-white spinner-border-sm ml-2\"></div>\n                  }\n              </button>\n              {pinError && <p className=\"text-error mt-2\">{pinError}</p>}\n              {confirmPinError && <p className=\"text-error mt-2\">{confirmPinError}</p>}\n            </div>\n          </Modal>\n        }\n        {setupSuccessModal &&\n          <Modal>\n            <div className=\"text-center\">\n              <img src={require('#/assets/icons/complete-success.svg')}  alt=\"setup\"/>\n              <h3>Investment setup successful!</h3>\n                <p className=\"text-black mb-0\">Your {state?.investment.name} plan has been setup {!withpay && <span><span className=\"text-blue font-weight-bold\">pay</span> so</span>} you can start enjoying returns on your principal.</p>\n                <button className=\"btn btn-sm btn-primary btn-block mt-3\" onClick={this.handleSuccess}>\n                  Proceed\n                </button>\n            </div>\n          </Modal>\n        }\n        {addMoneyModal &&\n          <Modal>\n          <div className=\"text-right pb-3\">\n            <img src={require('#/assets/icons/close.svg')} alt=\"close\" onClick={this.toggleAddMoneyModal} className=\"cursor-pointer\" />\n          </div>\n            <div className=\"text-left\">\n              <h3>Do you want to add money to this investment now?</h3>\n              <div className=\"d-flex justify-content-end align-items-center\">\n                  {loading &&\n                    <div className=\"spinner-border spinner-border-primary text-primary spinner-border-sm mr-2\"></div>\n                  }\n                <p className=\"mr-3 text-deep-blue mb-0 cursor-pointer\" onClick={this.handleBookWithoutPay}>No, I’ll add money later</p>\n                <button className=\"btn btn-sm btn-primary\" onClick={this.handleEnterAmount}>\n                  Yes\n                </button>\n              </div>\n              {newError && typeof newError === 'string' && <p className=\"text-error mt-2\">{newError}</p>}\n            </div>\n          </Modal>\n        }\n        {\n          enterAmountModal &&\n          <Modal>\n            <div>\n            <h3 className=\"text-deep-blue\">How much do you want to add to this investment right now?</h3>\n              <Textbox\n                onChange={this.handleChange}\n                type=\"text\"\n                label=\"Amount\"\n                placeholder=\"Amount\"\n                name=\"amount\"\n                value={formatStringToCurrency(amount)}\n                error={errors ? errors.amount : (errorObject && errorObject['amount'])}\n              />\n            </div>\n            { walletDetails &&  \n              <p className=\"text-grey text-x-small mb-0\">Available balance <span className=\"text-deep-blue\">\n                &#x20A6; {walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : 0}\n                </span>\n              </p>\n            }\n            <div className=\"text-right mt-2\">\n              <button className=\"btn btn-sm btn-primary\" onClick={this.handlePickFundingSource}>\n                Proceed\n              </button>\n            </div>\n\n          </Modal>\n        }\n        {fundingSourceModal &&\n          <Modal onClose={this.toggleFundingModal}>\n          <div className=\"text-left\">\n            <h3>Choose a funding source</h3>\n            <div>\n              {fundingSource.map(method => (\n                <PaymentMethod\n                  onSelect={this.handleSelectMethod}\n                  selected={selectedMethod === method.value ? true : false}\n                  imgUrl={method.imgUrl}\n                  imgBlue={method.imgBlue}\n                  key={Math.random() * 1000}\n                  value={method.value}\n                  label={method.label}\n                  balance={walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : 0}\n                />\n              ))}\n              {selectedMethodError && <p className=\"text-error mt-2\">{selectedMethodError}</p>}\n            </div>\n            <div className=\"text-right\">\n              <button className=\"btn btn-sm btn-primary mt-3\" onClick={this.handleSelectedFundingSource} disabled={payLoading}>\n                Proceed\n                {payLoading &&\n                  <div className=\"spinner-border spinner-border-white spinner-border-sm ml-2\"></div>\n                }\n              </button>\n            </div>\n          </div>\n        </Modal>\n        }\n        {allCardsModal &&\n          <Modal>\n            <div className=\"text-right pb-3\">\n              <img src={require('#/assets/icons/close.svg')} alt=\"close\" onClick={this.toggleAllCardsModal} className=\"cursor-pointer\" />\n            </div>\n            {\n            cards &&\n            cards.cards.length > 0 && \n            cards.cards.map(card => (\n              <DebitCard card={card} handleSelect={this.handleSelectCard} key={card.id}/> \n            ))\n          }\n          <div className=\"d-flex justify-content-between align-items-center cursor-pointer\" onClick={this.handleAutomateStep}>\n            <div className=\"d-flex align-items-center\">\n              <img src={require('#/assets/icons/add-card.svg')} className=\"img-fluid mr-3\" alt=\"card\" />\n              <p className=\"text-deep-blue text-medium mb-0\">Add money from a new debit card</p>\n            </div>\n            <img src={require('#/assets/icons/right-arrow.svg')} className=\"img-fluid cursor-pointer\" alt=\"arrow\" />\n          </div>\n          </Modal>\n        }\n\n          {showAutomateModal &&\n            <Modal onClose={this.toggleAutomateModal}>\n              <div className=\"text-left\">\n                <h3>Automate funding for this investment</h3>\n                <p className=\"text-small text-black\">Allow us to fund from your source {frequency} without asking.</p>\n              </div>\n              <div className=\"d-flex justify-content-end align-items-center\">\n                {payLoading &&\n                  <div className=\"spinner-border spinner-border-primary text-primary spinner-border-sm mr-2\"></div>\n                }\n                <p className=\"mr-3 text-deep-blue mb-0 cursor-pointer\" onClick={() => this.handleBookWithPay(false)}>No, I’ll add money myself</p>\n                <button className=\"btn btn-sm btn-primary\" onClick={() => this.handleBookWithPay(true)} disabled={payLoading}>\n                  Yes\n              </button>\n              </div>\n              {newError && typeof newError === 'string' && <p className=\"text-error mt-2\">{newError}</p>}\n            </Modal>\n          }\n\n        <div className=\"row\">\n          <div className=\"col-md-2\">\n            <Back />\n          </div>\n          <div className=\"col-md-5 text-center\">\n            <h3 className=\"text-medium text-deep-blue \">Create new {state?.investment.name} plan</h3>\n          </div>\n        </div>\n        <Card classes=\"card mt-3\">\n          <form>\n            <div className=\"row align-items-center\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium mt-3\">Give your new investment a name. You could name it after your goal. E.g. Freedom goal</p>\n              </div>\n              <div className=\"col-md-6\">\n                <Textbox\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  label=\"Plan title\"\n                  placeholder=\"Plan title\"\n                  name=\"title\"\n                  value={title}\n                  error={errors ? errors.title : (errorObject && errorObject['title'])}\n                />\n              </div>\n            </div>\n\n            <div className=\"row mt-4 align-items-center\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium mt-3\">How much do you need to make this goal work?</p>\n              </div>\n              <div className=\"col-md-6\">\n                <Textbox\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  label=\"Target amount\"\n                  placeholder=\"Set target amount\"\n                  name=\"target\"\n                  value={formatStringToCurrency(target)}\n                  error={errors ? errors.target : (errorObject && errorObject['target'])}\n                />\n              </div>\n            </div>\n\n            <div className=\"row mt-4 align-items-center\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium mt-3\">When do you want to start?</p>\n              </div>\n              <div className=\"col-md-6\">\n                <DateBox\n                  onChange={date => this.handleChangeDate('startDate', date)}\n                  label=\"Start Date\"\n                  placeholder=\"Set start date\"\n                  name=\"startDate\"\n                  value={startDate}\n                  error={errors ? errors.startDate : (errorObject && errorObject['startDate'])}\n                  min={new Date()}\n                />\n              </div>\n            </div>\n            \n            <div className=\"row mt-4 align-items-center\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium mt-3\">By what date do you want to have your invested target amount?</p>\n              </div>\n              <div className=\"col-md-6\">\n                <DateBox\n                  onChange={date => this.handleChangeDate('targetDate', date)}\n                  label=\"Target date\"\n                  placeholder=\"Set start date\"\n                  name=\"targetDate\"\n                  value={targetDate}\n                  error={errors ? errors.targetDate : (errorObject && errorObject['endDate'])}\n                  min={new Date()}\n                />\n              </div>\n            </div>\n\n            <div className=\"row mt-4 align-items-center\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium mt-3\">How often do you want to set money aside for this investment?</p>\n              </div>\n              <div className=\"col-md-6\">\n                <SelectBox\n                  onChange={this.handleChange}\n                  label=\"Frequency\"\n                  placeholder=\"Set frequency\"\n                  name=\"frequency\"\n                  boxClasses=\"mt-3\"\n                  options={investmentFrequency}\n                  value=\"value\"\n                  optionName=\"name\"\n                  error={errors ? errors.frequency : (errorObject && errorObject['frequency'])}\n                />\n              </div>\n            </div>\n            <div className=\"text-right mt-3 d-flex justify-content-end\">\n            {entryError && <p className=\"text-error mt-2 mr-3\">{entryError}</p>}\n\n              <button className=\"btn btn-sm btn-primary btn-md-block\" onClick={this.handleComfirmation}>\n                Proceed\n                {calcLoading &&\n                    <div className=\"spinner-border text-white spinner-border-sm ml-2\"></div>\n                  }\n              </button>\n            </div>\n          </form>\n        </Card>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { \n    app: { \n      wallet: { cards, walletDetails }, \n      security: { error: confirmPinError }, \n      investment: { newError, error: investError },\n      config,\n      profile: { userProfile: { data } }\n    }\n  } = state;\n\n  return {\n    loading: getActionLoadingState(state, investmentActionTypes.BOOK_NEW_INVESTMENT_REQUEST),\n    payLoading: getActionLoadingState(state, investmentActionTypes.BOOK_INVESTMENT_WITH_PAY_REQUEST),\n    pinLoading: getActionLoadingState(state, securityActionTypes.CONFIRM_PIN_REQUEST),\n    calcLoading: getActionLoadingState(state, investmentActionTypes.CALCULATE_INVESTMENT_REQUEST),\n    cards,\n    confirmPinError,\n    newError,\n    investError,\n    walletDetails,\n    interestRate: config?.data?.investmentConfig,\n    isBvnActive: data && data.bvn ? true : false,\n    isApproved: data && data.isApproved === 1 ? true : false,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getCards: () => dispatch(getCards()),\n    bookNewInvestment: (data) => dispatch(bookNewInvestment(data)),\n    bookInvestmentWithPay: (data) => dispatch(bookInvestmentWithPay(data)),\n    confirmPin: (payload) => dispatch(confirmPin(payload)),\n    calculateInvestment: (payload) => dispatch(calculateInvestment(payload)),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Predefined));\n"]},"metadata":{},"sourceType":"module"}