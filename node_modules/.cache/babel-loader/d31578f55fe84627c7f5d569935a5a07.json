{"ast":null,"code":"var _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Calculator/index.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport { calculateInvestment } from '#/store/investment/actions';\nimport investmentActionTypes from '#/store/investment/actionTypes';\nimport SelectBox from '#/components/SelectBox';\nimport Textbox from '#/components/Textbox';\nimport DateBox from '#/components/DateBox';\nimport Modal from '#/components/Modal';\nimport { validateFields, investmentFrequency, formatCurrency, verifyFrequencyPeriod, convertDate, serializeErrors, formatCurrencyToString, formatStringToCurrency } from '#/utils';\nimport './style.scss';\n\nclass Calculator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      target: '',\n      targetDate: new Date(),\n      frequency: '',\n      startDate: new Date(),\n      errors: null,\n      estimationModal: false,\n      entryError: null,\n      installment: '',\n      expectedTotalReturns: ''\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n\n      if (name === 'target') {\n        this.setState({\n          errors: null\n        });\n        return this.setState({\n          [name]: formatCurrencyToString(value)\n        }, () => {\n          if (isNaN(this.state[name])) {\n            return this.setState({\n              errors: {\n                [name]: 'enter a valid number'\n              }\n            });\n          }\n        });\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleChangeDate = (item, date) => {\n      this.setState({\n        [item]: date\n      });\n    };\n\n    this.toggleEstimationModal = () => {\n      this.setState(prevState => ({\n        estimationModal: !prevState.estimationModal\n      }));\n    };\n\n    this.submit = e => {\n      e.preventDefault();\n      this.setState({\n        errors: null,\n        entryError: null\n      });\n      const data = this.state;\n      const required = ['target', 'targetDate', 'frequency', 'startDate'];\n      const errors = validateFields(data, required);\n\n      if (Object.keys(errors).length > 0) {\n        return this.setState({\n          errors\n        });\n      }\n\n      const info = {\n        startDate: moment(this.state.startDate).format('YYYY-MM-DD'),\n        endDate: moment(this.state.targetDate).format('YYYY-MM-DD'),\n        frequency: this.state.frequency,\n        targetAmount: formatCurrencyToString(this.state.target)\n      };\n      const entryError = verifyFrequencyPeriod(info);\n\n      if (entryError) {\n        return this.setState({\n          entryError\n        });\n      }\n\n      this.props.calculateInvestment(info).then(data => {\n        this.setState({\n          installment: data.installment,\n          expectedTotalReturns: data.expectedTotalReturns\n        }, () => {\n          this.toggleEstimationModal();\n        });\n      });\n    };\n\n    this.handleStartInvesting = () => {\n      this.props.history.push({\n        pathname: '/app/marketplace/',\n        state: {\n          routeName: 'Marketplace'\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      errors,\n      target,\n      targetDate,\n      startDate,\n      estimationModal,\n      frequency,\n      entryError,\n      installment,\n      expectedTotalReturns\n    } = this.state;\n    const {\n      interestRate,\n      loading,\n      error\n    } = this.props;\n    const errorObject = serializeErrors(error);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"investment-calculator-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, estimationModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleEstimationModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"Estimated Returns\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"With an interest rate of \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 41\n      }\n    }, interestRate && interestRate[1].current, \"%\"), \", you would have to deposit \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 118\n      }\n    }, \" N\", formatCurrency(installment), \" \", frequency), \" to meet your target of\", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 14\n      }\n    }, \" N\", formatCurrency(target)), \" by \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 51\n      }\n    }, convertDate(targetDate)), \". Your estimated return from this investment will be \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 136\n      }\n    }, \"\\u20A6\", formatCurrency(expectedTotalReturns))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: this.handleStartInvesting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, \"Start Investing\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-9 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-medium text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, \"Check your estimated returns\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"Start Date\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(DateBox, {\n      onChange: date => this.handleChangeDate('startDate', date),\n      label: \"Start Date\",\n      placeholder: \"Set start date\",\n      name: \"startDate\",\n      value: startDate,\n      error: errors ? errors.startDate : errorObject && errorObject['startDate'],\n      min: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, \"End Date\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(DateBox, {\n      onChange: date => this.handleChangeDate('targetDate', date),\n      label: \"End Date\",\n      placeholder: \"Set target date\",\n      name: \"targetDate\",\n      value: targetDate,\n      error: errors ? errors.targetDate : errorObject && errorObject['endDate'],\n      min: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, \"Target Amount\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Textbox, {\n      onChange: this.handleChange,\n      type: \"text\",\n      label: \"Target amount\",\n      placeholder: \"\\u20A6\",\n      name: \"target\",\n      value: formatStringToCurrency(target),\n      error: errors ? errors.target : errorObject && errorObject['targetAmount'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, \"Frequency of Payment\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SelectBox, {\n      onChange: this.handleChange,\n      label: \"Frequency\",\n      placeholder: \"Set frequency\",\n      name: \"frequency\",\n      boxClasses: \"mt-3\",\n      options: investmentFrequency,\n      value: \"value\",\n      optionName: \"name\",\n      error: errors ? errors.frequency : errorObject && errorObject['frequency'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }), entryError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error text-left mt-2 mr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 32\n      }\n    }, entryError))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 align-items-center justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" col-md-5 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-block btn-primary\",\n      onClick: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, \"Calculate your returns\", loading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border text-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  var _config$data;\n\n  const {\n    app: {\n      config,\n      investment: {\n        data,\n        error\n      }\n    }\n  } = state;\n  return {\n    loading: getActionLoadingState(state, investmentActionTypes.CALCULATE_INVESTMENT_REQUEST),\n    interestRate: config === null || config === void 0 ? void 0 : (_config$data = config.data) === null || _config$data === void 0 ? void 0 : _config$data.investmentConfig,\n    data,\n    error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    calculateInvestment: payload => dispatch(calculateInvestment(payload))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Calculator));","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Calculator/index.js"],"names":["React","withRouter","connect","moment","getActionLoadingState","calculateInvestment","investmentActionTypes","SelectBox","Textbox","DateBox","Modal","validateFields","investmentFrequency","formatCurrency","verifyFrequencyPeriod","convertDate","serializeErrors","formatCurrencyToString","formatStringToCurrency","Calculator","Component","state","target","targetDate","Date","frequency","startDate","errors","estimationModal","entryError","installment","expectedTotalReturns","handleChange","event","name","value","setState","isNaN","handleChangeDate","item","date","toggleEstimationModal","prevState","submit","e","preventDefault","data","required","Object","keys","length","info","format","endDate","targetAmount","props","then","handleStartInvesting","history","push","pathname","routeName","render","interestRate","loading","error","errorObject","current","mapStateToProps","app","config","investment","CALCULATE_INVESTMENT_REQUEST","investmentConfig","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport { calculateInvestment } from '#/store/investment/actions'\nimport investmentActionTypes from '#/store/investment/actionTypes';\nimport SelectBox from '#/components/SelectBox';\nimport Textbox from '#/components/Textbox';\nimport DateBox from '#/components/DateBox';\nimport Modal from '#/components/Modal';\nimport { validateFields, investmentFrequency, formatCurrency, verifyFrequencyPeriod, convertDate, serializeErrors,   formatCurrencyToString,\n  formatStringToCurrency } from '#/utils';\nimport './style.scss';\n\nclass Calculator extends React.Component {\n  state = {\n    target: '',\n    targetDate: new Date(),\n    frequency: '',\n    startDate: new Date(),\n    errors: null,\n    estimationModal: false,\n    entryError: null,\n    installment: '',\n    expectedTotalReturns: '',\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    if(name === 'target') {\n      this.setState({ errors: null});\n        return this.setState({ [name]: formatCurrencyToString(value)}, ()=> {\n          if(isNaN(this.state[name])) {\n            return this.setState({ errors: { [name]: 'enter a valid number' } })\n          }\n        });\n      }\n    this.setState({ [name]: value });\n  }\n\n  handleChangeDate = (item, date) => {\n    this.setState({ [item]: date });\n  }\n\n  toggleEstimationModal = () => {\n    this.setState(prevState => ({ estimationModal: !prevState.estimationModal }))\n  }\n\n  submit = (e) => {\n    e.preventDefault();\n    this.setState({ errors: null, entryError: null });\n\n    const data = this.state;\n    const required = [ 'target', 'targetDate', 'frequency', 'startDate' ];\n    const errors = validateFields(data, required)\n\n    if (Object.keys(errors).length > 0) {\n      return this.setState({ errors });\n    }\n    const info = { \n      startDate: moment(this.state.startDate).format('YYYY-MM-DD'),\n      endDate: moment(this.state.targetDate).format('YYYY-MM-DD'),\n      frequency: this.state.frequency,\n      targetAmount: formatCurrencyToString(this.state.target),\n    }\n    const entryError = verifyFrequencyPeriod(info)\n    if (entryError) {\n      return this.setState({ entryError });\n    }\n    this.props.calculateInvestment(info)\n    .then(data => {\n      this.setState({ installment: data.installment, expectedTotalReturns: data.expectedTotalReturns }, () => {\n        this.toggleEstimationModal()\n      })\n    })\n  }\n\n  handleStartInvesting = () => {\n    this.props.history.push({\n      pathname: '/app/marketplace/',\n      state: { routeName: 'Marketplace' },\n    })\n  }\n\n  render() {\n    const { errors, target, targetDate, startDate, estimationModal, frequency, entryError, installment, expectedTotalReturns } = this.state;\n    const { interestRate, loading, error } = this.props;\n    const errorObject = serializeErrors(error);\n\n\n    return (\n      <div className=\"investment-calculator-page\">\n        {estimationModal &&\n          <Modal onClose={this.toggleEstimationModal}>\n          <div className=\"text-center\">\n            <h3 className=\"text-deep-blue\">Estimated Returns</h3>\n            <p>With an interest rate of <b>{interestRate && interestRate[1].current}%</b>, you would have to deposit <b> N{formatCurrency(installment)} {frequency}</b> to meet your target of \n             <b> N{formatCurrency(target)}</b> by <b>{convertDate(targetDate)}</b>. Your estimated return from this investment will be <b>₦{formatCurrency(expectedTotalReturns)}</b>\n            </p>\n            <div className=\"d-flex justify-content-center align-items-center\">\n              <button className=\"btn btn-sm btn-primary\" onClick={this.handleStartInvesting}>\n                Start Investing\n              </button>\n            </div>\n          </div>\n        </Modal>\n        }\n        <div className=\"col-md-9 text-center\">\n          <h3 className=\"text-medium text-deep-blue\">Check your estimated returns</h3>\n\n          <div className=\"card p-4\">\n            <div className=\"row mt-4 align-items-center\">\n              <div className=\"col-md-4 text-left\">\n                <p className=\"text-black text-medium mt-3\">Start Date</p>\n              </div>\n              <div className=\"col-md-8\">\n                <DateBox\n                  onChange={date => this.handleChangeDate('startDate', date)}\n                  label=\"Start Date\"\n                  placeholder=\"Set start date\"\n                  name=\"startDate\"\n                  value={startDate}\n                  error={errors ? errors.startDate : (errorObject && errorObject['startDate'])}\n                  min={new Date()}\n                />\n              </div>\n            </div>\n            <div className=\"row mt-4 align-items-center\">\n              <div className=\"col-md-4 text-left\">\n                <p className=\"text-black text-medium mt-3\">End Date</p>\n              </div>\n              <div className=\"col-md-8\">\n              <DateBox\n                onChange={date => this.handleChangeDate('targetDate', date)}\n                label=\"End Date\"\n                placeholder=\"Set target date\"\n                name=\"targetDate\"\n                value={targetDate}\n                error={errors ? errors.targetDate : (errorObject && errorObject['endDate'])}\n                min={new Date()}\n                />\n              </div>\n            </div>\n            <div className=\"row mt-4 align-items-center\">\n              <div className=\"col-md-4 text-left\">\n                <p className=\"text-black text-medium mt-3\">Target Amount</p>\n              </div>\n              <div className=\"col-md-8\">\n                <Textbox\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  label=\"Target amount\"\n                  placeholder=\"&#x20A6;\"\n                  name=\"target\"\n                  value={formatStringToCurrency(target)}\n                  error={errors ? errors.target : (errorObject && errorObject['targetAmount'])}\n                />\n              </div>\n            </div>\n\n            <div className=\"row mt-4 align-items-center\">\n              <div className=\"col-md-4 text-left\">\n                <p className=\"text-black text-medium mt-3\">Frequency of Payment</p>\n              </div>\n              <div className=\"col-md-8\">\n                <SelectBox\n                  onChange={this.handleChange}\n                  label=\"Frequency\"\n                  placeholder=\"Set frequency\"\n                  name=\"frequency\"\n                  boxClasses=\"mt-3\"\n                  options={investmentFrequency}\n                  value=\"value\"\n                  optionName=\"name\"\n                  error={errors ? errors.frequency : (errorObject && errorObject['frequency'])}\n                />\n                {entryError && <p className=\"text-error text-left mt-2 mr-3\">{entryError}</p>}\n              </div>\n            </div>\n\n            <div className=\"row mt-4 align-items-center justify-content-end\">\n              <div className=\" col-md-5 text-right\">\n                <button className=\"btn btn-sm btn-block btn-primary\" onClick={this.submit}>\n                  Calculate your returns\n                  {loading &&\n                    <div className=\"spinner-border text-white spinner-border-sm ml-2\"></div>\n                  }\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { \n    app: { \n      config,\n      investment: { data, error },\n    } \n  } = state;\n\n  return {\n    loading: getActionLoadingState(state, investmentActionTypes.CALCULATE_INVESTMENT_REQUEST),\n    interestRate: config?.data?.investmentConfig,\n    data,\n    error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    calculateInvestment: (payload) => dispatch(calculateInvestment(payload)),\n  };\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Calculator));\n"]},"metadata":{},"sourceType":"module"}