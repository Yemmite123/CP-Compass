{"ast":null,"code":"var _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Profile/KycVerification/index.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport { updateKyc, addBankDetails, getUserProfile } from \"#/store/profile/actions\";\nimport actionTypes from \"#/store/profile/actionTypes\";\nimport Alert from '#/components/Alert';\nimport CustomInput from \"#/components/CustomInput\";\nimport ImageUploadInput from \"#/components/ImageUploadInput\";\nimport { documentOptions, validateFields, serializeErrors } from '#/utils';\nimport './style.scss';\n\nclass KycVerification extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.imgUtilityRef = React.createRef();\n    this.imgGovernmentRef = React.createRef();\n    this.state = {\n      governmentFileName: '',\n      governmentFile: null,\n      utilityFileName: '',\n      utilityFile: null,\n      documentType: '',\n      errors: null,\n      kycErrors: null,\n      accountNumber: '',\n      bankCode: '',\n      accountName: '',\n      passport: null,\n      signature: null\n    };\n\n    this.setValues = () => {\n      const {\n        bankInfo\n      } = this.props;\n\n      if (bankInfo) {\n        this.setState({\n          accountNumber: bankInfo && bankInfo.accountNumber ? bankInfo.accountNumber : '',\n          bankCode: bankInfo && bankInfo.bankCode ? bankInfo.bankCode : '',\n          accountName: bankInfo && bankInfo.accountName ? bankInfo.accountName : ''\n        });\n      }\n    };\n\n    this.handleBankChange = event => {\n      const {\n        value\n      } = event.target;\n\n      if (value === '...select...') {\n        return this.setState({\n          bankCode: ''\n        });\n        ;\n      }\n\n      return this.setState({\n        bankCode: value\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleGovernmetFileSelect = file => {\n      return this.setState({\n        governmentFileName: file.name,\n        governmentFile: file\n      });\n    };\n\n    this.handleUtilityFileSelect = file => {\n      return this.setState({\n        utilityFileName: file.name,\n        utilityFile: file\n      });\n    };\n\n    this.handleDocumentChange = event => {\n      const {\n        value\n      } = event.target;\n      this.setState({\n        documentType: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        kycErrors: null\n      });\n      const {\n        updateKyc\n      } = this.props;\n      const {\n        governmentFile,\n        utilityFile,\n        documentType,\n        passport,\n        signature\n      } = this.state;\n\n      if (!governmentFile && !utilityFile && !signature && !passport) {\n        return this.setState({\n          kycErrors: {\n            file: 'please select a file'\n          }\n        });\n      }\n\n      if (governmentFile && !documentType) {\n        return this.setState({\n          kycErrors: {\n            document: 'please select a type'\n          }\n        });\n      }\n\n      const formData = new FormData();\n      if (utilityFile) formData.append('utility_bill', utilityFile);\n      if (governmentFile) formData.append(documentType, governmentFile);\n      if (signature) formData.append('signature', signature);\n      if (passport) formData.append('passport-photograph', passport);\n      updateKyc(formData);\n    };\n\n    this.handleSubmitBankInfo = event => {\n      event.preventDefault();\n      this.setState({\n        errors: null\n      });\n      const {\n        bankCode,\n        accountNumber\n      } = this.state;\n      const data = this.state;\n      const required = ['accountNumber', 'bankCode'];\n      const errors = validateFields(data, required);\n\n      if (Object.keys(errors).length > 0) {\n        return this.setState({\n          errors\n        });\n      }\n\n      const payload = {\n        bankCode,\n        accountNumber\n      };\n      this.props.addBankDetails(payload).then(() => this.props.getUserProfile());\n    };\n  }\n\n  componentDidMount() {\n    this.setValues();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.bankInfo !== this.props.bankInfo) {\n      this.setValues();\n    }\n  }\n\n  render() {\n    const {\n      errors,\n      kycErrors,\n      accountNumber,\n      bankCode,\n      accountName\n    } = this.state;\n    const {\n      bvn,\n      loading,\n      data,\n      error,\n      banks,\n      bankLoading,\n      bankData,\n      bankError\n    } = this.props;\n    const errorObject = serializeErrors(bankError);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"section-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"section-header mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, \"Bank Verification Number\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"section-form mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      name: \"bvn\",\n      label: \"BVN\",\n      value: bvn ? `******${bvn.slice(7)}` : 'No BVN yet',\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomInput, {\n      name: \"bankCode\",\n      label: \"Bank Name\",\n      value: bankCode,\n      onChange: this.handleBankChange,\n      type: \"select\",\n      valueKey: \"code\",\n      options: banks ? banks : [],\n      error: errors ? errors.bankCode : errorObject && errorObject['bankCode'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomInput, {\n      name: \"accountNumber\",\n      label: \"Account Number\",\n      value: accountNumber,\n      onChange: this.handleChange,\n      error: errors ? errors.accountNumber : errorObject && errorObject['accountNumber'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomInput, {\n      name: \"accountName\",\n      label: \"Account Name\",\n      value: accountName,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"section-form__button-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col-md-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, bankData && bankData.message !== '' && /*#__PURE__*/React.createElement(Alert, {\n      alert: {\n        type: \"success\",\n        message: bankData.message\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 57\n      }\n    })), bankError && typeof bankError === 'string' && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 62\n      }\n    }, bankError), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-default\",\n      disabled: bankLoading,\n      onClick: this.handleSubmitBankInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, \"Save changes\", bankLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"section-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"section-header mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, \"KYC Documents\"), /*#__PURE__*/React.createElement(ImageUploadInput, {\n      acceptsList: \"image/png, image/jpeg, application/pdf\",\n      label: \"Upload Utility Bill\",\n      handleFile: this.handleUtilityFileSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ImageUploadInput, {\n      acceptsList: \"image/png, image/jpeg, application/pdf\",\n      label: \"Upload Government-issued ID\",\n      handleFile: this.handleGovernmetFileSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"id-type-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      name: \"documentType\",\n      label: \"Type of ID uploaded\",\n      onChange: this.handleDocumentChange,\n      type: \"select\",\n      options: documentOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    })), kycErrors && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, kycErrors.document)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"section-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"section-header mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, \"Other Documents\"), /*#__PURE__*/React.createElement(ImageUploadInput, {\n      acceptsList: \"image/png, image/jpeg, application/pdf\",\n      label: \"Upload Signature Specimen\",\n      handleFile: file => this.setState({\n        signature: file\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ImageUploadInput, {\n      acceptsList: \"image/png, image/jpeg, application/pdf\",\n      label: \"Upload Passport Photo\",\n      handleFile: file => this.setState({\n        passport: file\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"section-form__button-area mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col-md-7 mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, error && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }, error), kycErrors && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 29\n      }\n    }, kycErrors.file), data && /*#__PURE__*/React.createElement(Alert, {\n      alert: {\n        type: \"success\",\n        message: 'Successfully uploaded your document(s)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-default\",\n      disabled: loading,\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, \"Save changes\", loading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  var _banks$banks;\n\n  const {\n    app: {\n      profile: {\n        kyc: {\n          error,\n          data\n        },\n        banks\n      }\n    }\n  } = state;\n  return {\n    loading: getActionLoadingState(state, actionTypes.UPDATE_KYC_REQUEST),\n    bankLoading: getActionLoadingState(state, actionTypes.ADD_BANK_DETAILS_REQUEST),\n    error,\n    data,\n    banks: ((_banks$banks = banks.banks) === null || _banks$banks === void 0 ? void 0 : _banks$banks.data) && banks.banks.data.banks,\n    bankData: banks.data && banks.data,\n    bankError: banks.error && banks.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateKyc: payload => dispatch(updateKyc(payload)),\n    addBankDetails: payload => dispatch(addBankDetails(payload)),\n    getUserProfile: () => dispatch(getUserProfile())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(KycVerification));","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Profile/KycVerification/index.js"],"names":["React","withRouter","connect","getActionLoadingState","updateKyc","addBankDetails","getUserProfile","actionTypes","Alert","CustomInput","ImageUploadInput","documentOptions","validateFields","serializeErrors","KycVerification","Component","imgUtilityRef","createRef","imgGovernmentRef","state","governmentFileName","governmentFile","utilityFileName","utilityFile","documentType","errors","kycErrors","accountNumber","bankCode","accountName","passport","signature","setValues","bankInfo","props","setState","handleBankChange","event","value","target","handleChange","name","handleGovernmetFileSelect","file","handleUtilityFileSelect","handleDocumentChange","handleSubmit","preventDefault","document","formData","FormData","append","handleSubmitBankInfo","data","required","Object","keys","length","payload","then","componentDidMount","componentDidUpdate","prevProps","render","bvn","loading","error","banks","bankLoading","bankData","bankError","errorObject","slice","message","type","mapStateToProps","app","profile","kyc","UPDATE_KYC_REQUEST","ADD_BANK_DETAILS_REQUEST","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport { updateKyc, addBankDetails, getUserProfile  } from \"#/store/profile/actions\";\nimport actionTypes from \"#/store/profile/actionTypes\";\nimport Alert from '#/components/Alert';\nimport CustomInput from \"#/components/CustomInput\";\nimport ImageUploadInput from \"#/components/ImageUploadInput\";\nimport { documentOptions, validateFields, serializeErrors } from '#/utils';\nimport './style.scss';\n\nclass KycVerification extends React.Component {\n  imgUtilityRef = React.createRef();\n  imgGovernmentRef = React.createRef();\n\n  state = {\n    governmentFileName: '',\n    governmentFile: null,\n    utilityFileName: '',\n    utilityFile: null,\n    documentType: '',\n    errors: null,\n    kycErrors: null,\n    accountNumber: '',\n    bankCode: '',\n    accountName: '',\n    passport: null, \n    signature: null,\n  }\n\n  componentDidMount() {\n    this.setValues()\n  }\n\n  setValues = () => {\n    const { bankInfo } = this.props;\n    if(bankInfo){\n      this.setState({\n        accountNumber: bankInfo && bankInfo.accountNumber ? bankInfo.accountNumber : '',\n        bankCode: bankInfo && bankInfo.bankCode ? bankInfo.bankCode : '',\n        accountName: bankInfo && bankInfo.accountName ? bankInfo.accountName : '',\n      })\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.bankInfo !== this.props.bankInfo) {\n      this.setValues();\n    }\n  }\n\n  handleBankChange = (event) => {\n    const { value } = event.target\n    if(value === '...select...'){\n      return this.setState({ bankCode: '' });;\n    }\n    return this.setState({ bankCode: value });\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target\n    this.setState({ [name]: value });\n  }\n\n  handleGovernmetFileSelect = (file) => {\n    return this.setState({ governmentFileName: file.name, governmentFile: file })\n  }\n\n  handleUtilityFileSelect = (file) => {\n    return this.setState({ utilityFileName: file.name, utilityFile: file })\n  }\n\n  handleDocumentChange = (event) => {\n    const { value } = event.target\n    this.setState({ documentType: value });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ kycErrors: null });\n\n    const { updateKyc } = this.props;\n    const { governmentFile, utilityFile, documentType, passport, signature } = this.state;\n    if(!governmentFile && !utilityFile && !signature && !passport) {\n      return this.setState({ kycErrors: {file: 'please select a file'} });\n    }\n    if(governmentFile && !documentType) {\n      return this.setState({ kycErrors: { document: 'please select a type'} });\n    }\n    const formData = new FormData();\n    if (utilityFile) formData.append('utility_bill', utilityFile)\n    if (governmentFile) formData.append(documentType, governmentFile)\n    if (signature) formData.append('signature', signature)\n    if (passport) formData.append('passport-photograph', passport)\n\n    updateKyc(formData);\n  }\n\n  handleSubmitBankInfo = (event) => {\n    event.preventDefault();\n    this.setState({ errors: null });\n    const { bankCode, accountNumber } = this.state;\n\n    const data = this.state;\n    const required = [ 'accountNumber', 'bankCode' ];\n    const errors = validateFields(data, required)\n    if (Object.keys(errors).length > 0) {\n      return this.setState({ errors });\n    }\n    const payload = { bankCode, accountNumber }\n    this.props.addBankDetails(payload).then(() => this.props.getUserProfile());\n  }\n\n  render() {\n    const { errors, kycErrors, accountNumber, bankCode, accountName } = this.state;\n    const { bvn, loading, data, error, banks, bankLoading, bankData, bankError } = this.props\n    const errorObject = serializeErrors(bankError);\n\n    return (\n      <div className=\"mb-5\">\n        <div className=\"section-container\">\n          <h2 className=\"section-header mb-3\">Bank Verification Number</h2>\n          <div className=\"section-form mt-4\">\n            <CustomInput\n              name=\"bvn\"\n              label=\"BVN\"\n              value={bvn ? `******${bvn.slice(7)}` : 'No BVN yet'}\n              disabled\n            />\n            <CustomInput\n              name=\"bankCode\"\n              label=\"Bank Name\"\n              value={bankCode}\n              onChange={this.handleBankChange}\n              type=\"select\"\n              valueKey=\"code\"\n              options={banks ? banks : []}\n              error={errors ? errors.bankCode : (errorObject && errorObject['bankCode'])}\n            />\n            <CustomInput\n              name=\"accountNumber\"\n              label=\"Account Number\"\n              value={accountNumber}\n              onChange={this.handleChange}\n              error={errors ? errors.accountNumber : (errorObject && errorObject['accountNumber'])}\n            />\n            <CustomInput\n              name=\"accountName\"\n              label=\"Account Name\"\n              value={accountName}\n              disabled\n            />\n            <div className=\"section-form__button-area\">\n              <div className=\"col col-md-7\">\n                {bankData && bankData.message !== '' && <Alert alert={{ type:\"success\", message: bankData.message}}/>}\n              </div>\n              {bankError && typeof bankError === 'string' && <p className=\"text-error text-left\">{bankError}</p>}\n              <button className=\"btn-default\" disabled={bankLoading} onClick={this.handleSubmitBankInfo}>\n                Save changes\n                {bankLoading && (\n                  <div className=\"spinner-border spinner-border-white spinner-border-sm ml-2\"></div>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"section-container\">\n          <h2 className=\"section-header mb-3\">KYC Documents</h2>\n          <ImageUploadInput\n            acceptsList=\"image/png, image/jpeg, application/pdf\"\n            label=\"Upload Utility Bill\"\n            handleFile={this.handleUtilityFileSelect}\n          />\n          <ImageUploadInput\n            acceptsList=\"image/png, image/jpeg, application/pdf\"\n            label=\"Upload Government-issued ID\"\n            handleFile={this.handleGovernmetFileSelect}\n          />\n          <div className=\"id-type-area\">\n            <CustomInput\n              name=\"documentType\"\n              label=\"Type of ID uploaded\"\n              onChange={this.handleDocumentChange}\n              type=\"select\"\n              options={documentOptions}\n            />\n          </div>\n          {kycErrors && <p className=\"text-error\">{kycErrors.document}</p>}\n        </div>\n\n        <div className=\"section-container\">\n          <h2 className=\"section-header mb-3\">Other Documents</h2>\n          <ImageUploadInput\n            acceptsList=\"image/png, image/jpeg, application/pdf\"\n            label=\"Upload Signature Specimen\"\n            handleFile={file => this.setState({ signature: file})}\n          />\n          <ImageUploadInput\n            acceptsList=\"image/png, image/jpeg, application/pdf\"\n            label=\"Upload Passport Photo\"\n            handleFile={file => this.setState({ passport: file})}\n          />\n          <div className=\"section-form__button-area mt-5\">\n            <div className=\"col col-md-7 mt-3\">\n              {error && <p className=\"text-error\">{error}</p>}\n              {kycErrors && <p className=\"text-error\">{kycErrors.file}</p>}\n              {data && <Alert alert={{ type:\"success\", message: 'Successfully uploaded your document(s)'}}/>}\n            </div>\n            <button className=\"btn-default\" disabled={loading} onClick={this.handleSubmit}>\n              Save changes\n              {loading && (\n                <div className=\"spinner-border spinner-border-white spinner-border-sm ml-2\"></div>\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { app: { profile: { kyc: { error, data }, banks } } } = state;\n  return {\n    loading: getActionLoadingState(state, actionTypes.UPDATE_KYC_REQUEST),\n    bankLoading: getActionLoadingState(state, actionTypes.ADD_BANK_DETAILS_REQUEST),\n    error,\n    data,\n    banks: banks.banks?.data && banks.banks.data.banks,\n    bankData: banks.data && banks.data,\n    bankError: banks.error && banks.error\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateKyc: (payload) => dispatch(updateKyc(payload)),\n    addBankDetails: (payload) => dispatch(addBankDetails(payload)),\n    getUserProfile: () => dispatch(getUserProfile()),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(KycVerification));\n"]},"metadata":{},"sourceType":"module"}