{"ast":null,"code":"var _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Portfolio/SingleInvestment/index.js\";\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport moment from 'moment';\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport actionTypes from \"#/store/portfolio/actionTypes\";\nimport { fetchSingleInvestment, topUpInvestment } from '#/store/portfolio/actions';\nimport { disableAutocharge } from '#/store/investment/actions';\nimport { getCards } from '#/store/wallet/actions';\nimport { confirmPin } from '#/store/security/actions';\nimport securityActionTypes from '#/store/security/actionTypes';\nimport Card from '#/components/Card';\nimport PaymentMethod from '#/components/PaymentMethod';\nimport Modal from '#/components/Modal';\nimport DebitCard from '#/components/DebitCard';\nimport Textbox from '#/components/Textbox';\nimport Transaction from '#/components/Transaction';\nimport PinInput from '#/components/PinInput';\nimport { formatCurrency, validateFields, fundingSource, serializeErrors, transactionType, formatCurrencyToString, formatStringToCurrency } from '#/utils';\nimport './style.scss';\n\nclass SingleInvestment extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      amount: '',\n      showAmountModal: false,\n      showFundingSourceModal: false,\n      showCardsModal: false,\n      showAutomateModal: false,\n      showTransactionModal: false,\n      selectedMethod: '',\n      selectedMethodError: null,\n      errors: null,\n      cardId: null,\n      selectedTransaction: null,\n      showPinModal: false,\n      pinError: null,\n      pin: {}\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n\n      if (name === 'amount') {\n        this.setState({\n          errors: null\n        });\n        return this.setState({\n          [name]: formatCurrencyToString(value)\n        }, () => {\n          if (isNaN(this.state[name])) {\n            return this.setState({\n              errors: {\n                [name]: 'enter a valid number'\n              }\n            });\n          }\n        });\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handlePin = pin => {\n      this.setState({\n        pin\n      });\n    };\n\n    this.handleSelectMethod = event => {\n      this.setState({\n        selectedMethod: event.target.id\n      });\n    };\n\n    this.handleSelectAmount = () => {\n      // this.toggleTransactionPinModal()\n      this.toggleAmountModal();\n    };\n\n    this.handleTopUp = () => {\n      const {\n        amount\n      } = this.state;\n      const required = ['amount'];\n      const errors = validateFields({\n        amount\n      }, required);\n\n      if (Object.keys(errors).length > 0) {\n        return this.setState({\n          errors\n        });\n      }\n\n      this.toggleAmountModal();\n      this.toggleTransactionPinModal();\n    };\n\n    this.handleSelectedFundingSource = () => {\n      const {\n        selectedMethod\n      } = this.state;\n      const required = ['selectedMethod'];\n      const errors = validateFields({\n        selectedMethod\n      }, required);\n\n      if (Object.keys(errors).length > 0) {\n        return this.setState({\n          selectedMethodError: 'please select a method'\n        });\n      }\n\n      if (selectedMethod === 'wallet') {\n        var _this$props$investmen, _this$props$investmen2;\n\n        this.toggleFundingModal();\n        return ((_this$props$investmen = this.props.investment) === null || _this$props$investmen === void 0 ? void 0 : _this$props$investmen.autoCharge) === 0 || ((_this$props$investmen2 = this.props.investment) === null || _this$props$investmen2 === void 0 ? void 0 : _this$props$investmen2.autoChargeChannel) !== selectedMethod ? this.toggleAutomateModal() : this.handlePay();\n      }\n\n      this.toggleFundingModal();\n      this.toggleAllCardsModal();\n    };\n\n    this.handleSelectCard = card => {\n      const {\n        selectedMethod\n      } = this.state;\n      this.setState({\n        cardId: card.id\n      }, () => {\n        var _this$props$investmen3, _this$props$investmen4;\n\n        this.toggleAllCardsModal();\n        return ((_this$props$investmen3 = this.props.investment) === null || _this$props$investmen3 === void 0 ? void 0 : _this$props$investmen3.autoCharge) === 0 || ((_this$props$investmen4 = this.props.investment) === null || _this$props$investmen4 === void 0 ? void 0 : _this$props$investmen4.autoChargeChannel) !== selectedMethod ? this.toggleAutomateModal() : this.handlePay();\n      });\n    };\n\n    this.handleNewCardSelect = () => {\n      var _this$props$investmen5;\n\n      this.toggleAllCardsModal();\n      return ((_this$props$investmen5 = this.props.investment) === null || _this$props$investmen5 === void 0 ? void 0 : _this$props$investmen5.autoCharge) === 0 ? this.toggleAutomateModal() : this.handlePay();\n    };\n\n    this.handlePay = autoCharge => {\n      const {\n        amount,\n        selectedMethod,\n        cardId\n      } = this.state;\n      const {\n        params\n      } = this.props.match;\n      const payment = {\n        method: selectedMethod,\n        reoccurring: cardId ? true : false,\n        cardId: cardId && cardId\n      };\n      const payload = {\n        amount: formatCurrencyToString(amount),\n        payment,\n        currency: 'NGN',\n        autoCharge: autoCharge && autoCharge\n      };\n      this.props.topUpInvestment(payload, params.investmentId).then(data => {\n        this.state.showAutomateModal && this.toggleAutomateModal();\n        this.setState({\n          amount: '',\n          selectedMethod: '',\n          errors: null,\n          cardId: null\n        });\n        setTimeout(() => this.props.fetchSingleInvestment(params.investmentId), 3000);\n      });\n    };\n\n    this.handleTransactionSelect = transaction => {\n      this.setState({\n        selectedTransaction: transaction\n      }, () => this.setState({\n        showTransactionModal: true\n      }));\n    };\n\n    this.handleDisableAutocharge = () => {\n      const {\n        params\n      } = this.props.match;\n      this.props.disableAutocharge(params.investmentId).then(data => {\n        this.props.fetchSingleInvestment(params.investmentId);\n      });\n    };\n\n    this.handleTransactionVerification = e => {\n      e.preventDefault();\n      const {\n        pin\n      } = this.state;\n      const {\n        confirmPin\n      } = this.props;\n      this.setState({\n        pinError: null\n      });\n      const initialPin = [pin.value1, pin.value2, pin.value3, pin.value4].join('');\n\n      if (initialPin.length < 4) {\n        return this.setState({\n          pinError: 'field is required'\n        });\n      }\n\n      confirmPin({\n        pin: initialPin\n      }).then(data => {\n        this.toggleTransactionPinModal();\n        this.toggleFundingModal();\n      });\n    };\n\n    this.handleLiquidate = () => {\n      const {\n        params\n      } = this.props.match;\n      const {\n        investment\n      } = this.props;\n      return this.props.history.push({\n        pathname: `/app/portfolio/liquidate/${params.investmentId}`,\n        state: {\n          investment: investment,\n          routeName: 'Liquidate Investment'\n        }\n      });\n    };\n\n    this.toggleModal = () => {\n      this.setState(prevState => ({\n        showTransactionModal: !prevState.showTransactionModal\n      }));\n    };\n\n    this.toggleTransactionPinModal = () => {\n      this.setState(prevState => ({\n        showPinModal: !prevState.showPinModal\n      }));\n    };\n\n    this.toggleAmountModal = () => {\n      this.setState(prevState => ({\n        showAmountModal: !prevState.showAmountModal\n      }));\n    };\n\n    this.toggleFundingModal = () => {\n      this.setState(prevState => ({\n        showFundingSourceModal: !prevState.showFundingSourceModal\n      }));\n    };\n\n    this.toggleAllCardsModal = () => {\n      this.setState(prevState => ({\n        showCardsModal: !prevState.showCardsModal\n      }));\n    };\n\n    this.toggleAutomateModal = () => {\n      this.setState(prevState => ({\n        showAutomateModal: !prevState.showAutomateModal\n      }));\n    };\n  }\n\n  componentDidMount() {\n    const {\n      params\n    } = this.props.match;\n\n    if (!Number.isInteger(parseInt(params.investmentId, 10))) {\n      return this.props.history.push({\n        pathname: `/app/portfolio/`,\n        state: {\n          routeName: 'Portfolio'\n        }\n      });\n    }\n\n    this.props.getCards();\n    this.props.fetchSingleInvestment(params.investmentId);\n  }\n\n  render() {\n    var _investment$transacti, _investment$transacti2;\n\n    const {\n      investment,\n      walletDetails,\n      payLoading,\n      cards,\n      error,\n      pinLoading,\n      confirmPinError\n    } = this.props;\n    const {\n      showAmountModal,\n      showFundingSourceModal,\n      showCardsModal,\n      selectedMethod,\n      selectedMethodError,\n      showAutomateModal,\n      errors,\n      amount,\n      showTransactionModal,\n      selectedTransaction,\n      showPinModal,\n      pinError\n    } = this.state;\n    const errorObject = serializeErrors(error);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"single-portfolio-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }\n    }, showPinModal && /*#__PURE__*/React.createElement(Modal, {\n      classes: \"transaction-modal\",\n      onClose: this.toggleTransactionPinModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, \"Enter Transaction PIN\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pin-section ml-auto mr-auto mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PinInput, {\n      onChange: this.handlePin,\n      error: pinError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary btn-block mt-5\",\n      onClick: this.handleTransactionVerification,\n      disabled: pinLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 15\n      }\n    }, \"Continue\", pinLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 19\n      }\n    })), pinError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 28\n      }\n    }, pinError), confirmPinError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 35\n      }\n    }, confirmPinError), error && typeof error === 'string' && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 55\n      }\n    }, error))), showTransactionModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex border-bottom pb-1 align-items-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: transactionType(selectedTransaction.type),\n      className: \"img-fluid mr-3\",\n      alt: \"transaction type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-deep-blue text-medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 19\n      }\n    }, \"Transaction Details\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"tex-left text-small text-grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 19\n      }\n    }, selectedTransaction.title))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-small mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 19\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-deep-blue text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 19\n      }\n    }, \"\\u20A6\", selectedTransaction.amount)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-small mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 19\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-deep-blue text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }, new Date(selectedTransaction.paidAt ? selectedTransaction.paidAt : selectedTransaction.initializedAt).toDateString()))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-small mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 19\n      }\n    }, \"Fee\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-deep-blue text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 19\n      }\n    }, \"\\u20A6\", selectedTransaction.fees ? selectedTransaction.fees : 0.00)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-small mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 19\n      }\n    }, \"Reference Number\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-deep-blue text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 19\n      }\n    }, selectedTransaction.reference))))), showAmountModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleAmountModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }\n    }, \"How much do you want to add to this investment right now?\"), /*#__PURE__*/React.createElement(Textbox, {\n      onChange: this.handleChange,\n      type: \"text\",\n      label: \"Amount\",\n      placeholder: \"Amount\",\n      name: \"amount\",\n      value: formatStringToCurrency(amount),\n      error: errors ? errors.amount : errorObject && errorObject['amount'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 15\n      }\n    }), walletDetails && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-grey text-x-small mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 15\n      }\n    }, \"Available balance \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 76\n      }\n    }, \"\\u20A6 \", walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : 0)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: this.handleTopUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 15\n      }\n    }, \"Proceed\"))), showFundingSourceModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleFundingModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 15\n      }\n    }, \"Choose a funding source\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 15\n      }\n    }, fundingSource.map(method => /*#__PURE__*/React.createElement(PaymentMethod, {\n      onSelect: this.handleSelectMethod,\n      selected: selectedMethod === method.value ? true : false,\n      imgUrl: method.imgUrl,\n      imgBlue: method.imgBlue,\n      key: Math.random() * 1000,\n      value: method.value,\n      label: method.label,\n      balance: walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 19\n      }\n    })), selectedMethodError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 41\n      }\n    }, selectedMethodError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary mt-3\",\n      onClick: this.handleSelectedFundingSource,\n      disabled: payLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }\n    }, \"Proceed\")))), showCardsModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleAllCardsModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/close.svg'),\n      alt: \"close\",\n      onClick: this.toggleAllCardsModal,\n      className: \"cursor-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 15\n      }\n    })), cards && cards.cards.length > 0 && cards.cards.map(card => /*#__PURE__*/React.createElement(DebitCard, {\n      card: card,\n      handleSelect: this.handleSelectCard,\n      key: card.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center cursor-pointer\",\n      onClick: this.handleNewCardSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/add-card.svg'),\n      className: \"img-fluid mr-3\",\n      alt: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-deep-blue text-medium mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }\n    }, \"Add money from a new debit card\")), /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/right-arrow.svg'),\n      className: \"img-fluid cursor-pointer\",\n      alt: \"arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 15\n      }\n    }))), showAutomateModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleAutomateModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 15\n      }\n    }, \"Automate funding for this investment\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-small text-black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 15\n      }\n    }, \"Let us help you reach your target easily by funding from your chosen source on a \", investment && investment.frequency, \" basis.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 13\n      }\n    }, payLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-primary text-primary spinner-border-sm mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mr-3 text-deep-blue mb-0 cursor-pointer\",\n      onClick: () => this.handlePay(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 15\n      }\n    }, \"No, I\\u2019ll add money myself\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: () => this.handlePay(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 15\n      }\n    }, \"Yes\")), error && typeof error === 'string' && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 52\n      }\n    }, error)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => this.props.history.push('/app/portfolio'),\n      className: \"cursor-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"#/assets/icons/back-arrow.svg\"),\n      alt: \"transfer logo\",\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 13\n      }\n    }), \"Back\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: `pl-3 pr-3 text-small text-capitalize single-portfolio-page--${investment === null || investment === void 0 ? void 0 : investment.order_status}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }\n    }, investment === null || investment === void 0 ? void 0 : investment.order_status)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      classes: \"text-center p-4 border-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-small text-grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 15\n      }\n    }, \"Amount Invested\"), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 15\n      }\n    }, \"\\u20A6 \", investment ? formatCurrency(investment.balance) : 0))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      classes: \"text-center p-4 border-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-small text-grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 15\n      }\n    }, \"Interest\"), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 15\n      }\n    }, \"\\u20A6 \", investment ? formatCurrency(investment.accruedInterest) : 0))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      classes: \"text-center p-4 bg-default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-small text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 15\n      }\n    }, \"Interest Rate P.A.\"), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 15\n      }\n    }, investment ? investment.interestRate : 0, \"%\")))), /*#__PURE__*/React.createElement(Card, {\n      classes: \"mt-4 card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 text-center mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/top-up.svg'),\n      alt: \"plus\",\n      className: `img-fluid ${['active', 'booked'].includes(investment === null || investment === void 0 ? void 0 : investment.order_status) ? 'cursor-pointer' : 'cursor-block disabled'}`,\n      onClick: ['active', 'booked'].includes(investment === null || investment === void 0 ? void 0 : investment.order_status) ? this.handleSelectAmount : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: `text-blue mb-0 text-small ${['active', 'booked'].includes(investment === null || investment === void 0 ? void 0 : investment.order_status) ? 'cursor-pointer' : 'cursor-block disabled'}`,\n      onClick: ['active', 'booked'].includes(investment === null || investment === void 0 ? void 0 : investment.order_status) ? this.handleSelectAmount : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 15\n      }\n    }, \"Top up\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 text-center mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 13\n      }\n    }, (investment === null || investment === void 0 ? void 0 : investment.autoChargeChannel) && (investment === null || investment === void 0 ? void 0 : investment.autoChargeChannel) !== '' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n      src: (investment === null || investment === void 0 ? void 0 : investment.autoCharge) === 0 ? require('#/assets/icons/toggle-off.svg') : require('#/assets/icons/toggle-on.svg'),\n      alt: \"plus\",\n      className: `img-fluid ${['active', 'booked'].includes(investment === null || investment === void 0 ? void 0 : investment.order_status) ? 'cursor-pointer' : 'cursor-block disabled'}`,\n      onClick: ['active', 'booked'].includes(investment === null || investment === void 0 ? void 0 : investment.order_status) ? this.handleDisableAutocharge : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: `text-blue mb-0 text-small ${['active', 'booked'].includes(investment === null || investment === void 0 ? void 0 : investment.order_status) ? 'cursor-pointer' : 'cursor-block disabled'}`,\n      onClick: ['active', 'booked'].includes(investment === null || investment === void 0 ? void 0 : investment.order_status) ? this.handleDisableAutocharge : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 15\n      }\n    }, \"Automated Pay\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 text-center mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/liquidate.svg'),\n      alt: \"plus\",\n      className: `img-fluid ${['active', 'booked'].includes(investment === null || investment === void 0 ? void 0 : investment.order_status) ? 'cursor-pointer' : 'cursor-block disabled'}`,\n      onClick: ['active', 'booked'].includes(investment === null || investment === void 0 ? void 0 : investment.order_status) ? this.handleLiquidate : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: `text-blue mb-0 text-small ${['active', 'booked'].includes(investment === null || investment === void 0 ? void 0 : investment.order_status) ? 'cursor-pointer' : 'cursor-block disabled'}`,\n      onClick: ['active', 'booked'].includes(investment === null || investment === void 0 ? void 0 : investment.order_status) ? this.handleLiquidate : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 15\n      }\n    }, \"Liquidate\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card p-3 min-height-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"border-bottom text-deep-blue text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 15\n      }\n    }, \"Payment Amount\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 15\n      }\n    }, \"\\u20A6\", investment ? formatCurrency(investment.installment) : 0, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-blue text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 85\n      }\n    }, \"/\", investment && investment.frequency)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"font-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 15\n      }\n    }, \"Next Deposit Date - \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 61\n      }\n    }, investment && investment.nextPaymentDate ? moment(investment.nextPaymentDate).format('MMM D, YYYY') : 'Not Available')))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card p-3 min-height-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"border-bottom text-deep-blue text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 15\n      }\n    }, \"Investment Progress\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-end flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 17\n      }\n    }, investment ? investment.percentageCompletion : 0, \"%\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"right-side-text text-grey text-small mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 19\n      }\n    }, \"Target\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 19\n      }\n    }, \"\\u20A6\", investment ? formatCurrency(investment.targetAmount) : 0))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar bg-success\",\n      style: {\n        width: `${investment ? investment.percentageCompletion : 0}%`\n      },\n      role: \"progressbar\",\n      \"aria-valuenow\": investment ? investment.percentageCompletion : 0,\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-grey text-small mt-2 mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 15\n      }\n    }, \"Your saving determine your plan progress\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card p-3 min-height-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"border-bottom text-deep-blue text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 15\n      }\n    }, \"Investment Info\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"font-light text-small mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 19\n      }\n    }, \"Investment Name\"), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"font-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 19\n      }\n    }, investment ? investment.title : '')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right-side-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"font-light text-small mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 19\n      }\n    }, \"Target Amount\"), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"font-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 19\n      }\n    }, \"\\u20A6\", investment ? formatCurrency(investment.targetAmount) : 0))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"font-light text-small mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 19\n      }\n    }, \"Target Date\"), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"font-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 19\n      }\n    }, investment && investment.endDate ? moment(investment.endDate).format('MMM D, YYYY') : 'No end date')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right-side-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"font-light text-small mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 19\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"font-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 19\n      }\n    }, investment && investment.startDate ? moment(investment.startDate).format('MMM D, YYYY') : 'N/A')))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-4 card p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"border-bottom text-deep-blue text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }\n    }, \"Transactions\"), investment && ((_investment$transacti = investment.transactions) === null || _investment$transacti === void 0 ? void 0 : _investment$transacti.length) > 0 ? (_investment$transacti2 = investment.transactions) === null || _investment$transacti2 === void 0 ? void 0 : _investment$transacti2.map(transaction => /*#__PURE__*/React.createElement(Transaction, {\n      transaction: transaction,\n      key: transaction.reference,\n      handleSelect: this.handleTransactionSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/receipt.svg'),\n      alt: \"plus\",\n      className: \"img-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"font-light text-grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 13\n      }\n    }, \" No Transactions\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    app: {\n      portfolio: {\n        investment,\n        error\n      },\n      wallet: {\n        cards,\n        walletDetails\n      },\n      security: {\n        error: confirmPinError\n      }\n    }\n  } = state;\n  return {\n    loading: getActionLoadingState(state, actionTypes.FETCH_SINGLE_INVESTMENT_REQUEST),\n    payLoading: getActionLoadingState(state, actionTypes.TOP_UP_INVESTMENT_REQUEST),\n    pinLoading: getActionLoadingState(state, securityActionTypes.CONFIRM_PIN_REQUEST),\n    investment,\n    walletDetails,\n    confirmPinError,\n    cards,\n    error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchSingleInvestment: id => dispatch(fetchSingleInvestment(id)),\n    getCards: () => dispatch(getCards()),\n    topUpInvestment: (payload, id) => dispatch(topUpInvestment(payload, id)),\n    disableAutocharge: id => dispatch(disableAutocharge(id)),\n    confirmPin: payload => dispatch(confirmPin(payload))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SingleInvestment));","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Portfolio/SingleInvestment/index.js"],"names":["React","withRouter","connect","moment","getActionLoadingState","actionTypes","fetchSingleInvestment","topUpInvestment","disableAutocharge","getCards","confirmPin","securityActionTypes","Card","PaymentMethod","Modal","DebitCard","Textbox","Transaction","PinInput","formatCurrency","validateFields","fundingSource","serializeErrors","transactionType","formatCurrencyToString","formatStringToCurrency","SingleInvestment","Component","state","amount","showAmountModal","showFundingSourceModal","showCardsModal","showAutomateModal","showTransactionModal","selectedMethod","selectedMethodError","errors","cardId","selectedTransaction","showPinModal","pinError","pin","handleChange","event","name","value","target","setState","isNaN","handlePin","handleSelectMethod","id","handleSelectAmount","toggleAmountModal","handleTopUp","required","Object","keys","length","toggleTransactionPinModal","handleSelectedFundingSource","toggleFundingModal","props","investment","autoCharge","autoChargeChannel","toggleAutomateModal","handlePay","toggleAllCardsModal","handleSelectCard","card","handleNewCardSelect","params","match","payment","method","reoccurring","payload","currency","investmentId","then","data","setTimeout","handleTransactionSelect","transaction","handleDisableAutocharge","handleTransactionVerification","e","preventDefault","initialPin","value1","value2","value3","value4","join","handleLiquidate","history","push","pathname","routeName","toggleModal","prevState","componentDidMount","Number","isInteger","parseInt","render","walletDetails","payLoading","cards","error","pinLoading","confirmPinError","errorObject","type","title","Date","paidAt","initializedAt","toDateString","fees","reference","wallet","NGN","map","imgUrl","imgBlue","Math","random","label","require","frequency","order_status","balance","accruedInterest","interestRate","includes","installment","nextPaymentDate","format","percentageCompletion","targetAmount","width","endDate","startDate","transactions","mapStateToProps","app","portfolio","security","loading","FETCH_SINGLE_INVESTMENT_REQUEST","TOP_UP_INVESTMENT_REQUEST","CONFIRM_PIN_REQUEST","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport moment from 'moment';\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport actionTypes from \"#/store/portfolio/actionTypes\";\nimport { fetchSingleInvestment, topUpInvestment } from '#/store/portfolio/actions';\nimport { disableAutocharge } from '#/store/investment/actions';\nimport { getCards } from '#/store/wallet/actions';\nimport { confirmPin } from '#/store/security/actions';\nimport securityActionTypes from '#/store/security/actionTypes';\nimport Card from '#/components/Card';\nimport PaymentMethod from '#/components/PaymentMethod';\nimport Modal from '#/components/Modal';\nimport DebitCard from '#/components/DebitCard';\nimport Textbox from '#/components/Textbox';\nimport Transaction from '#/components/Transaction';\nimport PinInput from '#/components/PinInput';\nimport { formatCurrency, validateFields, fundingSource, serializeErrors, transactionType, formatCurrencyToString,\n  formatStringToCurrency } from '#/utils';\nimport './style.scss';\n\nclass SingleInvestment extends React.Component {\n\n  state = {\n    amount: '',\n    showAmountModal: false,\n    showFundingSourceModal: false,\n    showCardsModal: false,\n    showAutomateModal: false,\n    showTransactionModal: false,\n    selectedMethod: '',\n    selectedMethodError: null,\n    errors: null,\n    cardId: null,\n    selectedTransaction: null,\n    showPinModal: false,\n    pinError: null,\n    pin: {},\n  }\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    if (!Number.isInteger(parseInt(params.investmentId, 10))) {\n      return this.props.history.push({\n        pathname: `/app/portfolio/`,\n        state: { routeName: 'Portfolio' },\n      })\n    }\n    this.props.getCards();\n    this.props.fetchSingleInvestment(params.investmentId);\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    if(name === 'amount') {\n      this.setState({ errors: null});\n        return this.setState({ [name]: formatCurrencyToString(value)}, ()=> {\n          if(isNaN(this.state[name])) {\n            return this.setState({ errors: { [name]: 'enter a valid number' } })\n          }\n        });\n      }\n    this.setState({ [name]: value });\n  }\n\n  handlePin = (pin) => {\n    this.setState({pin})\n  }\n\n  handleSelectMethod = (event) => {\n    this.setState({ selectedMethod: event.target.id });\n  }\n\n  handleSelectAmount = () => {\n    // this.toggleTransactionPinModal()\n    this.toggleAmountModal()\n  }\n\n  handleTopUp = () => {\n    const { amount } = this.state;\n\n    const required = ['amount'];\n    const errors = validateFields({ amount }, required)\n\n    if (Object.keys(errors).length > 0) {\n      return this.setState({ errors });\n    }\n    this.toggleAmountModal();\n    this.toggleTransactionPinModal()\n  }\n\n  // handles for when a funcding source is selected\n  handleSelectedFundingSource = () => {\n    const { selectedMethod } = this.state;\n\n    const required = ['selectedMethod'];\n    const errors = validateFields({ selectedMethod }, required);\n    if (Object.keys(errors).length > 0) {\n      return this.setState({ selectedMethodError: 'please select a method' });\n    }\n    if (selectedMethod === 'wallet') {\n      this.toggleFundingModal()\n      return this.props.investment?.autoCharge === 0 || this.props.investment?.autoChargeChannel !== selectedMethod ? this.toggleAutomateModal() : this.handlePay();\n    }\n    this.toggleFundingModal();\n    this.toggleAllCardsModal()\n  }\n\n  handleSelectCard = (card) => {\n    const { selectedMethod } = this.state\n\n    this.setState({ cardId: card.id }, () => {\n      this.toggleAllCardsModal()\n      return this.props.investment?.autoCharge === 0 || this.props.investment?.autoChargeChannel !== selectedMethod ? this.toggleAutomateModal() : this.handlePay();\n    })\n  }\n\n  handleNewCardSelect = () => {\n    this.toggleAllCardsModal()\n    return this.props.investment?.autoCharge === 0 ? this.toggleAutomateModal() : this.handlePay();\n  }\n\n  handlePay = (autoCharge) => {\n    const { amount, selectedMethod, cardId } = this.state;\n    const { params } = this.props.match;\n    const payment = { method: selectedMethod, reoccurring: cardId ? true : false, cardId: cardId && cardId };\n    const payload = { amount: formatCurrencyToString(amount), payment, currency: 'NGN', autoCharge: autoCharge && autoCharge }\n\n    this.props.topUpInvestment(payload, params.investmentId)\n      .then(data => {\n        this.state.showAutomateModal && this.toggleAutomateModal();\n        this.setState({ amount: '', selectedMethod: '', errors: null, cardId: null })\n        setTimeout(() => this.props.fetchSingleInvestment(params.investmentId) , 3000) \n      })\n  }\n\n  handleTransactionSelect = (transaction) => {\n    this.setState({ selectedTransaction: transaction },\n      () => this.setState({ showTransactionModal: true }))\n  }\n\n  handleDisableAutocharge = () => {\n    const { params } = this.props.match;\n    this.props.disableAutocharge(params.investmentId)\n      .then(data => {\n        this.props.fetchSingleInvestment(params.investmentId);\n      })\n  }\n\n  handleTransactionVerification = (e) => {\n    e.preventDefault()\n    const { pin } = this.state\n    const { confirmPin } = this.props\n    this.setState({ pinError: null })\n\n    const initialPin = [ pin.value1, pin.value2, pin.value3, pin.value4 ].join('');\n    if (initialPin.length < 4 ) {\n      return this.setState({ pinError: 'field is required'})\n    }\n    confirmPin({ pin: initialPin })\n      .then(data => {\n        this.toggleTransactionPinModal()\n        this.toggleFundingModal();\n    })\n  }\n\n  //liquidate your account\n  handleLiquidate = () => {\n    const { params } = this.props.match;\n    const { investment } = this.props;\n\n    return this.props.history.push({\n      pathname: `/app/portfolio/liquidate/${params.investmentId}`,\n      state: { investment: investment, routeName: 'Liquidate Investment' },\n    })\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({ showTransactionModal: !prevState.showTransactionModal }))\n  }\n\n  toggleTransactionPinModal = () => {\n    this.setState(prevState => ({ showPinModal: !prevState.showPinModal }))\n  }\n\n  toggleAmountModal = () => {\n    this.setState(prevState => ({ showAmountModal: !prevState.showAmountModal }));\n  }\n\n  toggleFundingModal = () => {\n    this.setState(prevState => ({ showFundingSourceModal: !prevState.showFundingSourceModal }))\n  }\n\n  toggleAllCardsModal = () => {\n    this.setState(prevState => ({ showCardsModal: !prevState.showCardsModal }))\n  }\n\n  toggleAutomateModal = () => {\n    this.setState(prevState => ({ showAutomateModal: !prevState.showAutomateModal }));\n  }\n\n  render() {\n    const { investment, walletDetails, payLoading, cards, error, pinLoading, confirmPinError } = this.props;\n    const { showAmountModal, showFundingSourceModal, showCardsModal, selectedMethod,\n      selectedMethodError, showAutomateModal, errors, amount,\n      showTransactionModal, selectedTransaction, showPinModal, pinError } = this.state;\n    const errorObject = serializeErrors(error);\n\n    return (\n      <div className=\"single-portfolio-page\">\n        {showPinModal &&\n          <Modal classes=\"transaction-modal\" onClose={this.toggleTransactionPinModal}>\n            <div className=\"text-center\">\n              <h3>Enter Transaction PIN</h3>\n              <div className=\"pin-section ml-auto mr-auto mt-3\">\n                <PinInput onChange={this.handlePin} error={pinError}/>\n              </div>\n              <button className=\"btn btn-sm btn-primary btn-block mt-5\" onClick={this.handleTransactionVerification} disabled={pinLoading}>\n                Continue\n                {pinLoading &&\n                  <div className=\"spinner-border spinner-border-white spinner-border-sm ml-2\"></div>\n                }\n              </button>\n              {pinError && <p className=\"text-error mt-2\">{pinError}</p>}\n              {confirmPinError && <p className=\"text-error mt-2\">{confirmPinError}</p>}\n              {error && typeof(error) === 'string' && <p className=\"text-error mt-2\">{error}</p>}\n            </div>\n          </Modal>\n        }\n        {\n          showTransactionModal &&\n          <Modal onClose={this.toggleModal}>\n            <div className=\"\">\n              <div className=\"d-flex border-bottom pb-1 align-items-start\">\n                <img src={transactionType(selectedTransaction.type)} className=\"img-fluid mr-3\" alt=\"transaction type\" />\n                <div>\n                  <h3 className=\"text-deep-blue text-medium\">Transaction Details</h3>\n                  <p className=\"tex-left text-small text-grey\">{selectedTransaction.title}</p>\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-between mt-2\">\n                <div className=\"text-left\">\n                  <p className=\"text-small mb-0\">Amount</p>\n                  <p className=\"text-deep-blue text-small\">&#x20A6;{selectedTransaction.amount}</p>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"text-small mb-0\">Date</p>\n                  <p className=\"text-deep-blue text-small\">\n                    {new Date(selectedTransaction.paidAt ? selectedTransaction.paidAt : selectedTransaction.initializedAt).toDateString()}\n                  </p>\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-between mt-2\">\n                <div className=\"text-left\">\n                  <p className=\"text-small mb-0\">Fee</p>\n                  <p className=\"text-deep-blue text-small\">&#x20A6;{selectedTransaction.fees ? selectedTransaction.fees : 0.00}</p>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"text-small mb-0\">Reference Number</p>\n                  <p className=\"text-deep-blue text-small\">{selectedTransaction.reference}</p>\n                </div>\n              </div>\n            </div>\n          </Modal>\n        }\n        {showAmountModal &&\n          <Modal onClose={this.toggleAmountModal}>\n            <h3 className=\"text-deep-blue\">How much do you want to add to this investment right now?</h3>\n              <Textbox\n                onChange={this.handleChange}\n                type=\"text\"\n                label=\"Amount\"\n                placeholder=\"Amount\"\n                name=\"amount\"\n                value={formatStringToCurrency(amount)}\n                error={errors ? errors.amount : (errorObject && errorObject['amount'])}\n              />\n              { walletDetails &&  \n              <p className=\"text-grey text-x-small mb-0\">Available balance <span className=\"text-deep-blue\">\n                &#x20A6; {walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : 0}\n                </span>\n              </p>\n            }\n              <div className=\"text-right mt-2\">\n              <button className=\"btn btn-sm btn-primary\" onClick={this.handleTopUp}>\n                Proceed\n              </button>\n            </div>\n          </Modal>\n        }\n\n        {showFundingSourceModal &&\n          <Modal onClose={this.toggleFundingModal}>\n            <div className=\"text-left\">\n              <h3>Choose a funding source</h3>\n              <div>\n                {fundingSource.map(method => (\n                  <PaymentMethod\n                    onSelect={this.handleSelectMethod}\n                    selected={selectedMethod === method.value ? true : false}\n                    imgUrl={method.imgUrl}\n                    imgBlue={method.imgBlue}\n                    key={Math.random() * 1000}\n                    value={method.value}\n                    label={method.label}\n                    balance={walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : 0}\n                  />\n                ))}\n                {selectedMethodError && <p className=\"text-error mt-2\">{selectedMethodError}</p>}\n              </div>\n              <div className=\"text-right\">\n                <button className=\"btn btn-sm btn-primary mt-3\" onClick={this.handleSelectedFundingSource} disabled={payLoading}>\n                  Proceed\n                </button>\n              </div>\n            </div>\n          </Modal>\n        }\n\n        {showCardsModal &&\n          <Modal onClose={this.toggleAllCardsModal}>\n            <div className=\"text-right pb-3\">\n              <img src={require('#/assets/icons/close.svg')} alt=\"close\" onClick={this.toggleAllCardsModal} className=\"cursor-pointer\" />\n            </div>\n            {\n              cards &&\n              cards.cards.length > 0 &&\n              cards.cards.map(card => (\n                <DebitCard card={card} handleSelect={this.handleSelectCard} key={card.id} />\n              ))\n            }\n            <div className=\"d-flex justify-content-between align-items-center cursor-pointer\" onClick={this.handleNewCardSelect}>\n              <div className=\"d-flex align-items-center\">\n                <img src={require('#/assets/icons/add-card.svg')} className=\"img-fluid mr-3\" alt=\"card\" />\n                <p className=\"text-deep-blue text-medium mb-0\">Add money from a new debit card</p>\n              </div>\n              <img src={require('#/assets/icons/right-arrow.svg')} className=\"img-fluid cursor-pointer\" alt=\"arrow\" />\n            </div>\n          </Modal>\n        }\n\n        {showAutomateModal &&\n          <Modal onClose={this.toggleAutomateModal}>\n            <div className=\"text-left\">\n              <h3>Automate funding for this investment</h3>\n              <p className=\"text-small text-black\">Let us help you reach your target easily by funding from your chosen source on a {investment && investment.frequency} basis.</p>\n            </div>\n            <div className=\"d-flex justify-content-end align-items-center\">\n              {payLoading &&\n                <div className=\"spinner-border spinner-border-primary text-primary spinner-border-sm mr-2\"></div>\n              }\n              <p className=\"mr-3 text-deep-blue mb-0 cursor-pointer\" onClick={() => this.handlePay(false)}>No, I’ll add money myself</p>\n              <button className=\"btn btn-sm btn-primary\" onClick={() => this.handlePay(true)}>\n                Yes\n              </button>\n            </div>\n            {error && typeof error === 'string' && <p className=\"text-error mt-2\">{error}</p>}\n          </Modal>\n        }\n\n        <div className=\"d-flex justify-content-between\">\n          <div onClick={()=> this.props.history.push('/app/portfolio')} className=\"cursor-pointer\">\n            <img\n              src={require(\"#/assets/icons/back-arrow.svg\")}\n              alt=\"transfer logo\"\n              className=\"mr-2\"\n            />\n            Back\n          </div>\n          <p className={`pl-3 pr-3 text-small text-capitalize single-portfolio-page--${investment?.order_status}`}>{investment?.order_status}</p>\n        </div>\n        <div className=\"row mt-2\">\n          <div className=\"col-md-4 mt-2\">\n            <Card classes=\"text-center p-4 border-blue\">\n              <p className=\"text-small text-grey\">Amount Invested</p>\n              <h3 className=\"text-blue\">&#x20A6; {investment ? formatCurrency(investment.balance) : 0}</h3>\n            </Card>\n          </div>\n          <div className=\"col-md-4 mt-2\">\n            <Card classes=\"text-center p-4 border-blue\">\n              <p className=\"text-small text-grey\">Interest</p>\n              <h3 className=\"text-blue\">&#x20A6; {investment ? formatCurrency(investment.accruedInterest) : 0}</h3>\n            </Card>\n          </div>\n          <div className=\"col-md-4 mt-2\">\n            <Card classes=\"text-center p-4 bg-default\">\n              <p className=\"text-small text-white\">Interest Rate P.A.</p>\n              <h3 className=\"text-white\">{investment ? investment.interestRate : 0}%</h3>\n            </Card>\n          </div>\n        </div>\n        <Card classes=\"mt-4 card\">\n          <div className=\"row\">\n            <div className=\"col-md-4 text-center mt-2\">\n              <img src={require('#/assets/icons/top-up.svg')}\n                alt=\"plus\"\n                className={`img-fluid ${['active', 'booked'].includes(investment?.order_status) ? 'cursor-pointer' : 'cursor-block disabled'}`}\n                onClick={['active', 'booked'].includes(investment?.order_status) ? this.handleSelectAmount : null}\n              />\n              <p\n              className={`text-blue mb-0 text-small ${['active', 'booked'].includes(investment?.order_status) ? 'cursor-pointer' : 'cursor-block disabled'}`}\n              onClick={['active', 'booked'].includes(investment?.order_status) ? this.handleSelectAmount : null}>\n                Top up\n              </p>\n            </div>\n            <div className=\"col-md-4 text-center mt-2\">\n              {investment?.autoChargeChannel && investment?.autoChargeChannel !== '' &&\n              <>\n              <img src={investment?.autoCharge === 0 ? require('#/assets/icons/toggle-off.svg') : require('#/assets/icons/toggle-on.svg')}\n                alt=\"plus\"\n                className={`img-fluid ${['active', 'booked'].includes(investment?.order_status) ? 'cursor-pointer' : 'cursor-block disabled'}`}\n                onClick={['active', 'booked'].includes(investment?.order_status) ? this.handleDisableAutocharge : null}\n              />\n              <p\n              className={`text-blue mb-0 text-small ${['active', 'booked'].includes(investment?.order_status) ? 'cursor-pointer' : 'cursor-block disabled'}`}\n              onClick={['active', 'booked'].includes(investment?.order_status) ? this.handleDisableAutocharge : null}>\n                Automated Pay\n              </p>\n              </>\n               }\n            </div>\n            <div className=\"col-md-4 text-center mt-2\">\n              <img\n              src={require('#/assets/icons/liquidate.svg')}\n              alt=\"plus\"\n              className={`img-fluid ${['active', 'booked'].includes(investment?.order_status) ? 'cursor-pointer' : 'cursor-block disabled'}`}\n              onClick={['active', 'booked'].includes(investment?.order_status) ? this.handleLiquidate : null} />\n              <p\n              className={`text-blue mb-0 text-small ${['active', 'booked'].includes(investment?.order_status) ? 'cursor-pointer' : 'cursor-block disabled'}`}\n              onClick={['active', 'booked'].includes(investment?.order_status) ? this.handleLiquidate : null}>\n                Liquidate\n              </p>\n            </div>\n          </div>\n        </Card>\n\n        <div className=\"row mt-3\">\n          <div className=\"col-md-4 mt-2\">\n            <div className=\"card p-3 min-height-small\">\n              <p className=\"border-bottom text-deep-blue text-small\">Payment Amount</p>\n              <h3>&#x20A6;{investment ? formatCurrency(investment.installment) : 0} <span className=\"text-blue text-small\">/{investment && investment.frequency}</span></h3>\n              <p className=\"font-light\">Next Deposit Date - <b>{investment && investment.nextPaymentDate ? moment(investment.nextPaymentDate).format('MMM D, YYYY') : 'Not Available'}</b></p>\n            </div>\n          </div>\n          <div className=\"col-md-4 mt-2\">\n            <div className=\"card p-3 min-height-small\">\n              <p className=\"border-bottom text-deep-blue text-small\">Investment Progress</p>\n              <div className=\"d-flex justify-content-between align-items-end flex-wrap\">\n                <h3>{investment ? investment.percentageCompletion : 0}%</h3>\n                <div>\n                  <p className=\"right-side-text text-grey text-small mb-0\">Target</p>\n                  <h3>&#x20A6;{investment ? formatCurrency(investment.targetAmount) : 0}</h3>\n                </div>\n              </div>\n              <div className=\"progress\">\n                <div\n                  className=\"progress-bar bg-success\"\n                  style={{ width: `${investment ? investment.percentageCompletion : 0}%` }}\n                  role=\"progressbar\"\n                  aria-valuenow={investment ? investment.percentageCompletion : 0}\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\">\n                </div>\n              </div>\n              <p className=\"text-grey text-small mt-2 mb-0\">Your saving determine your plan progress</p>\n            </div>\n          </div>\n          <div className=\"col-md-4 mt-2\">\n            <div className=\"card p-3 min-height-small\">\n              <p className=\"border-bottom text-deep-blue text-small\">Investment Info</p>\n              <div className=\"d-flex justify-content-between flex-wrap\">\n                <div>\n                  <p className=\"font-light text-small mb-0\">Investment Name</p>\n                  <h5 className=\"font-normal\">{investment ? investment.title : ''}</h5>\n                </div>\n                <div className=\"right-side-text\">\n                  <p className=\"font-light text-small mb-0\">Target Amount</p>\n                  <h5 className=\"font-normal\">&#x20A6;{investment ? formatCurrency(investment.targetAmount) : 0}</h5>\n                </div>\n              </div>\n              <div className=\"d-flex justify-content-between\">\n                <div>\n                  <p className=\"font-light text-small mb-0\">Target Date</p>\n                  <h5 className=\"font-normal\">{investment && investment.endDate ? moment(investment.endDate).format('MMM D, YYYY') : 'No end date'}</h5>\n                </div>\n                <div className=\"right-side-text\">\n                  <p className=\"font-light text-small mb-0\">Start Date</p>\n                  <h5 className=\"font-normal\">{investment && investment.startDate ? moment(investment.startDate).format('MMM D, YYYY') : 'N/A'}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-4 card p-3\">\n          <p className=\"border-bottom text-deep-blue text-small\">Transactions</p>\n          {investment && investment.transactions?.length > 0 ?\n            investment.transactions?.map(transaction => (\n              <Transaction\n                transaction={transaction}\n                key={transaction.reference}\n                handleSelect={this.handleTransactionSelect}\n              />\n            ))\n          :\n          <div className=\"text-center mt-4\">\n            <img src={require('#/assets/icons/receipt.svg')} alt=\"plus\" className=\"img-fluid\" />\n            <p className=\"font-light text-grey\"> No Transactions</p>\n          </div>\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { app: {\n    portfolio: { investment, error },\n    wallet: { cards, walletDetails },\n    security: { error: confirmPinError }, \n  } } = state;\n\n  return {\n    loading: getActionLoadingState(state, actionTypes.FETCH_SINGLE_INVESTMENT_REQUEST),\n    payLoading: getActionLoadingState(state, actionTypes.TOP_UP_INVESTMENT_REQUEST),\n    pinLoading: getActionLoadingState(state, securityActionTypes.CONFIRM_PIN_REQUEST),\n    investment,\n    walletDetails,\n    confirmPinError,\n    cards,\n    error\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchSingleInvestment: (id) => dispatch(fetchSingleInvestment(id)),\n    getCards: () => dispatch(getCards()),\n    topUpInvestment: (payload, id) => dispatch(topUpInvestment(payload, id)),\n    disableAutocharge: (id) => dispatch(disableAutocharge(id)),\n    confirmPin: (payload) => dispatch(confirmPin(payload)),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SingleInvestment));"]},"metadata":{},"sourceType":"module"}