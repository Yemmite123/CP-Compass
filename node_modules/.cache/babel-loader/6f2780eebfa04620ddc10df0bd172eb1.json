{"ast":null,"code":"var _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Portfolio/LiquidateInvestment/index.js\";\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport moment from 'moment';\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport { liquidateInvestment, getLiquidationDetails } from '#/store/investment/actions';\nimport { fetchSingleInvestment } from '#/store/portfolio/actions';\nimport actionTypes from '#/store/investment/actionTypes';\nimport { confirmPin } from '#/store/security/actions';\nimport securityActionTypes from '#/store/security/actionTypes';\nimport Back from '#/components/Back';\nimport Card from '#/components/Card';\nimport Textbox from '#/components/Textbox';\nimport Modal from '#/components/Modal';\nimport PinInput from '#/components/PinInput';\nimport { formatCurrency, serializeErrors, validateFields, formatStringToCurrency, formatCurrencyToString } from '#/utils';\nimport './style.scss';\n\nclass LiquidateInvestment extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      reason: '',\n      amount: '',\n      errors: null,\n      showPinModal: false,\n      confirmationModal: false,\n      pinError: null,\n      pin: {},\n      amountToGet: '',\n      interestToGet: '',\n      investmentBalance: '',\n      liquidationAmount: '',\n      penalty: ''\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n\n      if (name === 'amount') {\n        this.setState({\n          errors: null\n        });\n        return this.setState({\n          [name]: formatCurrencyToString(value)\n        }, () => {\n          if (isNaN(this.state[name])) {\n            return this.setState({\n              errors: {\n                [name]: 'enter a valid number'\n              }\n            });\n          }\n        });\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handlePin = pin => {\n      this.setState({\n        pin\n      });\n    };\n\n    this.handleLiquidate = e => {\n      var _this$props$investmen;\n\n      e.preventDefault();\n      const {\n        amount\n      } = this.state;\n      const {\n        investment\n      } = this.props;\n      this.setState({\n        errors: null\n      });\n      const required = (investment === null || investment === void 0 ? void 0 : investment.order_status) === 'booked' ? [] : ['amount'];\n      const errors = validateFields({\n        amount\n      }, required);\n\n      if (Object.keys(errors).length > 0) {\n        return this.setState({\n          errors\n        });\n      }\n\n      if (amount > ((_this$props$investmen = this.props.investment) === null || _this$props$investmen === void 0 ? void 0 : _this$props$investmen.balance)) {\n        return this.setState({\n          errors: {\n            amount: 'Amount greater than investment balance'\n          }\n        });\n      }\n\n      if ((investment === null || investment === void 0 ? void 0 : investment.order_status) === 'booked') {\n        return this.setState({\n          amount: '0'\n        }, () => this.handleLiquidationDetails());\n      }\n\n      return this.handleLiquidationDetails();\n    };\n\n    this.handleLiquidationDetails = () => {\n      var _this$props$investmen2, _this$props$investmen3, _this$props$investmen4, _this$props$investmen5, _this$props$predefine, _this$props$investmen6, _this$props$investmen7, _this$props$investmen8;\n\n      const {\n        amount\n      } = this.state;\n      this.props.getLiquidationDetails({\n        amount,\n        balance: (_this$props$investmen2 = this.props.investment) === null || _this$props$investmen2 === void 0 ? void 0 : _this$props$investmen2.balance,\n        targetAmount: (_this$props$investmen3 = this.props.investment) === null || _this$props$investmen3 === void 0 ? void 0 : _this$props$investmen3.targetAmount,\n        accruedInterest: (_this$props$investmen4 = this.props.investment) === null || _this$props$investmen4 === void 0 ? void 0 : _this$props$investmen4.accruedInterest,\n        interestRate: ((_this$props$investmen5 = this.props.investment) === null || _this$props$investmen5 === void 0 ? void 0 : _this$props$investmen5.endDate) ? (_this$props$predefine = this.props.predefinedLiquidationPenalty) === null || _this$props$predefine === void 0 ? void 0 : _this$props$predefine.current : 0,\n        type: ((_this$props$investmen6 = this.props.investment) === null || _this$props$investmen6 === void 0 ? void 0 : _this$props$investmen6.endDate) ? 'predefined' : 'collection',\n        endDate: ((_this$props$investmen7 = this.props.investment) === null || _this$props$investmen7 === void 0 ? void 0 : _this$props$investmen7.endDate) && moment((_this$props$investmen8 = this.props.investment) === null || _this$props$investmen8 === void 0 ? void 0 : _this$props$investmen8.endDate).format('YYYY-MM-DD')\n      }).then(data => {\n        this.setState({\n          amountToGet: data.amountToGet,\n          interestToGet: data.interestToGet,\n          investmentBalance: data.investmentBalance,\n          liquidationAmount: data.liquidationAmount,\n          penalty: data.penalty\n        });\n        return this.toggleConfirmationModal();\n      });\n    };\n\n    this.handleEnterPin = () => {\n      this.toggleConfirmationModal();\n      this.toggleTransactionPinModal();\n    };\n\n    this.handleTransactionVerification = e => {\n      e.preventDefault();\n      const {\n        pin,\n        reason,\n        amount\n      } = this.state;\n      const {\n        params\n      } = this.props.match;\n      const {\n        confirmPin,\n        liquidateInvestment\n      } = this.props;\n      this.setState({\n        pinError: null\n      });\n      const initialPin = [pin.value1, pin.value2, pin.value3, pin.value4].join('');\n\n      if (initialPin.length < 4) {\n        return this.setState({\n          pinError: 'field is required'\n        });\n      }\n\n      confirmPin({\n        pin: initialPin\n      }).then(data => {\n        liquidateInvestment(params.investmentId, {\n          message: reason,\n          amount: formatCurrencyToString(amount)\n        }).then(response => {\n          this.toggleTransactionPinModal();\n          this.setState({\n            amount: '',\n            reason: ''\n          });\n          this.props.history.goBack();\n        });\n      });\n    };\n\n    this.toggleConfirmationModal = () => {\n      this.setState(prevState => ({\n        confirmationModal: !prevState.confirmationModal\n      }));\n    };\n\n    this.toggleTransactionPinModal = () => {\n      this.setState(prevState => ({\n        showPinModal: !prevState.showPinModal\n      }));\n    };\n  }\n\n  componentDidMount() {\n    const {\n      params\n    } = this.props.match;\n\n    if (!Number.isInteger(parseInt(params.investmentId, 10))) {\n      return this.props.history.push({\n        pathname: `/app/portfolio/`,\n        state: {\n          routeName: 'Portfolio'\n        }\n      });\n    }\n\n    this.props.fetchSingleInvestment(params.investmentId);\n  }\n\n  render() {\n    const {\n      reason,\n      errors,\n      amount,\n      showPinModal,\n      pinError,\n      confirmationModal\n    } = this.state;\n    const {\n      error,\n      pinLoading,\n      confirmPinError,\n      loading,\n      predefinedLiquidationPenalty,\n      investment,\n      detailsLoading\n    } = this.props;\n    const errorObject = serializeErrors(error);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"liquidate-investment-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, confirmationModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleConfirmationModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-deep-blue text-medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, \"Terms and Conditions\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, \"By liquidating your investment, you confirm to the following terms: You would bear \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 30\n      }\n    }, \" a penalty of \", investment.endDate ? predefinedLiquidationPenalty === null || predefinedLiquidationPenalty === void 0 ? void 0 : predefinedLiquidationPenalty.current : 0, \"% on your interest earned \"), \"on the investment. Interest accruing on the portion of the investment you are liquidating would stop.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"liquidation-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"liquidation-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-white text-medium mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, \"Liquidation Details\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"liquidation-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0 text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, \"Liquidation Amount\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0 text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, \"\\u20A6\", formatCurrency(amount)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0 text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, \"Penalty\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0 text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }\n    }, \"\\u20A6\", investment.endDate ? this.state.penalty : '0.00'))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0 text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, \"Interest to get\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0 text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }, \"\\u20A6\", formatCurrency(this.state.interestToGet)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0 text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, \"Investment Balance\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0 text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }, \"\\u20A6\", formatCurrency(this.state.investmentBalance)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0 text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }, \"Amount you will get\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0 text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 19\n      }\n    }, \"\\u20A6\", formatCurrency(this.state.amountToGet)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-100 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-3 text-small font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    }, \"Are you sure you want to liquidate\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: this.handleEnterPin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-blue mt-3 cursor-pointer\",\n      onClick: this.toggleConfirmationModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }\n    }, \"No, go back\")))), showPinModal && /*#__PURE__*/React.createElement(Modal, {\n      classes: \"transaction-modal\",\n      onClose: this.toggleTransactionPinModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }, \"Enter Transaction PIN\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pin-section ml-auto mr-auto mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PinInput, {\n      onChange: this.handlePin,\n      error: pinError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary btn-block mt-5\",\n      onClick: this.handleTransactionVerification,\n      disabled: pinLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }, \"Confirm Liquidation\", pinLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 19\n      }\n    }), loading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 19\n      }\n    })), pinError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 28\n      }\n    }, pinError), confirmPinError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 35\n      }\n    }, confirmPinError), error && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }, error))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Back, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-medium text-deep-blue \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }, \"Liquidate Investment\"))), /*#__PURE__*/React.createElement(Card, {\n      classes: \"card mt-3 col-md-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, \"How much do you want to liquidate into your wallet?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Textbox, {\n      onChange: this.handleChange,\n      type: \"text\",\n      label: \"Amount\",\n      placeholder: \"Amount\",\n      name: \"amount\",\n      value: formatStringToCurrency(amount),\n      error: errors ? errors.amount : errorObject && errorObject['amount'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-grey text-x-small mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, \"Investment balance \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 79\n      }\n    }, \"\\u20A6 \", investment && formatCurrency(investment === null || investment === void 0 ? void 0 : investment.balance))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    }, \"State reason for liquidation\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      onChange: this.handleChange,\n      rows: 5,\n      name: \"reason\",\n      value: reason,\n      className: \"w-100 border-faint border-radius-default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right mt-3 d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary btn-md-block\",\n      onClick: this.handleLiquidate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 15\n      }\n    }, \"Proceed\", detailsLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    app: {\n      security: {\n        error: confirmPinError\n      },\n      portfolio: {\n        investment\n      },\n      investment: {\n        error\n      },\n      config: {\n        data\n      }\n    }\n  } = state;\n  return {\n    loading: getActionLoadingState(state, actionTypes.LIQUIDATE_INVESTMENT_REQUEST),\n    detailsLoading: getActionLoadingState(state, actionTypes.GET_LIQUIDATION_DETAILS_REQUEST),\n    pinLoading: getActionLoadingState(state, securityActionTypes.CONFIRM_PIN_REQUEST),\n    confirmPinError,\n    error,\n    investmentConfig: data === null || data === void 0 ? void 0 : data.investmentConfig,\n    predefinedLiquidationPenalty: data === null || data === void 0 ? void 0 : data.investmentConfig[2],\n    investment\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchSingleInvestment: id => dispatch(fetchSingleInvestment(id)),\n    liquidateInvestment: (id, payload) => dispatch(liquidateInvestment(id, payload)),\n    confirmPin: payload => dispatch(confirmPin(payload)),\n    getLiquidationDetails: payload => dispatch(getLiquidationDetails(payload))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LiquidateInvestment));","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Portfolio/LiquidateInvestment/index.js"],"names":["React","withRouter","connect","moment","getActionLoadingState","liquidateInvestment","getLiquidationDetails","fetchSingleInvestment","actionTypes","confirmPin","securityActionTypes","Back","Card","Textbox","Modal","PinInput","formatCurrency","serializeErrors","validateFields","formatStringToCurrency","formatCurrencyToString","LiquidateInvestment","Component","state","title","reason","amount","errors","showPinModal","confirmationModal","pinError","pin","amountToGet","interestToGet","investmentBalance","liquidationAmount","penalty","handleChange","event","name","value","target","setState","isNaN","handlePin","handleLiquidate","e","preventDefault","investment","props","required","order_status","Object","keys","length","balance","handleLiquidationDetails","targetAmount","accruedInterest","interestRate","endDate","predefinedLiquidationPenalty","current","type","format","then","data","toggleConfirmationModal","handleEnterPin","toggleTransactionPinModal","handleTransactionVerification","params","match","initialPin","value1","value2","value3","value4","join","investmentId","message","response","history","goBack","prevState","componentDidMount","Number","isInteger","parseInt","push","pathname","routeName","render","error","pinLoading","confirmPinError","loading","detailsLoading","errorObject","mapStateToProps","app","security","portfolio","config","LIQUIDATE_INVESTMENT_REQUEST","GET_LIQUIDATION_DETAILS_REQUEST","CONFIRM_PIN_REQUEST","investmentConfig","mapDispatchToProps","dispatch","id","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport moment from 'moment';\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport { liquidateInvestment, getLiquidationDetails } from '#/store/investment/actions';\nimport { fetchSingleInvestment } from '#/store/portfolio/actions';\nimport actionTypes from '#/store/investment/actionTypes';\nimport { confirmPin } from '#/store/security/actions'\nimport securityActionTypes from '#/store/security/actionTypes';\nimport Back from '#/components/Back';\nimport Card from '#/components/Card';\nimport Textbox from '#/components/Textbox';\nimport Modal from '#/components/Modal';\nimport PinInput from '#/components/PinInput';\nimport { formatCurrency, serializeErrors, validateFields,\n  formatStringToCurrency, formatCurrencyToString } from '#/utils'\nimport './style.scss';\n\nclass LiquidateInvestment extends React.Component {\n\n  state = {\n    title: '',\n    reason: '',\n    amount: '',\n    errors: null,\n    showPinModal: false,\n    confirmationModal: false,\n    pinError: null,\n    pin: {},\n    amountToGet: '',\n    interestToGet: '',\n    investmentBalance: '',\n    liquidationAmount: '',\n    penalty: '',\n  }\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    if (!Number.isInteger(parseInt(params.investmentId, 10))) {\n      return this.props.history.push({\n        pathname: `/app/portfolio/`,\n        state: { routeName: 'Portfolio' },\n      })\n    }\n    this.props.fetchSingleInvestment(params.investmentId);\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    if(name === 'amount') {\n      this.setState({ errors: null});\n        return this.setState({ [name]: formatCurrencyToString(value)}, ()=> {\n          if(isNaN(this.state[name])) {\n            return this.setState({ errors: { [name]: 'enter a valid number' } })\n          }\n        });\n      }\n    this.setState({ [name]: value });\n  }\n\n  handlePin = (pin) => {\n    this.setState({pin})\n  }\n\n  //liquidate confirmation \n  handleLiquidate = (e) => {\n    e.preventDefault();\n    const { amount } = this.state\n    const { investment } = this.props;\n    this.setState({ errors: null })\n    \n    const required = investment?.order_status === 'booked' ? [] : [ 'amount'];\n    const errors = validateFields({  amount }, required)\n    if (Object.keys(errors).length > 0) {\n      return this.setState({ errors });\n    }\n\n    if(amount > this.props.investment?.balance) {\n      return this.setState({ errors: { amount: 'Amount greater than investment balance' } });\n    }\n    if(investment?.order_status === 'booked') {\n      return this.setState({  amount: '0' }, () => this.handleLiquidationDetails());\n    }\n    return this.handleLiquidationDetails();\n  }\n\n  handleLiquidationDetails = () => {\n    const { amount } = this.state\n\n    this.props.getLiquidationDetails({\n      amount,\n      balance: this.props.investment?.balance,\n      targetAmount: this.props.investment?.targetAmount,\n      accruedInterest: this.props.investment?.accruedInterest,\n      interestRate: this.props.investment?.endDate ? this.props.predefinedLiquidationPenalty?.current : 0 ,\n      type: this.props.investment?.endDate ? 'predefined' : 'collection',\n      endDate: this.props.investment?.endDate && moment(this.props.investment?.endDate).format('YYYY-MM-DD')\n    }).then(data => {\n      this.setState({\n        amountToGet: data.amountToGet,\n        interestToGet: data.interestToGet,\n        investmentBalance: data.investmentBalance,\n        liquidationAmount: data.liquidationAmount,\n        penalty: data.penalty,\n      })\n      return this.toggleConfirmationModal()\n    })\n  }\n\n  handleEnterPin = () => {\n    this.toggleConfirmationModal()\n    this.toggleTransactionPinModal();\n  }\n\n  //submit transaction pin for verification\n  handleTransactionVerification = (e) => {\n    e.preventDefault()\n    const { pin, reason, amount } = this.state\n    const { params } = this.props.match;\n    const { confirmPin, liquidateInvestment } = this.props\n    this.setState({ pinError: null })\n\n    const initialPin = [ pin.value1, pin.value2, pin.value3, pin.value4 ].join('');\n    if (initialPin.length < 4 ) {\n      return this.setState({ pinError: 'field is required'})\n    }\n    confirmPin({ pin: initialPin })\n      .then(data => {\n        liquidateInvestment(params.investmentId, { message: reason, amount: formatCurrencyToString(amount) })\n          .then(response => {\n            this.toggleTransactionPinModal()\n            this.setState({ amount: '', reason: '' })\n            this.props.history.goBack()\n          })\n    })\n  }\n\n  toggleConfirmationModal = () => {\n    this.setState(prevState => ({ confirmationModal: !prevState.confirmationModal }))\n  }\n\n  toggleTransactionPinModal = () => {\n    this.setState(prevState => ({ showPinModal: !prevState.showPinModal }))\n  }\n  \n  render() {\n    const { reason, errors, amount, showPinModal, pinError, confirmationModal } = this.state;\n    const { error, pinLoading, confirmPinError, loading, predefinedLiquidationPenalty, investment, detailsLoading } = this.props;\n    const errorObject = serializeErrors(error);\n    return (\n      <div className=\"liquidate-investment-page\">\n        {confirmationModal &&\n          <Modal onClose={this.toggleConfirmationModal}>\n          <div className=\"text-center\">\n            <h3 className=\"text-deep-blue text-medium\">Terms and Conditions</h3>\n            <p className=\"text-small\">By liquidating your investment, you confirm to the following terms:\n              You would bear <b> a penalty of {investment.endDate ? predefinedLiquidationPenalty?.current : 0}% on your interest earned </b>on the investment.\n              Interest accruing on the portion of the investment you are liquidating would stop.\n            </p>\n            <div className=\"liquidation-table\">\n              <div className=\"liquidation-header\">\n                <h3 className=\"text-white text-medium mb-0\">Liquidation Details</h3>\n              </div>\n              <div className=\"liquidation-body\">\n                <div className=\"row\">\n                  <div className=\"col-md-6 text-left\">\n                    <p className=\"mb-0 text-small\">Liquidation Amount</p>\n                  </div>\n                  <div className=\"col-md-6 text-right\">\n                    <p className=\"mb-0 text-small\">&#x20A6;{formatCurrency(amount)}</p>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-6 text-left\">\n                    <p className=\"mb-0 text-small\">Penalty</p>\n                  </div>\n                  <div className=\"col-md-6 text-right\">\n                  <p className=\"mb-0 text-small\">\n                    &#x20A6;{investment.endDate ? this.state.penalty : '0.00'}\n                  </p>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-6 text-left\">\n                    <p className=\"mb-0 text-small\">Interest to get</p>\n                  </div>\n                  <div className=\"col-md-6 text-right\">\n                  <p className=\"mb-0 text-small\">\n                  &#x20A6;{formatCurrency(this.state.interestToGet )}\n                  </p>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-6 text-left\">\n                    <p className=\"mb-0 text-small\">Investment Balance</p>\n                  </div>\n                  <div className=\"col-md-6 text-right\">\n                  <p className=\"mb-0 text-small\">\n                    &#x20A6;{formatCurrency(this.state.investmentBalance)}\n                  </p>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-md-6 text-left\">\n                    <p className=\"mb-0 text-small\">Amount you will get</p>\n                  </div>\n                  <div className=\"col-md-6 text-right\">\n                  <p className=\"mb-0 text-small\">\n                    &#x20A6;{formatCurrency(this.state.amountToGet)}\n                  </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"w-100 text-center\">\n              <p className=\"mt-3 text-small font-weight-bold\">Are you sure you want to liquidate</p>\n              <button className=\"btn btn-sm btn-primary\" onClick={this.handleEnterPin}>\n                Yes\n              </button>\n              <p className=\"text-blue mt-3 cursor-pointer\" onClick={this.toggleConfirmationModal}>No, go back</p>\n            </div>\n          </div>\n        </Modal>\n        }\n        {showPinModal &&\n          <Modal classes=\"transaction-modal\" onClose={this.toggleTransactionPinModal}>\n            <div className=\"text-center\">\n              <h3>Enter Transaction PIN</h3>\n              <div className=\"pin-section ml-auto mr-auto mt-3\">\n                <PinInput onChange={this.handlePin} error={pinError}/>\n              </div>\n              <button className=\"btn btn-sm btn-primary btn-block mt-5\" onClick={this.handleTransactionVerification} disabled={pinLoading}>\n                Confirm Liquidation\n                {pinLoading &&\n                  <div className=\"spinner-border spinner-border-white spinner-border-sm ml-2\"></div>\n                }\n                {loading &&\n                  <div className=\"spinner-border spinner-border-white spinner-border-sm ml-2\"></div>\n                }\n              </button>\n              {pinError && <p className=\"text-error mt-2\">{pinError}</p>}\n              {confirmPinError && <p className=\"text-error mt-2\">{confirmPinError}</p>}\n              {error && <p className=\"text-error mt-2\">{error}</p>}\n            </div>\n          </Modal>\n        }\n        <div className=\"row\">\n          <div className=\"col-md-2\">\n            <Back />\n          </div>\n          <div className=\"col-md-5 text-center\">\n            <h3 className=\"text-medium text-deep-blue \">Liquidate Investment</h3>\n          </div>\n        </div>\n        <Card classes=\"card mt-3 col-md-10\">\n          <form>\n            <div className=\"row align-items-center\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium\">How much do you want to liquidate into your wallet?</p>\n              </div>\n              <div className=\"col-md-6\">\n                <Textbox\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  label=\"Amount\"\n                  placeholder=\"Amount\"\n                  name=\"amount\"\n                  value={formatStringToCurrency(amount)}\n                  error={errors ? errors.amount : (errorObject && errorObject['amount'])}\n                />\n                <p className=\"text-grey text-x-small mb-0\">Investment balance <span className=\"text-deep-blue\">\n                  &#x20A6; {investment && formatCurrency(investment?.balance)}\n                </span>\n              </p>\n              </div>\n            </div>\n\n            <div className=\"row mt-4\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium\">State reason for liquidation</p>\n              </div>\n              <div className=\"col-md-6\">\n                <textarea\n                  onChange={this.handleChange}\n                  rows={5}\n                  name=\"reason\"\n                  value={reason}\n                  className=\"w-100 border-faint border-radius-default\"\n                />\n              </div>\n            </div>\n\n            <div className=\"text-right mt-3 d-flex justify-content-end\">\n              <button className=\"btn btn-sm btn-primary btn-md-block\" onClick={this.handleLiquidate}>\n                Proceed\n                {detailsLoading &&\n                  <div className=\"spinner-border spinner-border-white spinner-border-sm ml-2\"></div>\n                }\n              </button>\n            </div>\n          </form>\n        </Card>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { \n    app: {\n      security: { error: confirmPinError }, \n        portfolio: { investment },\n      investment: { error },\n      config: { data }\n    }\n  } = state;\n\n  return {\n    loading: getActionLoadingState(state, actionTypes.LIQUIDATE_INVESTMENT_REQUEST),\n    detailsLoading: getActionLoadingState(state, actionTypes.GET_LIQUIDATION_DETAILS_REQUEST),\n    pinLoading: getActionLoadingState(state, securityActionTypes.CONFIRM_PIN_REQUEST),\n    confirmPinError,\n    error,\n    investmentConfig: data?.investmentConfig,\n    predefinedLiquidationPenalty: data?.investmentConfig[2],\n    investment,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchSingleInvestment: (id) => dispatch(fetchSingleInvestment(id)),\n    liquidateInvestment: (id, payload) => dispatch(liquidateInvestment(id, payload)),\n    confirmPin: (payload) => dispatch(confirmPin(payload)),\n    getLiquidationDetails: (payload) => dispatch(getLiquidationDetails(payload)),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LiquidateInvestment));\n"]},"metadata":{},"sourceType":"module"}