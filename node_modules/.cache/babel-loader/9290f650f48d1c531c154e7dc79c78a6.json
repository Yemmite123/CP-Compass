{"ast":null,"code":"import * as actions from \"./actionTypes\";\nconst employmentDefaultState = {\n  data: null,\n  error: false,\n  loading: false\n};\n\nconst employment = (state = employmentDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_ERROR:\n      return { ...state,\n        error: false\n      };\n\n    case actions.CLEAR_DATA:\n      return { ...state,\n        data: false\n      };\n\n    case actions.ADD_EMPLOYMENT_REQUEST:\n      return { ...state,\n        loading: true,\n        error: false\n      };\n\n    case actions.ADD_EMPLOYMENT_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        data: action.data\n      };\n\n    case actions.ADD_EMPLOYMENT_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst kinDefaultState = {\n  data: null,\n  error: false,\n  loading: false\n};\n\nconst nextOfKin = (state = kinDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_ERROR:\n      return { ...state,\n        error: false\n      };\n\n    case actions.CLEAR_DATA:\n      return { ...state,\n        data: false\n      };\n\n    case actions.ADD_NEXT_OF_KIN_REQUEST:\n      return { ...state,\n        loading: true,\n        error: false\n      };\n\n    case actions.ADD_NEXT_OF_KIN_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        data: action.data\n      };\n\n    case actions.ADD_NEXT_OF_KIN_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst politicsDefaultState = {\n  data: null,\n  error: false,\n  loading: false\n};\n\nconst politics = (state = politicsDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_ERROR:\n      return { ...state,\n        error: false\n      };\n\n    case actions.CLEAR_DATA:\n      return { ...state,\n        data: false\n      };\n\n    case actions.ADD_POLITICAL_STATUS_REQUEST:\n      return { ...state,\n        loading: true,\n        error: false\n      };\n\n    case actions.ADD_POLITICAL_STATUS_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        data: action.data\n      };\n\n    case actions.ADD_POLITICAL_STATUS_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst userProfileDefaultState = {\n  data: null,\n  error: false,\n  loading: false\n};\n\nconst userProfile = (state = userProfileDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_ERROR:\n      return { ...state,\n        data: false\n      };\n\n    case actions.GET_USER_PROFILE_REQUEST:\n      return { ...state,\n        loading: true,\n        error: false\n      };\n\n    case actions.GET_USER_PROFILE_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        data: action.data\n      };\n\n    case actions.GET_USER_PROFILE_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst biodataDefaultState = {\n  data: null,\n  error: false,\n  loading: false,\n  photo: null\n};\n\nconst bioData = (state = biodataDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_ERROR:\n      return { ...state,\n        error: false\n      };\n\n    case actions.CLEAR_DATA:\n      return { ...state,\n        data: false\n      };\n\n    case actions.ADD_BIODATA_REQUEST:\n      return { ...state,\n        loading: true,\n        error: false\n      };\n\n    case actions.ADD_BIODATA_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        data: action.data\n      };\n\n    case actions.ADD_BIODATA_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actions.ADD_PROFILE_PHOTO_REQUEST:\n      return { ...state,\n        loading: true,\n        error: false\n      };\n\n    case actions.ADD_PROFILE_PHOTO_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        photo: action.data\n      };\n\n    case actions.ADD_PROFILE_PHOTO_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst kycDefaultState = {\n  data: null,\n  error: false,\n  loading: false,\n  documents: null\n};\n\nconst kyc = (state = kycDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_ERROR:\n      return { ...state,\n        error: false\n      };\n\n    case actions.CLEAR_DATA:\n      return { ...state,\n        data: false\n      };\n\n    case actions.UPDATE_KYC_REQUEST:\n      return { ...state,\n        loading: true,\n        error: false\n      };\n\n    case actions.UPDATE_KYC_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        data: action.data,\n        documents: action.data\n      };\n\n    case actions.UPDATE_KYC_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst banksDefaultState = {\n  data: null,\n  error: false,\n  loading: false,\n  banks: null\n};\n\nconst banks = (state = banksDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_DATA:\n      return { ...state,\n        data: false\n      };\n\n    case actions.GET_ALL_BANKS_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        data: action.data,\n        banks: action.data\n      };\n\n    case actions.GET_ALL_BANKS_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actions.ADD_BANK_DETAILS_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        data: action.data\n      };\n\n    case actions.ADD_BANK_DETAILS_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst securityDefaultState = {\n  data: null,\n  error: false,\n  loading: false,\n  pinError: false\n};\n\nconst security = (state = securityDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_DATA:\n      return { ...state,\n        data: false\n      };\n\n    case actions.CLEAR_PIN_ERROR:\n      return { ...state,\n        pinError: false\n      };\n\n    case actions.UPDATE_PIN_SUCCESS:\n      return { ...state,\n        loading: false,\n        pinError: false,\n        data: action.data\n      };\n\n    case actions.UPDATE_PIN_ERROR:\n      return { ...state,\n        loading: false,\n        pinError: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst segmentDefaultState = {\n  data: null,\n  error: false,\n  loading: false,\n  segments: null,\n  risks: null\n};\n\nconst segment = (state = segmentDefaultState, action) => {\n  var _action$data, _action$data2;\n\n  switch (action.type) {\n    case actions.CLEAR_DATA:\n      return { ...state,\n        data: false\n      };\n\n    case actions.CLEAR_ERROR:\n      return { ...state,\n        error: false\n      };\n\n    case actions.JOIN_SEGMENT_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        data: action.data\n      };\n\n    case actions.JOIN_SEGMENT_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actions.GET_SEGMENT_QUESTIONS_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        segments: (_action$data = action.data) === null || _action$data === void 0 ? void 0 : _action$data.data\n      };\n\n    case actions.GET_SEGMENT_QUESTIONS_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actions.SET_RISK_QUESTIONS_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        risks: (_action$data2 = action.data) === null || _action$data2 === void 0 ? void 0 : _action$data2.data\n      };\n\n    case actions.SET_RISK_QUESTIONS_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst riskDefaultState = {\n  data: null,\n  error: false,\n  loading: false,\n  risks: null\n};\n\nconst risk = (state = riskDefaultState, action) => {\n  var _action$data3;\n\n  switch (action.type) {\n    case actions.CLEAR_DATA:\n      return { ...state,\n        data: false\n      };\n\n    case actions.GET_RISK_QUESTIONS_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        risks: (_action$data3 = action.data) === null || _action$data3 === void 0 ? void 0 : _action$data3.data\n      };\n\n    case actions.GET_RISK_QUESTIONS_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default ((state = {}, action) => {\n  return {\n    userProfile: userProfile(state.userProfile, action),\n    employment: employment(state.employment, action),\n    nextOfKin: nextOfKin(state.nextOfKin, action),\n    politics: politics(state.politics, action),\n    security: security(state.security, action),\n    segment: segment(state.segment, action),\n    bioData: bioData(state.bioData, action),\n    banks: banks(state.banks, action),\n    risk: risk(state.risk, action),\n    kyc: kyc(state.kyc, action)\n  };\n});","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/store/profile/index.js"],"names":["actions","employmentDefaultState","data","error","loading","employment","state","action","type","CLEAR_ERROR","CLEAR_DATA","ADD_EMPLOYMENT_REQUEST","ADD_EMPLOYMENT_SUCCESS","ADD_EMPLOYMENT_ERROR","kinDefaultState","nextOfKin","ADD_NEXT_OF_KIN_REQUEST","ADD_NEXT_OF_KIN_SUCCESS","ADD_NEXT_OF_KIN_ERROR","politicsDefaultState","politics","ADD_POLITICAL_STATUS_REQUEST","ADD_POLITICAL_STATUS_SUCCESS","ADD_POLITICAL_STATUS_ERROR","userProfileDefaultState","userProfile","GET_USER_PROFILE_REQUEST","GET_USER_PROFILE_SUCCESS","GET_USER_PROFILE_ERROR","biodataDefaultState","photo","bioData","ADD_BIODATA_REQUEST","ADD_BIODATA_SUCCESS","ADD_BIODATA_ERROR","ADD_PROFILE_PHOTO_REQUEST","ADD_PROFILE_PHOTO_SUCCESS","ADD_PROFILE_PHOTO_ERROR","kycDefaultState","documents","kyc","UPDATE_KYC_REQUEST","UPDATE_KYC_SUCCESS","UPDATE_KYC_ERROR","banksDefaultState","banks","GET_ALL_BANKS_SUCCESS","GET_ALL_BANKS_ERROR","ADD_BANK_DETAILS_SUCCESS","ADD_BANK_DETAILS_ERROR","securityDefaultState","pinError","security","CLEAR_PIN_ERROR","UPDATE_PIN_SUCCESS","UPDATE_PIN_ERROR","segmentDefaultState","segments","risks","segment","JOIN_SEGMENT_SUCCESS","JOIN_SEGMENT_ERROR","GET_SEGMENT_QUESTIONS_SUCCESS","GET_SEGMENT_QUESTIONS_ERROR","SET_RISK_QUESTIONS_SUCCESS","SET_RISK_QUESTIONS_ERROR","riskDefaultState","risk","GET_RISK_QUESTIONS_SUCCESS","GET_RISK_QUESTIONS_ERROR"],"mappings":"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","sourcesContent":["import * as actions from \"./actionTypes\";\n\nconst employmentDefaultState = {\n  data: null,\n  error: false,\n  loading: false,\n}\n\nconst employment = (state = employmentDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_ERROR:\n      return { ...state, error: false };\n    case actions.CLEAR_DATA:\n      return { ...state, data: false };\n    case actions.ADD_EMPLOYMENT_REQUEST:\n      return { ...state, loading: true, error: false }\n    case actions.ADD_EMPLOYMENT_SUCCESS:\n      return { ...state, loading: false, error: false, data: action.data }\n    case actions.ADD_EMPLOYMENT_ERROR:\n      return { ...state, loading: false, error: action.error }\n    default:\n      return state;\n  }\n}\n\nconst kinDefaultState = {\n  data: null,\n  error: false,\n  loading: false,\n}\n\nconst nextOfKin = (state = kinDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_ERROR:\n      return { ...state, error: false };\n    case actions.CLEAR_DATA:\n      return { ...state, data: false };\n      case actions.ADD_NEXT_OF_KIN_REQUEST:\n        return { ...state, loading: true, error: false }\n      case actions.ADD_NEXT_OF_KIN_SUCCESS:\n        return { ...state, loading: false, error: false, data: action.data }\n      case actions.ADD_NEXT_OF_KIN_ERROR:\n        return { ...state, loading: false, error: action.error }\n    default:\n      return state;\n  }\n}\n\nconst politicsDefaultState = {\n  data: null,\n  error: false,\n  loading: false,\n}\n\nconst politics = (state = politicsDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_ERROR:\n      return { ...state, error: false };\n    case actions.CLEAR_DATA:\n      return { ...state, data: false };\n      case actions.ADD_POLITICAL_STATUS_REQUEST:\n        return { ...state, loading: true, error: false }\n      case actions.ADD_POLITICAL_STATUS_SUCCESS:\n        return { ...state, loading: false, error: false, data: action.data }\n      case actions.ADD_POLITICAL_STATUS_ERROR:\n        return { ...state, loading: false, error: action.error }\n    default:\n      return state;\n  }\n}\n\nconst userProfileDefaultState = {\n  data: null,\n  error: false,\n  loading: false,\n}\n\nconst userProfile = (state = userProfileDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_ERROR:\n      return { ...state, data: false };\n      case actions.GET_USER_PROFILE_REQUEST:\n        return { ...state, loading: true, error: false }\n      case actions.GET_USER_PROFILE_SUCCESS:\n        return { ...state, loading: false, error: false, data: action.data }\n      case actions.GET_USER_PROFILE_ERROR:\n        return { ...state, loading: false, error: action.error }\n    default:\n      return state;\n  }\n}\n\nconst biodataDefaultState = {\n  data: null,\n  error: false,\n  loading: false,\n  photo: null,\n}\n\nconst bioData = (state = biodataDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_ERROR:\n      return { ...state, error: false };\n    case actions.CLEAR_DATA:\n      return { ...state, data: false };\n    case actions.ADD_BIODATA_REQUEST:\n      return { ...state, loading: true, error: false }\n    case actions.ADD_BIODATA_SUCCESS:\n      return { ...state, loading: false, error: false, data: action.data }\n    case actions.ADD_BIODATA_ERROR:\n      return { ...state, loading: false, error: action.error }\n    case actions.ADD_PROFILE_PHOTO_REQUEST:\n      return { ...state, loading: true, error: false }\n    case actions.ADD_PROFILE_PHOTO_SUCCESS:\n      return { ...state, loading: false, error: false, photo: action.data }\n    case actions.ADD_PROFILE_PHOTO_ERROR:\n      return { ...state, loading: false, error: action.error }\n    default:\n      return state;\n  }\n}\n\nconst kycDefaultState = {\n  data: null,\n  error: false,\n  loading: false,\n  documents: null,\n}\n\nconst kyc = (state = kycDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_ERROR:\n      return { ...state, error: false };\n    case actions.CLEAR_DATA:\n      return { ...state, data: false };\n    case actions.UPDATE_KYC_REQUEST:\n      return { ...state, loading: true, error: false }\n    case actions.UPDATE_KYC_SUCCESS:\n      return { ...state, loading: false, error: false, data: action.data, documents: action.data }\n    case actions.UPDATE_KYC_ERROR:\n      return { ...state, loading: false, error: action.error }\n    default:\n      return state;\n  }\n}\n\nconst banksDefaultState = {\n  data: null,\n  error: false,\n  loading: false,\n  banks: null\n}\n\nconst banks = (state = banksDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_DATA:\n      return { ...state, data: false };\n    case actions.GET_ALL_BANKS_SUCCESS:\n      return { ...state, loading: false, error: false, data: action.data, banks: action.data }\n    case actions.GET_ALL_BANKS_ERROR:\n      return { ...state, loading: false, error: action.error }\n    case actions.ADD_BANK_DETAILS_SUCCESS:\n      return { ...state, loading: false, error: false, data: action.data }\n    case actions.ADD_BANK_DETAILS_ERROR:\n      return { ...state, loading: false, error: action.error }\n    default:\n      return state;\n  }\n}\n\nconst securityDefaultState = {\n  data: null,\n  error: false,\n  loading: false,\n  pinError: false,\n}\n\nconst security = (state = securityDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_DATA:\n      return { ...state, data: false };\n    case actions.CLEAR_PIN_ERROR:\n      return { ...state, pinError: false };\n    case actions.UPDATE_PIN_SUCCESS:\n      return { ...state, loading: false, pinError: false, data: action.data }\n    case actions.UPDATE_PIN_ERROR:\n      return { ...state, loading: false, pinError: action.error }\n    default:\n      return state;\n  }\n}\n\nconst segmentDefaultState = {\n  data: null,\n  error: false,\n  loading: false,\n  segments: null,\n  risks: null,\n}\n\nconst segment = (state = segmentDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_DATA:\n      return { ...state, data: false };\n      case actions.CLEAR_ERROR:\n        return { ...state, error: false };\n    case actions.JOIN_SEGMENT_SUCCESS:\n      return { ...state, loading: false, error: false, data: action.data }\n    case actions.JOIN_SEGMENT_ERROR:\n      return { ...state, loading: false, error: action.error }\n      case actions.GET_SEGMENT_QUESTIONS_SUCCESS:\n        return { ...state, loading: false, error: false, segments: action.data?.data }\n      case actions.GET_SEGMENT_QUESTIONS_ERROR:\n        return { ...state, loading: false, error: action.error }\n        case actions.SET_RISK_QUESTIONS_SUCCESS:\n          return { ...state, loading: false, error: false, risks: action.data?.data }\n        case actions.SET_RISK_QUESTIONS_ERROR:\n          return { ...state, loading: false, error: action.error }\n    default:\n      return state;\n  }\n}\n\nconst riskDefaultState = {\n  data: null,\n  error: false,\n  loading: false,\n  risks: null\n}\n\nconst risk = (state = riskDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_DATA:\n      return { ...state, data: false };\n      case actions.GET_RISK_QUESTIONS_SUCCESS:\n        return { ...state, loading: false, error: false, risks: action.data?.data }\n      case actions.GET_RISK_QUESTIONS_ERROR:\n        return { ...state, loading: false, error: action.error }\n    default:\n      return state;\n  }\n}\n\nexport default (state = {}, action) => {\n  return {\n    userProfile: userProfile(state.userProfile, action),\n    employment: employment(state.employment, action),\n    nextOfKin: nextOfKin(state.nextOfKin, action),\n    politics: politics(state.politics, action),\n    security: security(state.security, action),\n    segment: segment(state.segment, action),\n    bioData: bioData(state.bioData, action),\n    banks: banks(state.banks, action),\n    risk: risk(state.risk, action),\n    kyc: kyc(state.kyc, action),\n  }\n}"]},"metadata":{},"sourceType":"module"}