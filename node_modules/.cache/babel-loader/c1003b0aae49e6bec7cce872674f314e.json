{"ast":null,"code":"var _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Deposit/index.js\";\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Back from '#/components/Back';\nimport Card from '#/components/Card';\nimport Textbox from '#/components/Textbox';\nimport PaymentMethod from '#/components/PaymentMethod';\nimport Modal from '#/components/Modal';\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport actionTypes from \"#/store/wallet/actionTypes\";\nimport { displayTransferModal } from '#/store/ui/actions';\nimport { getCards, depositFunds } from '#/store/wallet/actions';\nimport { paymentMethods } from '#/utils';\nimport { validateFields, serializeErrors, formatStringToCurrency, formatCurrencyToString } from '#/utils';\nimport './style.scss';\n\nclass Deposit extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      amount: '',\n      errors: null,\n      selectedMethod: null,\n      selectionError: null,\n      showNoBvn: false\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n\n      if (name === 'amount') {\n        this.setState({\n          errors: null\n        });\n        return this.setState({\n          [name]: formatCurrencyToString(value)\n        }, () => {\n          if (isNaN(this.state.amount)) {\n            return this.setState({\n              errors: {\n                amount: 'enter a valid number'\n              }\n            });\n          }\n        });\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSelectMethod = event => {\n      this.setState({\n        selectedMethod: event.target.id\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        selectedMethod\n      } = this.state;\n      this.setState({\n        errors: null,\n        selectionError: null\n      });\n\n      if (!selectedMethod) {\n        return this.setState({\n          selectionError: 'please select a payment method'\n        });\n      }\n\n      const data = this.state;\n      const required = ['amount'];\n      const errors = validateFields(data, required);\n\n      if (Object.keys(errors).length > 0) {\n        return this.setState({\n          errors\n        });\n      }\n\n      if (!this.props.isBvnActive) {\n        return this.toggleBvnModal();\n      }\n\n      if (selectedMethod === 'transfer') {\n        return this.props.displayTransferModal();\n      }\n\n      if (this.props.cards && this.props.cards.cards.length > 0) {\n        return this.props.history.push({\n          pathname: \"/app/wallet/cards\",\n          state: {\n            amount: formatCurrencyToString(this.state.amount)\n          }\n        });\n      }\n\n      const payload = {\n        amount: formatCurrencyToString(this.state.amount),\n        currency: 'NGN'\n      }; //check for cards before this\n\n      this.props.depositFunds(payload);\n    };\n\n    this.handleBvnSetup = () => {\n      this.props.history.push('/app/onboarding');\n    };\n\n    this.toggleBvnModal = () => {\n      this.setState(prevState => ({\n        showNoBvn: !prevState.showNoBvn\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCards();\n  }\n\n  render() {\n    const {\n      amount,\n      selectedMethod,\n      errors,\n      selectionError,\n      showNoBvn\n    } = this.state;\n    const {\n      error,\n      loading,\n      walletDetails\n    } = this.props;\n    const errorObject = serializeErrors(error);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"deposit-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, showNoBvn && /*#__PURE__*/React.createElement(Modal, {\n      classes: \"bvn-active\",\n      onClose: this.toggleBvnModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, \"Please Setup your BVN to continue\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm btn-block mt-4\",\n      onClick: this.handleBvnSetup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, \"Setup BVN\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Back, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-medium text-deep-blue \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"Deposit Funds into Wallet\"))), /*#__PURE__*/React.createElement(Card, {\n      classes: \"mt-4 col col-md-9 card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"default-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"How much do you want to deposit into your wallet?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Textbox, {\n      onChange: this.handleChange,\n      type: \"text\",\n      label: \"Amount\",\n      placeholder: \"Amount\",\n      name: \"amount\",\n      value: formatStringToCurrency(amount),\n      error: errors ? errors.amount : errorObject && errorObject['amount'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }), walletDetails && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-grey text-x-small mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, \"Available balance \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 76\n      }\n    }, \"\\u20A6 \", walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : '0.00')))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"default-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, \"Choose a payment method\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, paymentMethods.map(method => /*#__PURE__*/React.createElement(PaymentMethod, {\n      onSelect: this.handleSelectMethod,\n      selected: selectedMethod === method.value ? true : false,\n      imgUrl: method.imgUrl,\n      imgBlue: method.imgBlue,\n      key: Math.random() * 1000,\n      value: method.value,\n      label: method.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }))), error && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 27\n      }\n    }, error), selectionError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 36\n      }\n    }, selectionError), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary btn-md-block\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }, \"Proceed\", loading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 23\n      }\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    app: {\n      wallet: {\n        cards,\n        error,\n        walletDetails\n      },\n      profile: {\n        userProfile: {\n          data\n        }\n      }\n    }\n  } = state;\n  return {\n    loading: getActionLoadingState(state, actionTypes.DEPOSIT_REQUEST),\n    cards,\n    error,\n    walletDetails,\n    isBvnActive: data && data.bvn ? true : false\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    displayTransferModal: () => dispatch(displayTransferModal()),\n    getCards: () => dispatch(getCards()),\n    depositFunds: payload => dispatch(depositFunds(payload))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Deposit));","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Deposit/index.js"],"names":["React","withRouter","connect","Back","Card","Textbox","PaymentMethod","Modal","getActionLoadingState","actionTypes","displayTransferModal","getCards","depositFunds","paymentMethods","validateFields","serializeErrors","formatStringToCurrency","formatCurrencyToString","Deposit","Component","state","amount","errors","selectedMethod","selectionError","showNoBvn","handleChange","event","name","value","target","setState","isNaN","handleSelectMethod","id","handleSubmit","e","preventDefault","data","required","Object","keys","length","props","isBvnActive","toggleBvnModal","cards","history","push","pathname","payload","currency","handleBvnSetup","prevState","componentDidMount","render","error","loading","walletDetails","errorObject","wallet","NGN","map","method","imgUrl","imgBlue","Math","random","label","mapStateToProps","app","profile","userProfile","DEPOSIT_REQUEST","bvn","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Back from '#/components/Back';\nimport Card from '#/components/Card';\nimport Textbox from '#/components/Textbox';\nimport PaymentMethod from '#/components/PaymentMethod';\nimport Modal from '#/components/Modal';\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport actionTypes from \"#/store/wallet/actionTypes\";\nimport { displayTransferModal } from '#/store/ui/actions'\nimport { getCards, depositFunds } from '#/store/wallet/actions'\nimport { paymentMethods } from '#/utils';\nimport { validateFields, serializeErrors, formatStringToCurrency, formatCurrencyToString } from '#/utils';\nimport './style.scss';\n\nclass Deposit extends React.Component {\n\n  state = {\n    amount: '',\n    errors: null,\n    selectedMethod: null,\n    selectionError: null,\n    showNoBvn: false,\n  }\n\n  componentDidMount () {\n    this.props.getCards();\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    if(name === 'amount') {\n    this.setState({ errors: null});\n      return this.setState({ [name]: formatCurrencyToString(value)}, ()=> {\n        if(isNaN(this.state.amount)) {\n          return this.setState({ errors: { amount: 'enter a valid number' } })\n        }\n      });\n    }\n    this.setState({ [name]: value });\n  }\n\n  handleSelectMethod = (event) => {\n    this.setState({ selectedMethod: event.target.id });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { selectedMethod } = this.state;\n    this.setState({ errors: null, selectionError: null });\n\n    if (!selectedMethod) {\n      return this.setState({ selectionError: 'please select a payment method' });\n    }\n\n    const data = this.state;\n    const required = [ 'amount' ];\n    const errors = validateFields(data, required)\n\n    if (Object.keys(errors).length > 0) {\n      return this.setState({ errors });\n    }\n\n    if(!this.props.isBvnActive) {\n      return this.toggleBvnModal()\n    }\n\n    if(selectedMethod === 'transfer') {\n      return this.props.displayTransferModal();\n    }\n\n    if(this.props.cards && this.props.cards.cards.length > 0) {\n      return this.props.history.push({\n        pathname: \"/app/wallet/cards\",\n        state: { amount: formatCurrencyToString(this.state.amount) },\n      });\n    }\n    const payload = { amount: formatCurrencyToString(this.state.amount), currency: 'NGN' }\n    //check for cards before this\n    this.props.depositFunds(payload)\n  }\n\n  handleBvnSetup = () => {\n    this.props.history.push('/app/onboarding');\n  }\n\n  toggleBvnModal = () => {\n    this.setState(prevState => ({ showNoBvn: !prevState.showNoBvn }))\n  }\n\n\n  render() {\n    const { amount, selectedMethod, errors, selectionError, showNoBvn } = this.state;\n    const { error, loading, walletDetails } = this.props;\n    const errorObject = serializeErrors(error);\n\n    return (\n      <div className=\"deposit-page\">\n        {showNoBvn &&\n          <Modal classes=\"bvn-active\" onClose={this.toggleBvnModal}>\n            <div className=\"text-center\">\n              <h3 className=\"text-deep-blue\">Please Setup your BVN to continue</h3>\n              <button className=\"btn btn-primary btn-sm btn-block mt-4\" onClick={this.handleBvnSetup}>\n                Setup BVN\n              </button>\n            </div>\n          </Modal>\n        }\n        <div className=\"row\">\n          <div className=\"col-md-2\">\n            <Back />\n          </div>\n          <div className=\"col-md-5 text-center\">\n            <h3 className=\"text-medium text-deep-blue \">Deposit Funds into Wallet</h3>\n          </div>\n        </div>\n        <Card classes=\"mt-4 col col-md-9 card\">\n          <form>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <h3 className=\"default-black text-medium mt-3\">How much do you want to deposit into your wallet?</h3>\n              </div>\n              <div className=\"col-md-6\">\n                <Textbox\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  label=\"Amount\"\n                  placeholder=\"Amount\"\n                  name=\"amount\"\n                  value={formatStringToCurrency(amount)}\n                  error={errors ? errors.amount : (errorObject && errorObject['amount'])}\n                />\n              { walletDetails &&  \n              <p className=\"text-grey text-x-small mb-0\">Available balance <span className=\"text-deep-blue\">\n                &#x20A6; {walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : '0.00'}\n                </span>\n              </p>\n            }\n              </div>\n            </div>\n\n            <div className=\"row mt-4\">\n              <div className=\"col-md-6\">\n                <h3 className=\"default-black text-medium mt-3\">Choose a payment method</h3>\n              </div>\n              <div className=\"col-md-6\">\n                <div>\n                  {paymentMethods.map(method => (\n                    <PaymentMethod\n                      onSelect={this.handleSelectMethod}\n                      selected={selectedMethod === method.value ? true : false}\n                      imgUrl={method.imgUrl}\n                      imgBlue={method.imgBlue}\n                      key={Math.random() * 1000}\n                      value={method.value}\n                      label={method.label}\n                    />\n                  ))}\n                </div>\n                {error && <p className=\"text-error text-left\">{error}</p>}\n                {selectionError && <p className=\"text-error text-left\">{selectionError}</p>}\n                <div className=\"text-right mt-3\">\n                  <button className=\"btn btn-sm btn-primary btn-md-block\" onClick={this.handleSubmit}>\n                    Proceed\n                    {loading &&\n                      <div className=\"spinner-border spinner-border-white spinner-border-sm ml-2\"></div>\n                    }\n                </button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </Card>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { app: { wallet: { cards, error, walletDetails }, profile: { userProfile: { data } } } } = state;\n  return {\n    loading: getActionLoadingState(state, actionTypes.DEPOSIT_REQUEST),\n    cards,\n    error,\n    walletDetails,\n    isBvnActive: data && data.bvn ? true : false,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    displayTransferModal: () => dispatch(displayTransferModal()),\n    getCards: () => dispatch(getCards()),\n    depositFunds: (payload) => dispatch(depositFunds(payload))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Deposit));\n"]},"metadata":{},"sourceType":"module"}