{"ast":null,"code":"import * as actions from \"./actionTypes\";\nconst onboardingDefaultState = {\n  userData: null,\n  data: null,\n  error: false,\n  loading: false\n};\nexport default ((state = onboardingDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR:\n      return { ...state,\n        loading: true,\n        error: false,\n        data: null\n      };\n\n    case actions.VERIFY_IDENTITY_REQUEST:\n      return { ...state,\n        loading: true,\n        error: false\n      };\n\n    case actions.VERIFY_IDENTITY_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        userData: action.data\n      };\n\n    case actions.VERIFY_IDENTITY_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actions.CONFIRM_IDENTITY_REQUEST:\n      return { ...state,\n        loading: true,\n        error: false\n      };\n\n    case actions.CONFIRM_IDENTITY_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        data: action.data\n      };\n\n    case actions.CONFIRM_IDENTITY_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actions.SUBMIT_OTP_REQUEST:\n      return { ...state,\n        loading: true,\n        error: false\n      };\n\n    case actions.SUBMIT_OTP_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        data: action.data\n      };\n\n    case actions.SUBMIT_OTP_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actions.SUBMIT_PIN_REQUEST:\n      return { ...state,\n        loading: true,\n        error: false\n      };\n\n    case actions.SUBMIT_PIN_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        data: action.data\n      };\n\n    case actions.SUBMIT_PIN_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/store/onboarding/index.js"],"names":["actions","onboardingDefaultState","userData","data","error","loading","state","action","type","CLEAR","VERIFY_IDENTITY_REQUEST","VERIFY_IDENTITY_SUCCESS","VERIFY_IDENTITY_ERROR","CONFIRM_IDENTITY_REQUEST","CONFIRM_IDENTITY_SUCCESS","CONFIRM_IDENTITY_ERROR","SUBMIT_OTP_REQUEST","SUBMIT_OTP_SUCCESS","SUBMIT_OTP_ERROR","SUBMIT_PIN_REQUEST","SUBMIT_PIN_SUCCESS","SUBMIT_PIN_ERROR"],"mappings":"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","sourcesContent":["import * as actions from \"./actionTypes\";\n\nconst onboardingDefaultState = {\n  userData: null,\n  data: null,\n  error: false,\n  loading: false,\n}\n\nexport default (state = onboardingDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR:\n      return { ...state, loading: true, error: false, data: null };\n    case actions.VERIFY_IDENTITY_REQUEST:\n      return { ...state, loading: true, error: false }\n    case actions.VERIFY_IDENTITY_SUCCESS:\n      return { ...state, loading: false, error: false, userData: action.data }\n    case actions.VERIFY_IDENTITY_ERROR:\n      return { ...state, loading: false, error: action.error }\n    case actions.CONFIRM_IDENTITY_REQUEST:\n      return { ...state, loading: true, error: false }\n    case actions.CONFIRM_IDENTITY_SUCCESS:\n      return { ...state, loading: false, error: false, data: action.data }\n    case actions.CONFIRM_IDENTITY_ERROR:\n      return { ...state, loading: false, error: action.error }\n    case actions.SUBMIT_OTP_REQUEST:\n      return { ...state, loading: true, error: false }\n    case actions.SUBMIT_OTP_SUCCESS:\n      return { ...state, loading: false, error: false, data: action.data }\n    case actions.SUBMIT_OTP_ERROR:\n      return { ...state, loading: false, error: action.error }\n    case actions.SUBMIT_PIN_REQUEST:\n      return { ...state, loading: true, error: false }\n    case actions.SUBMIT_PIN_SUCCESS:\n      return { ...state, loading: false, error: false, data: action.data }\n    case actions.SUBMIT_PIN_ERROR:\n      return { ...state, loading: false, error: action.error }\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}