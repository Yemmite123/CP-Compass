{"ast":null,"code":"import moment from 'moment';\nexport const validateFields = (data, required, noScroll) => {\n  let errors = {};\n\n  for (var i = 0, len = required.length; i < len; i++) {\n    let val = data[required[i]];\n\n    if (!data.hasOwnProperty(required[i])) {\n      continue;\n    }\n\n    if (typeof data[required[i]] === 'object') {\n      val = JSON.stringify(data[required[i]]);\n    }\n\n    if (val.trim() === \"\" || val.length === 0) {\n      noScroll && window.scrollTo(0, 0);\n      errors[required[i]] = `field is required`;\n    }\n\n    continue;\n  }\n\n  return errors;\n};\nexport const isPasswordEqual = (confirm, password) => {\n  let errors = {};\n\n  if (confirm === password) {\n    return null;\n  }\n\n  errors.confirm = 'passwords should be equal';\n  return errors;\n};\nexport const serializeErrors = error => {\n  let errorObject = {};\n\n  if (error && typeof error === \"object\") {\n    error.forEach(error => {\n      errorObject[Object.values(error)[1]] = error[Object.keys(error)[0]];\n    });\n  }\n\n  return errorObject;\n};\nexport const paymentMethods = [{\n  label: 'Debit Card',\n  value: 'card',\n  imgUrl: require(\"#/assets/icons/card-grey.svg\"),\n  imgBlue: require(\"#/assets/icons/card-blue.svg\")\n}, {\n  label: 'Direct Bank Transfer',\n  value: 'transfer',\n  imgUrl: require(\"#/assets/icons/transfer-grey.svg\"),\n  imgBlue: require(\"#/assets/icons/transfer-blue.svg\")\n}];\nexport const fundingSource = [{\n  label: 'Debit Card',\n  value: 'card',\n  imgUrl: require(\"#/assets/icons/card-grey.svg\"),\n  imgBlue: require(\"#/assets/icons/card-blue.svg\")\n}, {\n  label: 'Wallet',\n  value: 'wallet',\n  imgUrl: require(\"#/assets/icons/funding-wallet-grey.svg\"),\n  imgBlue: require(\"#/assets/icons/funding-wallet-blue.svg\")\n}];\nexport const pieData = {\n  datasets: [{\n    data: [10, 20, 30],\n    backgroundColor: ['#044472', '#3F9ADA', '#9DC6FB']\n  }],\n  labels: ['Termed Investment', 'Financial Instruments', 'Wallet']\n};\nexport const pieOptions = {\n  legend: {\n    display: false\n  },\n  tooltips: {\n    callbacks: {\n      label: function (tooltipItem, data) {\n        let sum = 0;\n        const dataArr = data.datasets[0].data;\n        sum = dataArr.reduce((a, b) => a + b, 0);\n        var label = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index] || '';\n        const itemPercentage = label / sum * 100; // var text = data.labels[tooltipItem.index];\n\n        return `${Number(itemPercentage).toFixed(2)}%`;\n      }\n    }\n  }\n};\nexport const portfolioPieData = {\n  datasets: [{\n    data: [1000, 20500, 30],\n    backgroundColor: ['#044472', '#3F9ADA', '#9DC6FB']\n  }],\n  labels: ['Termed Investment', 'Financial Instruments', 'Wallet']\n};\nexport const portfolioPie = (wallet, termed, financial) => {\n  const data = {\n    Wallet: wallet,\n    'Termed Investment': termed\n  };\n  const labels = ['Wallet', 'Termed Investment'];\n  return {\n    datasets: [{\n      data: [wallet, termed],\n      backgroundColor: ['#044472', '#3F9ADA', '#9DC6FB']\n    }],\n    labels: labels.map(label => `${label}: ${formatCurrency(data[label])}`)\n  };\n};\nexport const portfolioPieOptions = {\n  legend: {\n    display: false\n  },\n  tooltips: {\n    callbacks: {\n      label: function (tooltipItem, data) {\n        let sum = 0;\n        const dataArr = data.datasets[0].data;\n        sum = dataArr.reduce((a, b) => a + b, 0);\n        var label = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index] || '';\n        const itemPercentage = label / sum * 100;\n        var text = data.labels[tooltipItem.index];\n        return `${text}: (${Number(itemPercentage).toFixed(2)}%)`;\n      }\n    }\n  }\n};\nexport const relationshipOption = [{\n  name: 'Brother',\n  value: 'brother'\n}, {\n  name: 'Father',\n  value: 'father'\n}, {\n  name: 'Mother',\n  value: 'mother'\n}, {\n  name: 'Sister',\n  value: 'sister'\n}, {\n  name: 'Friend',\n  value: 'friend'\n}, {\n  name: 'Spouse',\n  value: 'spouse'\n}, {\n  name: 'Son',\n  value: 'son'\n}, {\n  name: 'Daughter',\n  value: 'daughter'\n}];\nexport const genderOption = [{\n  name: 'Male',\n  value: 'male'\n}, {\n  name: 'Female',\n  value: 'female'\n}];\nexport const documentOptions = [{\n  name: 'International passport',\n  value: 'international_passport'\n}, {\n  name: 'Drivers licence',\n  value: 'drivers_licence'\n}, {\n  name: 'PVC',\n  value: 'pvc'\n}, {\n  name: 'National ID',\n  value: 'national_id'\n}];\nexport const employmentOption = [{\n  name: 'Employed',\n  value: 'employed'\n}, {\n  name: 'Self employed',\n  value: 'self-employed'\n}, {\n  name: 'Unemployed',\n  value: 'unemployed'\n}, {\n  name: 'Student',\n  value: 'student'\n}, {\n  name: 'Retired',\n  value: 'retired'\n}];\nexport const qualificationOption = [{\n  name: 'SSCE',\n  value: 'ssce'\n}, {\n  name: 'NCE',\n  value: 'nce'\n}, {\n  name: 'OND',\n  value: 'ond'\n}, {\n  name: 'HND',\n  value: 'hnd'\n}, {\n  name: 'Bachelors degree',\n  value: 'bachelors'\n}, {\n  name: 'Masters degree',\n  value: 'masters'\n}, {\n  name: 'PhD',\n  value: 'phd'\n}, {\n  name: 'Others',\n  value: 'others'\n}];\nexport const frequencyOption = [{\n  name: 'Daily',\n  value: 'daily'\n}, {\n  name: 'Weekly',\n  value: 'weekly'\n}, {\n  name: 'Quarterly',\n  value: 'quarterly'\n}, {\n  name: 'Bi-annually',\n  value: 'bi-annually'\n}, {\n  name: 'Annually',\n  value: 'annually'\n}];\nexport const investmentFrequency = [{\n  name: 'Daily',\n  value: 'daily'\n}, {\n  name: 'Weekly',\n  value: 'weekly'\n}, {\n  name: 'Monthly',\n  value: 'monthly'\n}, {\n  name: 'Quarterly',\n  value: 'quarterly'\n}, {\n  name: 'Bi-annually',\n  value: 'bi-annually'\n}, {\n  name: 'Annually',\n  value: 'annually'\n}];\nexport const getTimeOfDay = () => {\n  const format = 'hh:mm:ss';\n  const morningTime = moment('00:00:00', format);\n  const afternoonTime = moment('12:00:00', format);\n  const eveningTime = moment('18:00:00', format);\n\n  if (moment().isBetween(morningTime, afternoonTime)) {\n    return 'morning';\n  }\n\n  if (moment().isBetween(afternoonTime, eveningTime)) {\n    return 'afternoon';\n  }\n\n  return 'evening';\n};\nexport const transactionType = type => {\n  const withdrawImg = require('#/assets/icons/funds-withdrawn-icon.svg');\n\n  const depositImg = require('#/assets/icons/funds-deposited.svg');\n\n  const investedImg = require('#/assets/icons/invested-icon.svg');\n\n  const failedImg = require('#/assets/icons/failed-icon.svg');\n\n  if (type === 'credit') {\n    return depositImg;\n  }\n\n  if (type === 'debit') {\n    return withdrawImg;\n  }\n\n  if (type === 'service') {\n    return investedImg;\n  }\n\n  if (type === 'failed') {\n    return failedImg;\n  }\n};\nexport const questionOptions = [{\n  label: 'A Wedding with my dream partner',\n  value: 'wedding'\n}, {\n  label: 'A new car',\n  value: 'car'\n}, {\n  label: 'Acquire a new/my next property',\n  value: 'property'\n}];\nexport const interests = ['News', 'Investments', 'Socializing', 'Sports', 'Art', 'Self-development', 'Fashion', 'Food & Drink', 'others'];\nexport const formatCurrency = amount => {\n  return Number(amount).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n}; //adds the commas\n\nexport const formatStringToCurrency = amount => {\n  return amount.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \"$&,\");\n}; // removes commas\n\nexport const formatCurrencyToString = amount => {\n  return amount.replace(/\\,/g, '');\n};\nexport const formatAmount = amount => {\n  return Number(amount).toLocaleString();\n};\nexport const convertDate = date => {\n  return moment(date).format(\"DD MMMM YYYY\");\n};\nexport const interestRate = 10 / 100;\nexport const interestCalculation = data => {\n  const amount = 10000;\n  const interest = interestRate * 30 / 365; //use when there's an end date\n\n  const interestAccruedDaily = interestRate * amount / 365; //when there is no enddate but there is an amount\n\n  const interestActual = interestRate * amount;\n  return {\n    interest,\n    interestAccruedDaily,\n    interestActual\n  };\n};\nexport const calculateAmountToPay = data => {\n  const endDate = new Date(data.endDate);\n  const startDate = new Date(data.startDate);\n  var DifferenceInTime = endDate.getTime() - startDate.getTime();\n  var DifferenceInDays = DifferenceInTime / (1000 * 3600 * 24);\n  var DifferenceInWeeks = Math.round(DifferenceInTime / (1000 * 3600 * 24 * 7));\n  var DifferenceInMonths = DifferenceInTime / (1000 * 3600 * 24 * 7 * 4);\n  var DifferenceInQuarter = DifferenceInTime / (1000 * 3600 * (24 * 7 * 4 * 3));\n  var DifferenceInBiAnnually = DifferenceInTime / (1000 * 3600 * (24 * 7 * 4 * 6));\n  var DifferenceInAnnually = DifferenceInTime / (1000 * 3600 * (24 * 7 * 4 * 6));\n\n  const getTimeLine = frequency => {\n    switch (frequency) {\n      case 'daily':\n        return DifferenceInDays;\n\n      case 'weekly':\n        return DifferenceInWeeks;\n\n      case 'monthly':\n        return DifferenceInMonths;\n\n      case 'quarterly':\n        return DifferenceInQuarter;\n\n      case 'bi-annually':\n        return DifferenceInBiAnnually;\n\n      case 'annually':\n        return DifferenceInAnnually;\n\n      default:\n        break;\n    }\n  };\n\n  const depositAmount = data.target / getTimeLine(data.frequency);\n  return depositAmount;\n};\nexport const calculateInterest = (data, interestRate) => {\n  const startTime = moment(data.startDate);\n  const endTime = moment(data.endDate);\n  const noOfDays = endTime.diff(startTime, 'days');\n  const year = moment().isLeapYear() ? 366 : 365;\n  const interest = parseInt(data.target, 10) * (interestRate / 100) * (noOfDays / year);\n  const calculatedInterest = interest + parseInt(data.target, 10);\n  return calculatedInterest;\n};\nexport const verifyFrequencyPeriod = data => {\n  const startTime = moment(data.startDate);\n  const endTime = moment(data.endDate);\n  const noOfDays = endTime.diff(startTime, 'days');\n\n  switch (data.frequency) {\n    case 'daily':\n      if (noOfDays < 1) {\n        return 'date range is not up to a day';\n      }\n\n      break;\n\n    case 'weekly':\n      if (noOfDays < 7) {\n        return 'date range is not up to a week';\n      }\n\n      break;\n\n    case 'monthly':\n      if (noOfDays < 30) {\n        return 'date range is not up to a month';\n      }\n\n      break;\n\n    case 'quarterly':\n      if (noOfDays < 90) {\n        return 'date range is not up to a quarter';\n      }\n\n      break;\n\n    case 'bi-annually':\n      if (noOfDays < 180) {\n        return 'date range is not up to bi-annual';\n      }\n\n      break;\n\n    case 'annually':\n      if (noOfDays < 365) {\n        return 'date range is not up to a year';\n      }\n\n      break;\n\n    default:\n      break;\n  }\n};\nexport const isNegative = value => {\n  if (parseInt(value, 10) > 0) return false;\n  if (parseInt(value, 10) === 0) return 'neutral';\n  return true;\n};\nexport const checkFileType = url => {\n  var extension = url.split('.').pop();\n\n  if (['jpg', 'JPG', 'JPEG', 'jpeg', 'png', 'PNG', 'GIF', 'svg'].includes(extension)) {\n    return 'image';\n  }\n\n  if (['pdf', 'PDF', 'docx', 'xls'].includes(extension)) {\n    return 'file';\n  }\n\n  return 'file';\n};\nexport const formatDate = date => {\n  if (moment().format('YYYY-MM-DD') === date) {\n    return 'Today';\n  } else if (moment().subtract(1, 'days').format('YYYY-MM-DD') === date) {\n    return 'Yesterday';\n  }\n\n  return date;\n};\nexport const checkLike = (likes, commentId) => {\n  return likes.find(like => like.comment_id === commentId);\n};\nexport const checkUnread = notifications => {\n  const notificationKeys = Object.keys(notifications);\n\n  if (notificationKeys.length > 0) {\n    for (let i = 0; i < notificationKeys.length; i++) {\n      const findItem = notifications[notificationKeys[i]].find(item => !item.read);\n      return findItem;\n    }\n  }\n\n  return;\n};\nexport const refineOptions = options => {\n  const refined = options.map(item => {\n    return {\n      name: item,\n      value: item.toLowerCase()\n    };\n  });\n  return refined;\n};\nexport const calculatePenalty = (percent, liquidationAmount, interest, investment) => {\n  let penalty;\n  let percentage = ((investment === null || investment === void 0 ? void 0 : investment.balance) - liquidationAmount) / (investment === null || investment === void 0 ? void 0 : investment.balance) * 100; //to get the percentage of the liquidated amount\n\n  const finalAccrued = percentage / 100 * (investment === null || investment === void 0 ? void 0 : investment.accruedInterest); // to get the final accrued interest percentage\n\n  if ((investment === null || investment === void 0 ? void 0 : investment.balance) >= (investment === null || investment === void 0 ? void 0 : investment.targetAmount) || moment().diff(moment(investment === null || investment === void 0 ? void 0 : investment.endDate), 'days') <= 0) {\n    penalty = percent / 100 * finalAccrued;\n  } else {\n    penalty = 0;\n  }\n\n  const amountToGet = liquidationAmount === '0' ? 0 : liquidationAmount - penalty + finalAccrued;\n  return {\n    penalty,\n    amountToGet\n  };\n};\nexport const calculateLiquidationInterest = (amount, balance, accrued) => {\n  return amount === '0' ? 0 : amount / balance * 100 / 100 * accrued;\n};\nexport const industiesList = [\"Agriculture\", \"Commerce\", \"Construction/Real Estate\", \"Consumer Goods\", \"Education\", \"Financial Services\", \"Healthcare\", \"Hospitality\", \"Industrial Goods\", \"Information & Communications Technology (ICT)\", \"Manufacturing\", \"Media\", \"Oil & Gas\", \"Postal\", \"Public Sector\", \"Services\", \"Shipping & Logistics\", \"Tourism\", \"Transportation\", \"Utilities\"];","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/utils/index.js"],"names":["moment","validateFields","data","required","noScroll","errors","i","len","length","val","hasOwnProperty","JSON","stringify","trim","window","scrollTo","isPasswordEqual","confirm","password","serializeErrors","error","errorObject","forEach","Object","values","keys","paymentMethods","label","value","imgUrl","require","imgBlue","fundingSource","pieData","datasets","backgroundColor","labels","pieOptions","legend","display","tooltips","callbacks","tooltipItem","sum","dataArr","reduce","a","b","datasetIndex","index","itemPercentage","Number","toFixed","portfolioPieData","portfolioPie","wallet","termed","financial","Wallet","map","formatCurrency","portfolioPieOptions","text","relationshipOption","name","genderOption","documentOptions","employmentOption","qualificationOption","frequencyOption","investmentFrequency","getTimeOfDay","format","morningTime","afternoonTime","eveningTime","isBetween","transactionType","type","withdrawImg","depositImg","investedImg","failedImg","questionOptions","interests","amount","replace","formatStringToCurrency","formatCurrencyToString","formatAmount","toLocaleString","convertDate","date","interestRate","interestCalculation","interest","interestAccruedDaily","interestActual","calculateAmountToPay","endDate","Date","startDate","DifferenceInTime","getTime","DifferenceInDays","DifferenceInWeeks","Math","round","DifferenceInMonths","DifferenceInQuarter","DifferenceInBiAnnually","DifferenceInAnnually","getTimeLine","frequency","depositAmount","target","calculateInterest","startTime","endTime","noOfDays","diff","year","isLeapYear","parseInt","calculatedInterest","verifyFrequencyPeriod","isNegative","checkFileType","url","extension","split","pop","includes","formatDate","subtract","checkLike","likes","commentId","find","like","comment_id","checkUnread","notifications","notificationKeys","findItem","item","read","refineOptions","options","refined","toLowerCase","calculatePenalty","percent","liquidationAmount","investment","penalty","percentage","balance","finalAccrued","accruedInterest","targetAmount","amountToGet","calculateLiquidationInterest","accrued","industiesList"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,IAAD,EAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC1D,MAAIC,MAAM,GAAG,EAAb;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGJ,QAAQ,CAACK,MAA9B,EAAsCF,CAAC,GAAGC,GAA1C,EAA+CD,CAAC,EAAhD,EAAoD;AAClD,QAAIG,GAAG,GAAGP,IAAI,CAACC,QAAQ,CAACG,CAAD,CAAT,CAAd;;AACE,QAAG,CAACJ,IAAI,CAACQ,cAAL,CAAoBP,QAAQ,CAACG,CAAD,CAA5B,CAAJ,EAAsC;AAClC;AACH;;AACD,QAAG,OAAOJ,IAAI,CAACC,QAAQ,CAACG,CAAD,CAAT,CAAX,KAA8B,QAAjC,EAA2C;AACzCG,MAAAA,GAAG,GAAGE,IAAI,CAACC,SAAL,CAAeV,IAAI,CAACC,QAAQ,CAACG,CAAD,CAAT,CAAnB,CAAN;AACD;;AACD,QAAGG,GAAG,CAACI,IAAJ,OAAe,EAAf,IAAqBJ,GAAG,CAACD,MAAJ,KAAe,CAAvC,EAA0C;AACtCJ,MAAAA,QAAQ,IAAIU,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB,CAAZ;AACAV,MAAAA,MAAM,CAACF,QAAQ,CAACG,CAAD,CAAT,CAAN,GAAuB,mBAAvB;AACH;;AACD;AACH;;AACD,SAAOD,MAAP;AACD,CAlBM;AAoBP,OAAO,MAAMW,eAAe,GAAG,CAACC,OAAD,EAAUC,QAAV,KAAuB;AACpD,MAAIb,MAAM,GAAG,EAAb;;AACA,MAAIY,OAAO,KAAKC,QAAhB,EAA0B;AACxB,WAAO,IAAP;AACD;;AACDb,EAAAA,MAAM,CAACY,OAAP,GAAiB,2BAAjB;AACA,SAAOZ,MAAP;AACD,CAPM;AASP,OAAO,MAAMc,eAAe,GAAIC,KAAD,IAAW;AACxC,MAAIC,WAAW,GAAG,EAAlB;;AAEA,MAAID,KAAK,IAAI,OAAQA,KAAR,KAAmB,QAAhC,EAA0C;AACtCA,IAAAA,KAAK,CAACE,OAAN,CAAcF,KAAK,IAAI;AACnBC,MAAAA,WAAW,CAACE,MAAM,CAACC,MAAP,CAAcJ,KAAd,EAAqB,CAArB,CAAD,CAAX,GAAuCA,KAAK,CAACG,MAAM,CAACE,IAAP,CAAYL,KAAZ,EAAmB,CAAnB,CAAD,CAA5C;AACH,KAFD;AAGD;;AACH,SAAOC,WAAP;AACD,CATM;AAWP,OAAO,MAAMK,cAAc,GAAG,CAC5B;AACEC,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,MAAM,EAAEC,OAAO,CAAC,8BAAD,CAHjB;AAIEC,EAAAA,OAAO,EAAED,OAAO,CAAC,8BAAD;AAJlB,CAD4B,EAO5B;AACEH,EAAAA,KAAK,EAAE,sBADT;AAEEC,EAAAA,KAAK,EAAE,UAFT;AAGEC,EAAAA,MAAM,EAAEC,OAAO,CAAC,kCAAD,CAHjB;AAIEC,EAAAA,OAAO,EAAED,OAAO,CAAC,kCAAD;AAJlB,CAP4B,CAAvB;AAeP,OAAO,MAAME,aAAa,GAAG,CAC3B;AACEL,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,MAAM,EAAEC,OAAO,CAAC,8BAAD,CAHjB;AAIEC,EAAAA,OAAO,EAAED,OAAO,CAAC,8BAAD;AAJlB,CAD2B,EAO3B;AACEH,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,MAAM,EAAEC,OAAO,CAAC,wCAAD,CAHjB;AAIEC,EAAAA,OAAO,EAAED,OAAO,CAAC,wCAAD;AAJlB,CAP2B,CAAtB;AAeP,OAAO,MAAMG,OAAO,GAAG;AACrBC,EAAAA,QAAQ,EAAE,CAAC;AACThC,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CADG;AAETiC,IAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB;AAFR,GAAD,CADW;AAKrBC,EAAAA,MAAM,EAAE,CACN,mBADM,EAEN,uBAFM,EAGN,QAHM;AALa,CAAhB;AAYP,OAAO,MAAMC,UAAU,GAAG;AACxBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH,GADgB;AAIxBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE;AACTd,MAAAA,KAAK,EAAE,UAASe,WAAT,EAAsBxC,IAAtB,EAA4B;AACjC,YAAIyC,GAAG,GAAG,CAAV;AACA,cAAMC,OAAO,GAAG1C,IAAI,CAACgC,QAAL,CAAc,CAAd,EAAiBhC,IAAjC;AACAyC,QAAAA,GAAG,GAAGC,OAAO,CAACC,MAAR,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA7B,EAAgC,CAAhC,CAAN;AACA,YAAIpB,KAAK,GAAGzB,IAAI,CAACgC,QAAL,CAAcQ,WAAW,CAACM,YAA1B,EAAwC9C,IAAxC,CAA6CwC,WAAW,CAACO,KAAzD,KAAmE,EAA/E;AACA,cAAMC,cAAc,GAAIvB,KAAK,GAACgB,GAAP,GAAc,GAArC,CALiC,CAMjC;;AACA,eAAQ,GAAEQ,MAAM,CAACD,cAAD,CAAN,CAAuBE,OAAvB,CAA+B,CAA/B,CAAkC,GAA5C;AACD;AATQ;AADH;AAJc,CAAnB;AAmBP,OAAO,MAAMC,gBAAgB,GAAG;AAC9BnB,EAAAA,QAAQ,EAAE,CAAC;AACThC,IAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,KAAP,EAAc,EAAd,CADG;AAETiC,IAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB;AAFR,GAAD,CADoB;AAK9BC,EAAAA,MAAM,EAAE,CACN,mBADM,EAEN,uBAFM,EAGN,QAHM;AALsB,CAAzB;AAYP,OAAO,MAAMkB,YAAY,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,SAAjB,KAA+B;AACzD,QAAMvD,IAAI,GAAG;AACXwD,IAAAA,MAAM,EAAEH,MADG;AAEX,yBAAqBC;AAFV,GAAb;AAIA,QAAMpB,MAAM,GAAG,CACb,QADa,EAEb,mBAFa,CAAf;AAIA,SAAO;AACLF,IAAAA,QAAQ,EAAE,CAAC;AACThC,MAAAA,IAAI,EAAE,CAACqD,MAAD,EAASC,MAAT,CADG;AAETrB,MAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB;AAFR,KAAD,CADL;AAKLC,IAAAA,MAAM,EAAEA,MAAM,CAACuB,GAAP,CAAYhC,KAAD,IAAY,GAAEA,KAAM,KAAIiC,cAAc,CAAC1D,IAAI,CAACyB,KAAD,CAAL,CAAc,EAA/D;AALH,GAAP;AAQD,CAjBM;AAmBP,OAAO,MAAMkC,mBAAmB,GAAG;AACjCvB,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH,GADyB;AAIjCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE;AACTd,MAAAA,KAAK,EAAE,UAASe,WAAT,EAAsBxC,IAAtB,EAA4B;AACjC,YAAIyC,GAAG,GAAG,CAAV;AACA,cAAMC,OAAO,GAAG1C,IAAI,CAACgC,QAAL,CAAc,CAAd,EAAiBhC,IAAjC;AACAyC,QAAAA,GAAG,GAAGC,OAAO,CAACC,MAAR,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA7B,EAAgC,CAAhC,CAAN;AACA,YAAIpB,KAAK,GAAGzB,IAAI,CAACgC,QAAL,CAAcQ,WAAW,CAACM,YAA1B,EAAwC9C,IAAxC,CAA6CwC,WAAW,CAACO,KAAzD,KAAmE,EAA/E;AACA,cAAMC,cAAc,GAAIvB,KAAK,GAACgB,GAAP,GAAc,GAArC;AACA,YAAImB,IAAI,GAAG5D,IAAI,CAACkC,MAAL,CAAYM,WAAW,CAACO,KAAxB,CAAX;AACA,eAAQ,GAAEa,IAAK,MAAKX,MAAM,CAACD,cAAD,CAAN,CAAuBE,OAAvB,CAA+B,CAA/B,CAAkC,IAAtD;AACD;AATQ;AADH;AAJuB,CAA5B;AAmBP,OAAO,MAAMW,kBAAkB,GAAG,CAChC;AACEC,EAAAA,IAAI,EAAE,SADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CADgC,EAKhC;AACEoC,EAAAA,IAAI,EAAE,QADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CALgC,EAShC;AACEoC,EAAAA,IAAI,EAAE,QADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CATgC,EAahC;AACEoC,EAAAA,IAAI,EAAE,QADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAbgC,EAiBhC;AACEoC,EAAAA,IAAI,EAAE,QADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAjBgC,EAqBhC;AACEoC,EAAAA,IAAI,EAAE,QADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CArBgC,EAyBhC;AACEoC,EAAAA,IAAI,EAAE,KADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAzBgC,EA6BhC;AACEoC,EAAAA,IAAI,EAAE,UADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CA7BgC,CAA3B;AAmCP,OAAO,MAAMqC,YAAY,GAAG,CAC1B;AACED,EAAAA,IAAI,EAAE,MADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAD0B,EAK1B;AACEoC,EAAAA,IAAI,EAAE,QADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAL0B,CAArB;AAWP,OAAO,MAAMsC,eAAe,GAAG,CAC7B;AACEF,EAAAA,IAAI,EAAE,wBADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAD6B,EAK7B;AACEoC,EAAAA,IAAI,EAAE,iBADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAL6B,EAS7B;AACEoC,EAAAA,IAAI,EAAE,KADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAT6B,EAa7B;AACEoC,EAAAA,IAAI,EAAE,aADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAb6B,CAAxB;AAmBP,OAAO,MAAMuC,gBAAgB,GAAG,CAC9B;AACEH,EAAAA,IAAI,EAAE,UADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAD8B,EAK9B;AACEoC,EAAAA,IAAI,EAAE,eADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAL8B,EAS9B;AACEoC,EAAAA,IAAI,EAAE,YADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAT8B,EAa9B;AACEoC,EAAAA,IAAI,EAAE,SADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAb8B,EAiB9B;AACEoC,EAAAA,IAAI,EAAE,SADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAjB8B,CAAzB;AAuBP,OAAO,MAAMwC,mBAAmB,GAAG,CACjC;AACEJ,EAAAA,IAAI,EAAE,MADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CADiC,EAKjC;AACEoC,EAAAA,IAAI,EAAE,KADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CALiC,EASjC;AACEoC,EAAAA,IAAI,EAAE,KADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CATiC,EAajC;AACEoC,EAAAA,IAAI,EAAE,KADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAbiC,EAiBjC;AACEoC,EAAAA,IAAI,EAAE,kBADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAjBiC,EAqBjC;AACEoC,EAAAA,IAAI,EAAE,gBADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CArBiC,EAyBjC;AACEoC,EAAAA,IAAI,EAAE,KADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAzBiC,EA6BjC;AACEoC,EAAAA,IAAI,EAAE,QADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CA7BiC,CAA5B;AAmCP,OAAO,MAAMyC,eAAe,GAAG,CAC7B;AACEL,EAAAA,IAAI,EAAE,OADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAD6B,EAK7B;AACEoC,EAAAA,IAAI,EAAE,QADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAL6B,EAS7B;AACEoC,EAAAA,IAAI,EAAE,WADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAT6B,EAa7B;AACEoC,EAAAA,IAAI,EAAE,aADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAb6B,EAiB7B;AACEoC,EAAAA,IAAI,EAAE,UADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAjB6B,CAAxB;AAuBP,OAAO,MAAM0C,mBAAmB,GAAG,CACjC;AACEN,EAAAA,IAAI,EAAE,OADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CADiC,EAKjC;AACEoC,EAAAA,IAAI,EAAE,QADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CALiC,EASjC;AACEoC,EAAAA,IAAI,EAAE,SADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CATiC,EAajC;AACEoC,EAAAA,IAAI,EAAE,WADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAbiC,EAiBjC;AACEoC,EAAAA,IAAI,EAAE,aADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CAjBiC,EAqBjC;AACEoC,EAAAA,IAAI,EAAE,UADR;AAEEpC,EAAAA,KAAK,EAAE;AAFT,CArBiC,CAA5B;AA2BP,OAAO,MAAM2C,YAAY,GAAG,MAAM;AAChC,QAAMC,MAAM,GAAG,UAAf;AACA,QAAMC,WAAW,GAAGzE,MAAM,CAAC,UAAD,EAAawE,MAAb,CAA1B;AACA,QAAME,aAAa,GAAG1E,MAAM,CAAC,UAAD,EAAawE,MAAb,CAA5B;AACA,QAAMG,WAAW,GAAG3E,MAAM,CAAC,UAAD,EAAawE,MAAb,CAA1B;;AAEA,MAAGxE,MAAM,GAAG4E,SAAT,CAAmBH,WAAnB,EAAgCC,aAAhC,CAAH,EAAmD;AACjD,WAAO,SAAP;AACD;;AACD,MAAG1E,MAAM,GAAG4E,SAAT,CAAmBF,aAAnB,EAAkCC,WAAlC,CAAH,EAAmD;AACjD,WAAO,WAAP;AACD;;AACD,SAAO,SAAP;AACD,CAbM;AAeP,OAAO,MAAME,eAAe,GAAIC,IAAD,IAAU;AACvC,QAAMC,WAAW,GAAGjD,OAAO,CAAC,yCAAD,CAA3B;;AACA,QAAMkD,UAAU,GAAGlD,OAAO,CAAC,oCAAD,CAA1B;;AACA,QAAMmD,WAAW,GAAGnD,OAAO,CAAC,kCAAD,CAA3B;;AACA,QAAMoD,SAAS,GAAGpD,OAAO,CAAC,gCAAD,CAAzB;;AAEA,MAAGgD,IAAI,KAAK,QAAZ,EAAqB;AACnB,WAAOE,UAAP;AACD;;AACD,MAAGF,IAAI,KAAK,OAAZ,EAAoB;AAClB,WAAOC,WAAP;AACD;;AACD,MAAGD,IAAI,KAAK,SAAZ,EAAsB;AACpB,WAAOG,WAAP;AACD;;AACD,MAAGH,IAAI,KAAK,QAAZ,EAAqB;AACnB,WAAOI,SAAP;AACD;AACF,CAlBM;AAoBP,OAAO,MAAMC,eAAe,GAAG,CAC7B;AACExD,EAAAA,KAAK,EAAE,iCADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAD6B,EAK7B;AACED,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAL6B,EAS7B;AACED,EAAAA,KAAK,EAAE,gCADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAT6B,CAAxB;AAeP,OAAO,MAAMwD,SAAS,GAAG,CAAE,MAAF,EAAU,aAAV,EAAyB,aAAzB,EAAwC,QAAxC,EAAkD,KAAlD,EAAyD,kBAAzD,EAA6E,SAA7E,EAAwF,cAAxF,EAAwG,QAAxG,CAAlB;AAEP,OAAO,MAAMxB,cAAc,GAAIyB,MAAD,IAAY;AACxC,SAAOlC,MAAM,CAACkC,MAAD,CAAN,CACJjC,OADI,CACI,CADJ,EAEJkC,OAFI,CAEI,mBAFJ,EAEyB,KAFzB,CAAP;AAGD,CAJM,C,CAMP;;AACA,OAAO,MAAMC,sBAAsB,GAAIF,MAAD,IAAY;AAChD,SAAOA,MAAM,CAACC,OAAP,CAAe,uBAAf,EAAwC,KAAxC,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,MAAME,sBAAsB,GAAIH,MAAD,IAAY;AAChD,SAAOA,MAAM,CAACC,OAAP,CAAe,KAAf,EAAqB,EAArB,CAAP;AACD,CAFM;AAIP,OAAO,MAAMG,YAAY,GAAGJ,MAAD,IAAY;AACrC,SAAOlC,MAAM,CAACkC,MAAD,CAAN,CAAeK,cAAf,EAAP;AACD,CAFM;AAIP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACnC,SAAO5F,MAAM,CAAC4F,IAAD,CAAN,CAAapB,MAAb,CAAoB,cAApB,CAAP;AACD,CAFM;AAIP,OAAO,MAAMqB,YAAY,GAAG,KAAG,GAAxB;AAEP,OAAO,MAAMC,mBAAmB,GAAI5F,IAAD,IAAU;AAE3C,QAAMmF,MAAM,GAAG,KAAf;AAEA,QAAMU,QAAQ,GAAKF,YAAY,GAAG,EAAhB,GAAoB,GAAtC,CAJ2C,CAIC;;AAC5C,QAAMG,oBAAoB,GAAIH,YAAY,GAAGR,MAAhB,GAAwB,GAArD,CAL2C,CAKc;;AACzD,QAAMY,cAAc,GAAIJ,YAAY,GAAGR,MAAvC;AAEA,SAAO;AAACU,IAAAA,QAAD;AAAWC,IAAAA,oBAAX;AAAiCC,IAAAA;AAAjC,GAAP;AACD,CATM;AAWP,OAAO,MAAMC,oBAAoB,GAAIhG,IAAD,IAAU;AAE5C,QAAMiG,OAAO,GAAG,IAAIC,IAAJ,CAASlG,IAAI,CAACiG,OAAd,CAAhB;AACA,QAAME,SAAS,GAAG,IAAID,IAAJ,CAASlG,IAAI,CAACmG,SAAd,CAAlB;AACA,MAAIC,gBAAgB,GAAGH,OAAO,CAACI,OAAR,KAAoBF,SAAS,CAACE,OAAV,EAA3C;AACA,MAAIC,gBAAgB,GAAGF,gBAAgB,IAAI,OAAO,IAAP,GAAc,EAAlB,CAAvC;AACA,MAAIG,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CAAWL,gBAAgB,IAAI,OAAO,IAAP,GAAc,EAAd,GAAiB,CAArB,CAA3B,CAAxB;AACA,MAAIM,kBAAkB,GAAGN,gBAAgB,IAAI,OAAO,IAAP,GAAc,EAAd,GAAiB,CAAjB,GAAmB,CAAvB,CAAzC;AACA,MAAIO,mBAAmB,GAAGP,gBAAgB,IAAI,OAAO,IAAP,IAAe,KAAG,CAAH,GAAK,CAAL,GAAO,CAAtB,CAAJ,CAA1C;AACA,MAAIQ,sBAAsB,GAAGR,gBAAgB,IAAI,OAAO,IAAP,IAAe,KAAG,CAAH,GAAK,CAAL,GAAO,CAAtB,CAAJ,CAA7C;AACA,MAAIS,oBAAoB,GAAGT,gBAAgB,IAAI,OAAO,IAAP,IAAe,KAAG,CAAH,GAAK,CAAL,GAAO,CAAtB,CAAJ,CAA3C;;AAEA,QAAMU,WAAW,GAAIC,SAAD,IAAe;AACjC,YAAQA,SAAR;AACE,WAAK,OAAL;AACE,eAAOT,gBAAP;;AACF,WAAK,QAAL;AACE,eAAOC,iBAAP;;AACF,WAAK,SAAL;AACE,eAAOG,kBAAP;;AACF,WAAK,WAAL;AACE,eAAOC,mBAAP;;AACF,WAAK,aAAL;AACE,eAAOC,sBAAP;;AACF,WAAK,UAAL;AACE,eAAOC,oBAAP;;AACF;AACE;AAdJ;AAgBD,GAjBD;;AAmBA,QAAMG,aAAa,GAAGhH,IAAI,CAACiH,MAAL,GAAaH,WAAW,CAAC9G,IAAI,CAAC+G,SAAN,CAA9C;AAEA,SAAOC,aAAP;AACD,CAlCM;AAoCP,OAAO,MAAME,iBAAiB,GAAG,CAAClH,IAAD,EAAO2F,YAAP,KAAwB;AACvD,QAAMwB,SAAS,GAAGrH,MAAM,CAACE,IAAI,CAACmG,SAAN,CAAxB;AACA,QAAMiB,OAAO,GAAGtH,MAAM,CAACE,IAAI,CAACiG,OAAN,CAAtB;AAEA,QAAMoB,QAAQ,GAAGD,OAAO,CAACE,IAAR,CAAaH,SAAb,EAAwB,MAAxB,CAAjB;AACA,QAAMI,IAAI,GAAGzH,MAAM,GAAG0H,UAAT,KAAwB,GAAxB,GAA8B,GAA3C;AAEA,QAAM3B,QAAQ,GAAG4B,QAAQ,CAACzH,IAAI,CAACiH,MAAN,EAAc,EAAd,CAAR,IAA6BtB,YAAY,GAAC,GAA1C,KAAkD0B,QAAQ,GAACE,IAA3D,CAAjB;AACA,QAAMG,kBAAkB,GAAG7B,QAAQ,GAAG4B,QAAQ,CAACzH,IAAI,CAACiH,MAAN,EAAc,EAAd,CAA9C;AAEA,SAAOS,kBAAP;AACD,CAXM;AAaP,OAAO,MAAMC,qBAAqB,GAAI3H,IAAD,IAAU;AAC7C,QAAMmH,SAAS,GAAGrH,MAAM,CAACE,IAAI,CAACmG,SAAN,CAAxB;AACA,QAAMiB,OAAO,GAAGtH,MAAM,CAACE,IAAI,CAACiG,OAAN,CAAtB;AAEA,QAAMoB,QAAQ,GAAGD,OAAO,CAACE,IAAR,CAAaH,SAAb,EAAwB,MAAxB,CAAjB;;AAEA,UAAQnH,IAAI,CAAC+G,SAAb;AACE,SAAK,OAAL;AACE,UAAGM,QAAQ,GAAG,CAAd,EAAgB;AACd,eAAO,+BAAP;AACD;;AACD;;AACF,SAAK,QAAL;AACE,UAAGA,QAAQ,GAAG,CAAd,EAAgB;AACd,eAAO,gCAAP;AACD;;AACD;;AAEF,SAAK,SAAL;AACE,UAAGA,QAAQ,GAAG,EAAd,EAAiB;AACf,eAAO,iCAAP;AACD;;AACD;;AAEF,SAAK,WAAL;AACE,UAAGA,QAAQ,GAAG,EAAd,EAAiB;AACf,eAAO,mCAAP;AACD;;AACD;;AAEF,SAAK,aAAL;AACE,UAAGA,QAAQ,GAAG,GAAd,EAAkB;AAChB,eAAO,mCAAP;AACD;;AACD;;AAEF,SAAK,UAAL;AACE,UAAGA,QAAQ,GAAG,GAAd,EAAkB;AAChB,eAAO,gCAAP;AACD;;AACD;;AACF;AACE;AApCJ;AAsCD,CA5CM;AA8CP,OAAO,MAAMO,UAAU,GAAIlG,KAAD,IAAW;AACnC,MAAG+F,QAAQ,CAAC/F,KAAD,EAAQ,EAAR,CAAR,GAAsB,CAAzB,EAA4B,OAAO,KAAP;AAC5B,MAAG+F,QAAQ,CAAC/F,KAAD,EAAQ,EAAR,CAAR,KAAwB,CAA3B,EAA8B,OAAO,SAAP;AAC9B,SAAO,IAAP;AACD,CAJM;AAMP,OAAO,MAAMmG,aAAa,GAAIC,GAAD,IAAS;AACpC,MAAIC,SAAS,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAeC,GAAf,EAAhB;;AACA,MAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,MAAvB,EAA+B,KAA/B,EAAsC,KAAtC,EAA6C,KAA7C,EAAoD,KAApD,EAA4DC,QAA5D,CAAqEH,SAArE,CAAH,EAAoF;AAClF,WAAO,OAAP;AACD;;AACD,MAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,KAAvB,EAA8BG,QAA9B,CAAuCH,SAAvC,CAAH,EAAsD;AACpD,WAAO,MAAP;AACD;;AACD,SAAO,MAAP;AAED,CAVM;AAYP,OAAO,MAAMI,UAAU,GAAIzC,IAAD,IAAU;AAElC,MAAG5F,MAAM,GAAGwE,MAAT,CAAgB,YAAhB,MAAkCoB,IAArC,EAA2C;AACzC,WAAO,OAAP;AACD,GAFD,MAGK,IAAG5F,MAAM,GAAGsI,QAAT,CAAkB,CAAlB,EAAqB,MAArB,EAA6B9D,MAA7B,CAAoC,YAApC,MAAsDoB,IAAzD,EAA+D;AAClE,WAAO,WAAP;AACD;;AACC,SAAOA,IAAP;AACH,CATM;AAWP,OAAO,MAAM2C,SAAS,GAAG,CAACC,KAAD,EAAQC,SAAR,KAAsB;AAC7C,SAAOD,KAAK,CAACE,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACC,UAAL,KAAoBH,SAAvC,CAAP;AACD,CAFM;AAIP,OAAO,MAAMI,WAAW,GAAIC,aAAD,IAAmB;AAC5C,QAAMC,gBAAgB,GAAGxH,MAAM,CAACE,IAAP,CAAYqH,aAAZ,CAAzB;;AACA,MAAGC,gBAAgB,CAACvI,MAAjB,GAA0B,CAA7B,EAAgC;AAC9B,SAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyI,gBAAgB,CAACvI,MAArC,EAA6CF,CAAC,EAA9C,EAAkD;AAChD,YAAM0I,QAAQ,GAAGF,aAAa,CAACC,gBAAgB,CAACzI,CAAD,CAAjB,CAAb,CAAmCoI,IAAnC,CAAwCO,IAAI,IAAI,CAACA,IAAI,CAACC,IAAtD,CAAjB;AACA,aAAOF,QAAP;AACD;AACF;;AACD;AACD,CATM;AAWP,OAAO,MAAMG,aAAa,GAAIC,OAAD,IAAa;AACzC,QAAMC,OAAO,GAAGD,OAAO,CAACzF,GAAR,CAAYsF,IAAI,IAAI;AACjC,WAAO;AAAEjF,MAAAA,IAAI,EAAEiF,IAAR;AAAcrH,MAAAA,KAAK,EAAEqH,IAAI,CAACK,WAAL;AAArB,KAAP;AACD,GAFc,CAAhB;AAGC,SAAOD,OAAP;AACD,CALM;AAOP,OAAO,MAAME,gBAAgB,GAAG,CAACC,OAAD,EAAUC,iBAAV,EAA6B1D,QAA7B,EAAuC2D,UAAvC,KAAsD;AACpF,MAAIC,OAAJ;AACA,MAAIC,UAAU,GAAI,CAAC,CAAAF,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEG,OAAZ,IAAsBJ,iBAAvB,KAA0CC,UAA1C,aAA0CA,UAA1C,uBAA0CA,UAAU,CAAEG,OAAtD,CAAD,GAAgE,GAAjF,CAFoF,CAEE;;AACtF,QAAMC,YAAY,GAAIF,UAAU,GAAC,GAAZ,IAAmBF,UAAnB,aAAmBA,UAAnB,uBAAmBA,UAAU,CAAEK,eAA/B,CAArB,CAHoF,CAGf;;AAErE,MAAI,CAAAL,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEG,OAAZ,MAAuBH,UAAvB,aAAuBA,UAAvB,uBAAuBA,UAAU,CAAEM,YAAnC,KAAmDhK,MAAM,GAAGwH,IAAT,CAAcxH,MAAM,CAAC0J,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEvD,OAAb,CAApB,EAA2C,MAA3C,KAAsD,CAA7G,EAAiH;AAC/GwD,IAAAA,OAAO,GAAIH,OAAO,GAAC,GAAT,GAAgBM,YAA1B;AACD,GAFD,MAGK;AACHH,IAAAA,OAAO,GAAG,CAAV;AACD;;AACD,QAAMM,WAAW,GAAGR,iBAAiB,KAAK,GAAtB,GAA4B,CAA5B,GAAkCA,iBAAiB,GAAGE,OAArB,GAAgCG,YAArF;AACA,SAAO;AAAEH,IAAAA,OAAF;AAAWM,IAAAA;AAAX,GAAP;AACD,CAbM;AAeP,OAAO,MAAMC,4BAA4B,GAAG,CAAC7E,MAAD,EAASwE,OAAT,EAAkBM,OAAlB,KAA8B;AACxE,SAAO9E,MAAM,KAAK,GAAX,GAAiB,CAAjB,GAAwBA,MAAM,GAACwE,OAAR,GAAiB,GAAlB,GAAuB,GAAxB,GAA+BM,OAA3D;AACD,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAG,CAAC,aAAD,EACzB,UADyB,EAEzB,0BAFyB,EAGzB,gBAHyB,EAIzB,WAJyB,EAKzB,oBALyB,EAMzB,YANyB,EAOzB,aAPyB,EAQzB,kBARyB,EASzB,+CATyB,EAUzB,eAVyB,EAWzB,OAXyB,EAYzB,WAZyB,EAazB,QAbyB,EAczB,eAdyB,EAezB,UAfyB,EAgBzB,sBAhByB,EAiBzB,SAjByB,EAkBzB,gBAlByB,EAmBzB,WAnByB,CAAtB","sourcesContent":["import moment from 'moment';\n\nexport const validateFields = (data, required, noScroll) => {\n  let errors = {};\n\n  for(var i = 0, len = required.length; i < len; i++) {\n    let val = data[required[i]];\n      if(!data.hasOwnProperty(required[i])) {\n          continue;\n      }\n      if(typeof(data[required[i]]) === 'object') {\n        val = JSON.stringify(data[required[i]])\n      }\n      if(val.trim() === \"\" || val.length === 0) {\n          noScroll && window.scrollTo(0, 0);\n          errors[required[i]] = `field is required`\n      }\n      continue;\n  }\n  return errors\n}\n\nexport const isPasswordEqual = (confirm, password) => {\n  let errors = {}\n  if (confirm === password) {\n    return null;\n  }\n  errors.confirm = 'passwords should be equal'\n  return errors;\n}\n\nexport const serializeErrors = (error) => {\n  let errorObject = {};\n      \n  if (error && typeof (error) === \"object\") {\n      error.forEach(error => {\n          errorObject[Object.values(error)[1]] = error[Object.keys(error)[0]]\n      })\n    }\n  return errorObject;\n}\n\nexport const paymentMethods = [\n  {\n    label: 'Debit Card',\n    value: 'card',\n    imgUrl: require(\"#/assets/icons/card-grey.svg\"),\n    imgBlue: require(\"#/assets/icons/card-blue.svg\")\n  },\n  {\n    label: 'Direct Bank Transfer',\n    value: 'transfer',\n    imgUrl: require(\"#/assets/icons/transfer-grey.svg\"),\n    imgBlue: require(\"#/assets/icons/transfer-blue.svg\")\n  },\n]\n\nexport const fundingSource = [\n  {\n    label: 'Debit Card',\n    value: 'card',\n    imgUrl: require(\"#/assets/icons/card-grey.svg\"),\n    imgBlue: require(\"#/assets/icons/card-blue.svg\")\n  },\n  {\n    label: 'Wallet',\n    value: 'wallet',\n    imgUrl: require(\"#/assets/icons/funding-wallet-grey.svg\"),\n    imgBlue: require(\"#/assets/icons/funding-wallet-blue.svg\")\n  },\n]\n\nexport const pieData = {\n  datasets: [{\n    data: [10, 20, 30],\n    backgroundColor: ['#044472', '#3F9ADA', '#9DC6FB']\n  }],\n  labels: [\n    'Termed Investment',\n    'Financial Instruments',\n    'Wallet'\n  ]\n}\n\nexport const pieOptions = {\n  legend: {\n    display: false,\n  },\n  tooltips: {\n    callbacks: {\n      label: function(tooltipItem, data) {\n        let sum = 0;\n        const dataArr = data.datasets[0].data;\n        sum = dataArr.reduce((a, b) => a + b, 0)\n        var label = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index] || '';\n        const itemPercentage = (label/sum) * 100;\n        // var text = data.labels[tooltipItem.index];\n        return `${Number(itemPercentage).toFixed(2)}%`;\n      }\n    }\n  }\n}\n\nexport const portfolioPieData = {\n  datasets: [{\n    data: [1000, 20500, 30],\n    backgroundColor: ['#044472', '#3F9ADA', '#9DC6FB']\n  }],\n  labels: [\n    'Termed Investment',\n    'Financial Instruments',\n    'Wallet'\n  ]\n}\n\nexport const portfolioPie = (wallet, termed, financial) => {\n  const data = {\n    Wallet: wallet,\n    'Termed Investment': termed\n  }\n  const labels = [\n    'Wallet',\n    'Termed Investment',\n  ]\n  return {\n    datasets: [{\n      data: [wallet, termed],\n      backgroundColor: ['#044472', '#3F9ADA', '#9DC6FB']\n    }],\n    labels: labels.map((label) => `${label}: ${formatCurrency(data[label])}`)\n\n  }\n}\n\nexport const portfolioPieOptions = {\n  legend: {\n    display: false\n  },\n  tooltips: {\n    callbacks: {\n      label: function(tooltipItem, data) {\n        let sum = 0;\n        const dataArr = data.datasets[0].data;\n        sum = dataArr.reduce((a, b) => a + b, 0)\n        var label = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index] || '';\n        const itemPercentage = (label/sum) * 100;\n        var text = data.labels[tooltipItem.index];\n        return `${text}: (${Number(itemPercentage).toFixed(2)}%)`;\n      }\n    }\n  }\n}\n\nexport const relationshipOption = [\n  { \n    name: 'Brother',\n    value: 'brother',\n  },\n  { \n    name: 'Father',\n    value: 'father',\n  },\n  { \n    name: 'Mother',\n    value: 'mother',\n  },\n  { \n    name: 'Sister',\n    value: 'sister',\n  },\n  { \n    name: 'Friend',\n    value: 'friend',\n  },\n  { \n    name: 'Spouse',\n    value: 'spouse',\n  },\n  { \n    name: 'Son',\n    value: 'son',\n  },\n  { \n    name: 'Daughter',\n    value: 'daughter',\n  }\n]\n\nexport const genderOption = [\n  {\n    name: 'Male',\n    value: 'male',\n  },\n  {\n    name: 'Female',\n    value: 'female',\n  }\n]\n\nexport const documentOptions = [\n  {\n    name: 'International passport',\n    value: 'international_passport',\n  },\n  {\n    name: 'Drivers licence',\n    value: 'drivers_licence',\n  },\n  {\n    name: 'PVC',\n    value: 'pvc',\n  },\n  {\n    name: 'National ID',\n    value: 'national_id',\n  },\n]\n\nexport const employmentOption = [\n  {\n    name: 'Employed',\n    value: 'employed',\n  },\n  {\n    name: 'Self employed',\n    value: 'self-employed',\n  },\n  {\n    name: 'Unemployed',\n    value: 'unemployed',\n  },\n  {\n    name: 'Student',\n    value: 'student',\n  },\n  {\n    name: 'Retired',\n    value: 'retired',\n  }\n]\n\nexport const qualificationOption = [\n  {\n    name: 'SSCE',\n    value: 'ssce',\n  },\n  {\n    name: 'NCE',\n    value: 'nce',\n  },\n  {\n    name: 'OND',\n    value: 'ond',\n  },\n  {\n    name: 'HND',\n    value: 'hnd',\n  },\n  {\n    name: 'Bachelors degree',\n    value: 'bachelors',\n  },\n  {\n    name: 'Masters degree',\n    value: 'masters',\n  },\n  {\n    name: 'PhD',\n    value: 'phd',\n  },\n  {\n    name: 'Others',\n    value: 'others',\n  },\n]\n\nexport const frequencyOption = [\n  {\n    name: 'Daily',\n    value: 'daily',\n  },\n  {\n    name: 'Weekly',\n    value: 'weekly',\n  },\n  {\n    name: 'Quarterly',\n    value: 'quarterly',\n  },\n  {\n    name: 'Bi-annually',\n    value: 'bi-annually',\n  },\n  {\n    name: 'Annually',\n    value: 'annually',\n  }\n]\n\nexport const investmentFrequency = [\n  {\n    name: 'Daily',\n    value: 'daily',\n  },\n  {\n    name: 'Weekly',\n    value: 'weekly',\n  },\n  {\n    name: 'Monthly',\n    value: 'monthly',\n  },\n  {\n    name: 'Quarterly',\n    value: 'quarterly',\n  },\n  {\n    name: 'Bi-annually',\n    value: 'bi-annually',\n  },\n  {\n    name: 'Annually',\n    value: 'annually',\n  }\n]\n\nexport const getTimeOfDay = () => {\n  const format = 'hh:mm:ss';\n  const morningTime = moment('00:00:00', format);\n  const afternoonTime = moment('12:00:00', format);\n  const eveningTime = moment('18:00:00', format);\n\n  if(moment().isBetween(morningTime, afternoonTime)) {\n    return 'morning'\n  }\n  if(moment().isBetween(afternoonTime, eveningTime)) {\n    return 'afternoon'\n  }\n  return 'evening';\n}\n\nexport const transactionType = (type) => {\n  const withdrawImg = require('#/assets/icons/funds-withdrawn-icon.svg')\n  const depositImg = require('#/assets/icons/funds-deposited.svg')\n  const investedImg = require('#/assets/icons/invested-icon.svg')\n  const failedImg = require('#/assets/icons/failed-icon.svg')\n\n  if(type === 'credit'){\n    return depositImg\n  }\n  if(type === 'debit'){\n    return withdrawImg\n  }\n  if(type === 'service'){\n    return investedImg\n  }\n  if(type === 'failed'){\n    return failedImg\n  }\n}\n\nexport const questionOptions = [\n  {\n    label: 'A Wedding with my dream partner',\n    value: 'wedding',\n  },\n  {\n    label: 'A new car',\n    value: 'car',\n  },\n  {\n    label: 'Acquire a new/my next property',\n    value: 'property',\n  },\n]\n\nexport const interests = [ 'News', 'Investments', 'Socializing', 'Sports', 'Art', 'Self-development', 'Fashion', 'Food & Drink', 'others'];\n\nexport const formatCurrency = (amount) => {\n  return Number(amount)\n    .toFixed(2)\n    .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n};\n\n//adds the commas\nexport const formatStringToCurrency = (amount) => {\n  return amount.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \"$&,\");\n};\n\n// removes commas\nexport const formatCurrencyToString = (amount) => {\n  return amount.replace(/\\,/g,'');\n}\n\nexport const formatAmount= (amount) => {\n  return Number(amount).toLocaleString()\n};\n\nexport const convertDate = (date) => {\n  return moment(date).format(\"DD MMMM YYYY\");\n};\n\nexport const interestRate = 10/100;\n\nexport const interestCalculation = (data) => {\n\n  const amount = 10000;\n\n  const interest = ((interestRate * 30)/365); //use when there's an end date\n  const interestAccruedDaily = (interestRate * amount)/365 //when there is no enddate but there is an amount\n  const interestActual = (interestRate * amount);\n\n  return {interest, interestAccruedDaily, interestActual };\n}\n\nexport const calculateAmountToPay = (data) => {\n\n  const endDate = new Date(data.endDate);\n  const startDate = new Date(data.startDate);\n  var DifferenceInTime = endDate.getTime() - startDate.getTime();\n  var DifferenceInDays = DifferenceInTime / (1000 * 3600 * 24); \n  var DifferenceInWeeks = Math.round(DifferenceInTime / (1000 * 3600 * 24*7)); \n  var DifferenceInMonths = DifferenceInTime / (1000 * 3600 * 24*7*4);\n  var DifferenceInQuarter = DifferenceInTime / (1000 * 3600 * (24*7*4*3));\n  var DifferenceInBiAnnually = DifferenceInTime / (1000 * 3600 * (24*7*4*6));\n  var DifferenceInAnnually = DifferenceInTime / (1000 * 3600 * (24*7*4*6));\n\n  const getTimeLine = (frequency) => {\n    switch (frequency) {\n      case 'daily':\n        return DifferenceInDays\n      case 'weekly':\n        return DifferenceInWeeks\n      case 'monthly':\n        return DifferenceInMonths\n      case 'quarterly':\n        return DifferenceInQuarter\n      case 'bi-annually':\n        return DifferenceInBiAnnually\n      case 'annually':\n        return DifferenceInAnnually\n      default:\n        break;\n    }\n  }\n\n  const depositAmount = data.target/ getTimeLine(data.frequency)\n\n  return depositAmount;\n}\n\nexport const calculateInterest = (data, interestRate) => {\n  const startTime = moment(data.startDate)\n  const endTime = moment(data.endDate);\n\n  const noOfDays = endTime.diff(startTime, 'days')\n  const year = moment().isLeapYear() ? 366 : 365;\n\n  const interest = parseInt(data.target, 10) * (interestRate/100) * (noOfDays/year);\n  const calculatedInterest = interest + parseInt(data.target, 10);\n\n  return calculatedInterest;\n}\n\nexport const verifyFrequencyPeriod = (data) => {\n  const startTime = moment(data.startDate)\n  const endTime = moment(data.endDate);\n\n  const noOfDays = endTime.diff(startTime, 'days')\n\n  switch (data.frequency) {\n    case 'daily':\n      if(noOfDays < 1){\n        return 'date range is not up to a day'\n      }\n      break;\n    case 'weekly':\n      if(noOfDays < 7){\n        return 'date range is not up to a week'\n      }\n      break;\n\n    case 'monthly':\n      if(noOfDays < 30){\n        return 'date range is not up to a month'\n      }\n      break;\n\n    case 'quarterly':\n      if(noOfDays < 90){\n        return 'date range is not up to a quarter'\n      }\n      break;\n\n    case 'bi-annually':\n      if(noOfDays < 180){\n        return 'date range is not up to bi-annual'\n      }\n      break;\n\n    case 'annually':\n      if(noOfDays < 365){\n        return 'date range is not up to a year'\n      }\n      break;\n    default:\n      break;\n  }\n}\n\nexport const isNegative = (value) => {\n  if(parseInt(value, 10) > 0) return false;\n  if(parseInt(value, 10) === 0) return 'neutral';\n  return true;\n}\n\nexport const checkFileType = (url) => {\n  var extension = url.split('.').pop(); \n  if(['jpg', 'JPG', 'JPEG', 'jpeg', 'png', 'PNG', 'GIF', 'svg' ].includes(extension)) {\n    return 'image';\n  }\n  if(['pdf', 'PDF', 'docx', 'xls'].includes(extension)) {\n    return 'file';\n  }\n  return 'file';\n\n}\n\nexport const formatDate = (date) => {\n\n  if(moment().format('YYYY-MM-DD') === date) {\n    return 'Today';\n  }\n  else if(moment().subtract(1, 'days').format('YYYY-MM-DD') === date) {\n    return 'Yesterday';\n  }\n    return date;\n}\n\nexport const checkLike = (likes, commentId) => {\n  return likes.find(like => like.comment_id === commentId);\n}\n\nexport const checkUnread = (notifications) => {\n  const notificationKeys = Object.keys(notifications);\n  if(notificationKeys.length > 0) {\n    for (let i = 0; i < notificationKeys.length; i++) {\n      const findItem = notifications[notificationKeys[i]].find(item => !item.read)\n      return findItem;\n    }\n  }\n  return;\n}\n\nexport const refineOptions = (options) => {\n const refined = options.map(item => {\n    return { name: item, value: item.toLowerCase() }\n  })\n  return refined;\n}\n\nexport const calculatePenalty = (percent, liquidationAmount, interest, investment) => {\n  let penalty;\n  let percentage = ((investment?.balance - liquidationAmount)/investment?.balance)*100; //to get the percentage of the liquidated amount\n  const finalAccrued = (percentage/100) * investment?.accruedInterest; // to get the final accrued interest percentage\n\n  if (investment?.balance >= investment?.targetAmount || moment().diff(moment(investment?.endDate), 'days') <= 0 ) {\n    penalty = (percent/100) * finalAccrued;\n  }\n  else {\n    penalty = 0;\n  }\n  const amountToGet = liquidationAmount === '0' ? 0 : ((liquidationAmount - penalty) + finalAccrued);\n  return { penalty, amountToGet };\n}\n\nexport const calculateLiquidationInterest = (amount, balance, accrued) => {\n  return amount === '0' ? 0 : (((amount/balance)*100)/100) * accrued\n}\n\nexport const industiesList = [\"Agriculture\",\n    \"Commerce\",\n    \"Construction/Real Estate\",\n    \"Consumer Goods\",\n    \"Education\",\n    \"Financial Services\",\n    \"Healthcare\",\n    \"Hospitality\",\n    \"Industrial Goods\",\n    \"Information & Communications Technology (ICT)\",\n    \"Manufacturing\",\n    \"Media\",\n    \"Oil & Gas\",\n    \"Postal\",\n    \"Public Sector\",\n    \"Services\",\n    \"Shipping & Logistics\",\n    \"Tourism\",\n    \"Transportation\",\n    \"Utilities\"];"]},"metadata":{},"sourceType":"module"}