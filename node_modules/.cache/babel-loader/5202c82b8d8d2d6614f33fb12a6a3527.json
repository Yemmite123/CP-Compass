{"ast":null,"code":"var _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Withdraw/index.js\";\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Back from '#/components/Back';\nimport Card from '#/components/Card';\nimport Textbox from '#/components/Textbox';\nimport Modal from '#/components/Modal';\nimport PinInput from '#/components/PinInput';\nimport Alert from '#/components/Alert';\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport { getAllBanks } from \"#/store/profile/actions\";\nimport { initializeWithdraw, confirmWithdraw } from \"#/store/wallet/actions\";\nimport actionTypes from \"#/store/wallet/actionTypes\";\nimport { validateFields, serializeErrors, formatCurrency, formatStringToCurrency, formatCurrencyToString } from '#/utils';\nimport './style.scss';\n\nclass Withdraw extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      amount: '',\n      pin: {},\n      errors: null,\n      showModal: false,\n      showComfirmationModal: false,\n      pinError: null\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n\n      if (name === 'amount') {\n        this.setState({\n          errors: null\n        });\n        return this.setState({\n          [name]: formatCurrencyToString(value)\n        }, () => {\n          if (isNaN(this.state.amount)) {\n            return this.setState({\n              errors: {\n                amount: 'enter a valid number'\n              }\n            });\n          }\n        });\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        errors: null\n      });\n      const data = this.state;\n      const required = ['amount'];\n      const errors = validateFields(data, required);\n\n      if (Object.keys(errors).length > 0) {\n        return this.setState({\n          errors\n        });\n      }\n\n      this.toggleConfirmationModal();\n    };\n\n    this.handleConfirmWithdraw = () => {\n      this.props.initializeWithdraw({\n        amount: formatCurrencyToString(this.state.amount),\n        currency: 'NGN'\n      }).then(data => {\n        this.toggleConfirmationModal();\n        this.toggleModal();\n      });\n    };\n\n    this.handleWithdraw = e => {\n      e.preventDefault();\n      this.setState({\n        pinError: null\n      });\n      const {\n        pin: {\n          value1,\n          value2,\n          value3,\n          value4\n        }\n      } = this.state;\n      const token = [value1, value2, value3, value4].join('').trim();\n\n      if (token.length < 4) {\n        return this.setState({\n          pinError: 'enter a valid pin'\n        });\n      }\n\n      this.props.confirmWithdraw({\n        pin: token\n      }, this.props.history);\n    };\n\n    this.handlePin = pin => {\n      this.setState({\n        pin\n      });\n    };\n\n    this.toggleModal = () => {\n      this.setState(prevState => ({\n        showModal: !prevState.showModal\n      }));\n    };\n\n    this.toggleConfirmationModal = () => {\n      this.setState(prevState => ({\n        showComfirmationModal: !prevState.showComfirmationModal\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllBanks();\n  }\n\n  render() {\n    const {\n      amount,\n      errors,\n      showModal,\n      pinError,\n      showComfirmationModal\n    } = this.state;\n    const {\n      error,\n      bankDetails,\n      banks,\n      loading,\n      confirmLoading,\n      confirm,\n      walletDetails,\n      withdrawalFee\n    } = this.props;\n    const bank = bankDetails && banks && banks.find(bank => bank.code === bankDetails.bankCode);\n    const errorObject = serializeErrors(error);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"withdraw-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, showComfirmationModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleConfirmationModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-deep-blue text-medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, \"Review Withdrawal\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-small text-grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \"Your withdrawal of \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"text-black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 36\n      }\n    }, \"\\u20A6\", amount), \", is subject to a \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"text-black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 100\n      }\n    }, \"\\u20A6\", formatCurrency(withdrawalFee && withdrawalFee[1].current)), \" withdrawal charge. So, you will receive \", /*#__PURE__*/React.createElement(\"b\", {\n      className: \"text-black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 242\n      }\n    }, \"\\u20A6\", formatCurrency(amount - (withdrawalFee && withdrawalFee[1].current))), \" into your account.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-deep-blue text-medium mr-2 mb-0 cursor-pointer\",\n      onClick: this.toggleConfirmationModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm\",\n      onClick: this.handleConfirmWithdraw,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, \"Proceed\", loading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }))), error && typeof error === 'string' && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 52\n      }\n    }, error)), showModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, \"Enter Transaction PIN\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-0 text-grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, \"confirm your withdrawal of\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 18\n      }\n    }, \"N\", formatCurrency(amount))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-100 ml-auto mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PinInput, {\n      onChange: this.handlePin,\n      error: pinError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary btn-block mt-3\",\n      onClick: this.handleWithdraw,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"Confirm Withdrawal\", confirmLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-deep-blue mt-2\",\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, \"Cancel Withdrawal\"), confirm && /*#__PURE__*/React.createElement(Alert, {\n      alert: {\n        type: \"success\",\n        message: confirm.message\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 27\n      }\n    }), pinError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 28\n      }\n    }, pinError), error && typeof error === 'string' && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 54\n      }\n    }, error))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Back, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-medium text-deep-blue \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \"Withdraw Funds from Wallet\"))), /*#__PURE__*/React.createElement(Card, {\n      classes: \"mt-4 col col-md-9 card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, \"How much do you want to withdraw from your wallet?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Textbox, {\n      onChange: this.handleChange,\n      type: \"text\",\n      label: \"Amount\",\n      placeholder: \"Amount\",\n      name: \"amount\",\n      value: formatStringToCurrency(amount),\n      error: errors ? errors.amount : errorObject && errorObject['amount'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    }, \"Available balance \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 63\n      }\n    }, \"\\u20A6 \", walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : 0))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, \"Withdrawing funds to your local bank account\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, \"Account number\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, bankDetails && bankDetails.accountNumber ? bankDetails.accountNumber : 'No account number added')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, \"Bank\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, bank && bank.name ? bank.name : 'No bank specified'))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary btn-md-block\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }, \"Proceed\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  var _banks$banks, _config$data;\n\n  const {\n    app: {\n      profile: {\n        userProfile: {\n          data\n        },\n        banks\n      },\n      wallet: {\n        error,\n        data: withdrawData,\n        confirm,\n        walletDetails\n      },\n      config\n    }\n  } = state;\n  return {\n    loading: getActionLoadingState(state, actionTypes.INITIALIZE_WITHDRAWAL_REQUEST),\n    confirmLoading: getActionLoadingState(state, actionTypes.CONFIRM_WITHDRAWAL_REQUEST),\n    bankDetails: data === null || data === void 0 ? void 0 : data.bankInfo,\n    banks: ((_banks$banks = banks.banks) === null || _banks$banks === void 0 ? void 0 : _banks$banks.data) && banks.banks.data.banks,\n    error,\n    withdrawData,\n    confirm,\n    walletDetails,\n    withdrawalFee: config === null || config === void 0 ? void 0 : (_config$data = config.data) === null || _config$data === void 0 ? void 0 : _config$data.systemConfig\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllBanks: () => dispatch(getAllBanks()),\n    initializeWithdraw: payload => dispatch(initializeWithdraw(payload)),\n    confirmWithdraw: (payload, history) => dispatch(confirmWithdraw(payload, history))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Withdraw));","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Withdraw/index.js"],"names":["React","withRouter","connect","Back","Card","Textbox","Modal","PinInput","Alert","getActionLoadingState","getAllBanks","initializeWithdraw","confirmWithdraw","actionTypes","validateFields","serializeErrors","formatCurrency","formatStringToCurrency","formatCurrencyToString","Withdraw","Component","state","amount","pin","errors","showModal","showComfirmationModal","pinError","handleChange","event","name","value","target","setState","isNaN","handleSubmit","e","preventDefault","data","required","Object","keys","length","toggleConfirmationModal","handleConfirmWithdraw","props","currency","then","toggleModal","handleWithdraw","value1","value2","value3","value4","token","join","trim","history","handlePin","prevState","componentDidMount","render","error","bankDetails","banks","loading","confirmLoading","confirm","walletDetails","withdrawalFee","bank","find","code","bankCode","errorObject","current","type","message","wallet","NGN","accountNumber","mapStateToProps","app","profile","userProfile","withdrawData","config","INITIALIZE_WITHDRAWAL_REQUEST","CONFIRM_WITHDRAWAL_REQUEST","bankInfo","systemConfig","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Back from '#/components/Back';\nimport Card from '#/components/Card';\nimport Textbox from '#/components/Textbox';\nimport Modal from '#/components/Modal';\nimport PinInput from '#/components/PinInput';\nimport Alert from '#/components/Alert';\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport { getAllBanks } from \"#/store/profile/actions\";\nimport { initializeWithdraw, confirmWithdraw } from \"#/store/wallet/actions\";\nimport actionTypes from \"#/store/wallet/actionTypes\";\nimport { validateFields, serializeErrors, formatCurrency, formatStringToCurrency, formatCurrencyToString } from '#/utils';\nimport './style.scss';\n\nclass Withdraw extends React.Component {\n\n  state = {\n    amount: '',\n    pin: {},\n    errors: null,\n    showModal: false,\n    showComfirmationModal: false,\n    pinError: null\n  }\n\n  componentDidMount() {\n    this.props.getAllBanks();\n  }\n\n\n  handleChange = (event) => {\n    const { name, value } = event.target\n    if(name === 'amount') {\n      this.setState({ errors: null});\n        return this.setState({ [name]: formatCurrencyToString(value)}, ()=> {\n          if(isNaN(this.state.amount)) {\n            return this.setState({ errors: { amount: 'enter a valid number' } })\n          }\n        });\n      }\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.setState({ errors: null });\n\n    const data = this.state;\n    const required = ['amount'];\n    const errors = validateFields(data, required)\n\n    if (Object.keys(errors).length > 0) {\n      return this.setState({ errors });\n    }\n\n    this.toggleConfirmationModal();\n  }\n\n  handleConfirmWithdraw = () => {\n    this.props.initializeWithdraw({ amount: formatCurrencyToString(this.state.amount), currency: 'NGN'})\n      .then(data => {\n      this.toggleConfirmationModal();\n      this.toggleModal();\n      })\n  }\n\n  handleWithdraw = (e) => {\n    e.preventDefault();\n    this.setState({ pinError: null });\n    const { pin: { value1, value2, value3, value4 } } = this.state\n\n    const token = [value1, value2, value3, value4].join('').trim();\n    if (token.length < 4) {\n      return this.setState({ pinError: 'enter a valid pin' })\n    }\n\n    this.props.confirmWithdraw({ pin: token }, this.props.history)\n  }\n\n  handlePin = (pin) => {\n    this.setState({ pin })\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({ showModal: !prevState.showModal }))\n  }\n\n  toggleConfirmationModal = () => {\n    this.setState(prevState => ({ showComfirmationModal: !prevState.showComfirmationModal }))\n  }\n\n  render() {\n    const { amount, errors, showModal, pinError, showComfirmationModal } = this.state;\n    const { error, bankDetails, banks, loading, confirmLoading, confirm, walletDetails, withdrawalFee } = this.props;\n    const bank = bankDetails && banks && banks.find(bank => bank.code === bankDetails.bankCode);\n\n    const errorObject = serializeErrors(error);\n    return (\n      <div className=\"withdraw-page\">\n        {showComfirmationModal &&\n          <Modal onClose={this.toggleConfirmationModal}>\n            <div className=\"text-left\">\n              <h3 className=\"text-deep-blue text-medium\">Review Withdrawal</h3>\n              <p className=\"text-small text-grey\">\n                Your withdrawal of <b className=\"text-black\">&#x20A6;{amount}</b>, is subject to a <b className=\"text-black\">&#x20A6;{formatCurrency(((withdrawalFee && withdrawalFee[1].current)))}</b> withdrawal charge. So, you will receive <b className=\"text-black\">₦{formatCurrency(amount - (withdrawalFee && withdrawalFee[1].current))}</b> into your account.\n              </p>\n            </div>\n            <div className=\"d-flex justify-content-end align-items-center\">\n              <p className=\"text-deep-blue text-medium mr-2 mb-0 cursor-pointer\" onClick={this.toggleConfirmationModal}>Cancel</p>\n              <button className=\"btn btn-primary btn-sm\" onClick={this.handleConfirmWithdraw}>\n                Proceed\n                {loading &&\n                  <div className=\"spinner-border spinner-border-white spinner-border-sm ml-2\"></div>\n                }\n              </button>\n            </div>\n            {error && typeof error === 'string' && <p className=\"text-error text-left\">{error}</p>}\n          </Modal>\n        }\n        {showModal &&\n          <Modal onClose={this.toggleModal}>\n            <div className=\"text-center\">\n              <h3>Enter Transaction PIN</h3>\n              <p className=\"mb-0 text-grey\">confirm your withdrawal of</p>\n              <p><b>N{formatCurrency(amount)}</b></p>\n              <div className=\"w-100 ml-auto mr-auto\">\n                <PinInput onChange={this.handlePin} error={pinError} />\n              </div>\n              <button className=\"btn btn-sm btn-primary btn-block mt-3\" onClick={this.handleWithdraw}>\n                Confirm Withdrawal\n                {confirmLoading &&\n                  <div className=\"spinner-border spinner-border-white spinner-border-sm ml-2\"></div>\n                }\n              </button>\n              <p className=\"text-deep-blue mt-2\" onClick={this.toggleModal}>Cancel Withdrawal</p>\n              {confirm && <Alert alert={{ type: \"success\", message: confirm.message }} />}\n              {pinError && <p className=\"text-error mt-2\">{pinError}</p>}\n              {error && typeof error === 'string' && <p className=\"text-error text-left\">{error}</p>}\n            </div>\n          </Modal>\n        }\n        <div className=\"row\">\n          <div className=\"col-md-2\">\n            <Back />\n          </div>\n          <div className=\"col-md-5 text-center\">\n            <h3 className=\"text-medium text-deep-blue \">Withdraw Funds from Wallet</h3>\n          </div>\n        </div>\n        <Card classes=\"mt-4 col col-md-9 card\">\n          <form>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium mt-3\">How much do you want to withdraw from your wallet?</p>\n              </div>\n              <div className=\"col-md-6\">\n                <Textbox\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  label=\"Amount\"\n                  placeholder=\"Amount\"\n                  name=\"amount\"\n                  value={formatStringToCurrency(amount)}\n                  error={errors ? errors.amount : (errorObject && errorObject['amount'])}\n                />\n                <div className=\"text-right\">\n                  <p className=\"text-small\">Available balance <span className=\"text-deep-blue\">&#x20A6; {walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : 0}</span></p>\n                </div>\n              </div>\n            </div>\n            <div className=\"row mt-4\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium mt-3\">Withdrawing funds to your local bank account</p>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"mt-3\">\n                  <div className=\"d-flex justify-content-between flex-wrap\">\n                    <p>Account number</p>\n                    <p className=\"text-deep-blue\">{bankDetails && bankDetails.accountNumber ? bankDetails.accountNumber : 'No account number added'}</p>\n                  </div>\n                  <div className=\"d-flex justify-content-between flex-wrap\">\n                    <p>Bank</p>\n                    <p className=\"text-deep-blue\">{bank && bank.name ? bank.name : 'No bank specified'}</p>\n                  </div>\n                </div>\n                <div className=\"text-right mt-3\">\n                  <button className=\"btn btn-sm btn-primary btn-md-block\" onClick={this.handleSubmit}>\n                    Proceed\n                </button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </Card>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { \n    app: { \n      profile: { userProfile: { data }, banks }, \n      wallet: { error, data: withdrawData, confirm, walletDetails },\n      config\n    } \n  } = state;\n\n  return {\n    loading: getActionLoadingState(state, actionTypes.INITIALIZE_WITHDRAWAL_REQUEST),\n    confirmLoading: getActionLoadingState(state, actionTypes.CONFIRM_WITHDRAWAL_REQUEST),\n    bankDetails: data?.bankInfo,\n    banks: banks.banks?.data && banks.banks.data.banks,\n    error,\n    withdrawData,\n    confirm,\n    walletDetails,\n    withdrawalFee: config?.data?.systemConfig,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAllBanks: () => dispatch(getAllBanks()),\n    initializeWithdraw: (payload) => dispatch(initializeWithdraw(payload)),\n    confirmWithdraw: (payload, history) => dispatch(confirmWithdraw(payload, history)),\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Withdraw));\n"]},"metadata":{},"sourceType":"module"}