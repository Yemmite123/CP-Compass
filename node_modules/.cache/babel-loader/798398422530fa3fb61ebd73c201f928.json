{"ast":null,"code":"var _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/Login/ForgotPasswordConfirmation/index.js\";\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { sendResetLink } from \"#/store/login/actions\";\nimport actionTypes from \"#/store/login/actionTypes\";\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport Alert from '#/components/Alert';\nimport AuthNav from '#/components/AuthNav';\nimport './style.scss';\n\nclass ForgotPasswordConfirmation extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleResendLink = () => {\n      const {\n        location: {\n          state\n        }\n      } = this.props.history;\n      const {\n        sendResetLink\n      } = this.props;\n      sendResetLink(state.email);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      location: {\n        state\n      }\n    } = this.props.history;\n\n    if (!state) {\n      this.props.history.push('/forgot-password');\n    }\n  }\n\n  render() {\n    const {\n      loading,\n      data\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"forgot-password-confirmation-page text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AuthNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"#/assets/icons/confirmation-blue.svg\"),\n      alt: \"confirmation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"Your password reset link has been sent!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, \"A password reset link has been sent to the email your provided, if it exists with us. Please check your inbox for the link and more instructions on how to gain access to your account\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-white w-100\",\n      onClick: this.handleResendLink,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"Resend reset link\", loading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    })), data && /*#__PURE__*/React.createElement(Alert, {\n      alert: {\n        type: 'success',\n        message: data.message\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottom-section mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, \"Go back to our \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"home page\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    auth: {\n      login: {\n        data\n      }\n    }\n  } = state;\n  return {\n    loading: getActionLoadingState(state, actionTypes.SEND_RESET_LINK_REQUEST),\n    data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sendResetLink: email => dispatch(sendResetLink(email))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ForgotPasswordConfirmation));","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/Login/ForgotPasswordConfirmation/index.js"],"names":["React","Link","withRouter","connect","sendResetLink","actionTypes","getActionLoadingState","Alert","AuthNav","ForgotPasswordConfirmation","Component","handleResendLink","location","state","props","history","email","componentDidMount","push","render","loading","data","require","type","message","mapStateToProps","auth","login","SEND_RESET_LINK_REQUEST","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport { sendResetLink  } from \"#/store/login/actions\";\nimport actionTypes from \"#/store/login/actionTypes\";\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport Alert from '#/components/Alert';\nimport AuthNav from '#/components/AuthNav';\nimport './style.scss';\n\nclass ForgotPasswordConfirmation extends React.Component {\n\n  componentDidMount(){\n    const { location: { state } } = this.props.history;\n    if(!state) {\n      this.props.history.push('/forgot-password');\n    }\n  }\n\n  handleResendLink = () => {\n    const { location: { state } } = this.props.history;\n    const { sendResetLink } = this.props;\n\n    sendResetLink(state.email);\n  }\n\n  render () {\n    const { loading, data } = this.props;\n\n    return (\n      <div className=\"forgot-password-confirmation-page text-center\">\n        <AuthNav />\n        <div className=\"box\">\n          <div className=\"container\">\n            <img src={require(\"#/assets/icons/confirmation-blue.svg\")} alt=\"confirmation\"/>\n            <h3>Your password reset link has been sent!</h3>\n            <p>A password reset link has been sent to the email your provided, if it exists with us. \n                Please check your inbox for the link and more instructions on how to gain access to your account\n            </p>\n            <button className=\"btn btn-sm btn-white w-100\" onClick={this.handleResendLink} disabled={loading}>\n              Resend reset link\n              {loading &&\n                <div className=\"spinner-border spinner-border-white spinner-border-sm ml-2\"></div>\n              }\n            </button>\n            {data && <Alert alert={{ type: 'success', message: data.message }}/>}\n            <div className=\"bottom-section mt-4\">\n              <p>\n                Go back to our <span></span>\n                <Link to=\"/login\">home page</Link>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { auth: { login: { data } }  } = state;\n  return {\n    loading: getActionLoadingState(state, actionTypes.SEND_RESET_LINK_REQUEST),\n    data,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendResetLink: (email) => dispatch(sendResetLink(email)),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ForgotPasswordConfirmation))"]},"metadata":{},"sourceType":"module"}