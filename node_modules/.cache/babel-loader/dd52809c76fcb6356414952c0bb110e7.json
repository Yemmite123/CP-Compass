{"ast":null,"code":"import axios from 'axios';\nimport CONFIG from '#/config';\nimport * as actions from \"./actionTypes\";\nimport { logout, updateUser } from \"#/store/user/actions\";\nimport { showAlert } from '#/store/ui/actions';\n\nconst getTicketsRequest = () => {\n  return {\n    type: actions.GET_TICKETS_REQUEST\n  };\n};\n\nconst getTicketsError = message => {\n  return {\n    type: actions.GET_TICKETS_ERROR,\n    error: message\n  };\n};\n\nconst getTicketsSuccess = data => {\n  return {\n    type: actions.GET_TICKETS_SUCCESS,\n    data\n  };\n};\n\nexport const getTickets = (limit, pageNumber) => {\n  return (dispatch, getState) => {\n    dispatch(getTicketsRequest());\n    const {\n      token\n    } = getState().user;\n    axios.get(`${CONFIG.BASE_URL}/users/tickets?limit=${limit}&page=${pageNumber}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      }\n    }).then(response => {\n      var _response$headers;\n\n      ((_response$headers = response.headers) === null || _response$headers === void 0 ? void 0 : _response$headers.authorization) && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if ([200, 201].includes(response.status)) {\n        dispatch(getTicketsSuccess(response.data.data));\n      }\n    }).catch(error => {\n      error.response && error.response.headers.authorization && dispatch(updateUser({\n        token: error.response.headers.authorization\n      }));\n\n      if (error.response && [400, 404, 403, 422].includes(error.response.status)) {\n        return dispatch(getTicketsError(error.response.data.error ? error.response.data.error : error.response.data.message));\n      }\n\n      if (error.response && [401].includes(error.response.status)) {\n        dispatch(showAlert({\n          type: 'error',\n          message: 'Your session has expired'\n        }));\n        return setTimeout(() => dispatch(logout()), 2000);\n      }\n\n      if (error.response && error.response.status >= 500) {\n        return dispatch(getTicketsError('Oops! We did something wrong.'));\n      }\n\n      dispatch(getTicketsError('Oops! We did something wrong.'));\n    });\n  };\n}; // create new tickets\n\nconst createNewTicketRequest = () => {\n  return {\n    type: actions.CREATE_NEW_TICKET_REQUEST\n  };\n};\n\nconst createNewTicketError = message => {\n  return {\n    type: actions.CREATE_NEW_TICKET_ERROR,\n    error: message\n  };\n};\n\nconst createNewTicketSuccess = data => {\n  return {\n    type: actions.CREATE_NEW_TICKET_SUCCESS,\n    data\n  };\n};\n\nexport const createNewTicket = payload => {\n  return (dispatch, getState) => {\n    dispatch(createNewTicketRequest());\n    const {\n      token\n    } = getState().user;\n    return new Promise(resolve => {\n      axios.post(`${CONFIG.BASE_URL}/users/tickets`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      }).then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if ([200, 201].includes(response.status)) {\n          dispatch(createNewTicketSuccess(response.data.data));\n          dispatch(showAlert({\n            type: 'success',\n            message: 'Ticket created successfully'\n          }));\n          return resolve(response.data.data);\n        }\n      }).catch(error => {\n        error.response && error.response.headers.authorization && dispatch(updateUser({\n          token: error.response.headers.authorization\n        }));\n\n        if (error.response && [400, 404, 403, 422].includes(error.response.status)) {\n          return dispatch(createNewTicketError(error.response.data.error ? error.response.data.error : error.response.data.message));\n        }\n\n        if (error.response && [401].includes(error.response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (error.response && error.response.status >= 500) {\n          return dispatch(createNewTicketError('Oops! We did something wrong.'));\n        }\n\n        dispatch(createNewTicketError('Oops! We did something wrong.'));\n      });\n    });\n  };\n}; //filter tickets/ search tickets\n\nconst searchTicketsRequest = () => {\n  return {\n    type: actions.SEARCH_TICKETS_REQUEST\n  };\n};\n\nconst searchTicketsError = message => {\n  return {\n    type: actions.SEARCH_TICKETS_ERROR,\n    error: message\n  };\n};\n\nconst searchTicketsSuccess = data => {\n  return {\n    type: actions.SEARCH_TICKETS_SUCCESS,\n    data\n  };\n};\n\nexport const searchTickets = payload => {\n  return (dispatch, getState) => {\n    dispatch(searchTicketsRequest());\n    const {\n      token\n    } = getState().user;\n    return new Promise(resolve => {\n      axios.get(`${CONFIG.BASE_URL}/users/tickets/filter?search=${payload.search}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      }).then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if ([200, 201].includes(response.status)) {\n          dispatch(searchTicketsSuccess(response.data.data));\n          return resolve(response.data.data);\n        }\n      }).catch(error => {\n        error.response && error.response.headers.authorization && dispatch(updateUser({\n          token: error.response.headers.authorization\n        }));\n\n        if (error.response && [400, 404, 403, 422].includes(error.response.status)) {\n          var _error$response, _error$response$data;\n\n          dispatch(showAlert({\n            type: 'error',\n            message: error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message\n          }));\n          return dispatch(searchTicketsError(error.response.data.error ? error.response.data.error : error.response.data.message));\n        }\n\n        if (error.response && [401].includes(error.response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (error.response && error.response.status >= 500) {\n          return dispatch(searchTicketsError('Oops! We did something wrong.'));\n        }\n\n        dispatch(searchTicketsError('Oops! We did something wrong.'));\n      });\n    });\n  };\n}; //GET SINGLE TICKET\n\nconst getSingleTicketRequest = () => {\n  return {\n    type: actions.GET_SINGLE_TICKET_REQUEST\n  };\n};\n\nconst getSingleTicketError = message => {\n  return {\n    type: actions.GET_SINGLE_TICKET_ERROR,\n    error: message\n  };\n};\n\nconst getSingleTicketSuccess = data => {\n  return {\n    type: actions.GET_SINGLE_TICKET_SUCCESS,\n    data\n  };\n};\n\nexport const getSingleTicket = id => {\n  return (dispatch, getState) => {\n    dispatch(getSingleTicketRequest());\n    const {\n      token\n    } = getState().user;\n    return new Promise(resolve => {\n      axios.get(`${CONFIG.BASE_URL}/users/tickets/${id}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      }).then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if ([200, 201].includes(response.status)) {\n          dispatch(getSingleTicketSuccess(response.data.data));\n          return resolve(response.data.data);\n        }\n      }).catch(error => {\n        error.response && error.response.headers.authorization && dispatch(updateUser({\n          token: error.response.headers.authorization\n        }));\n\n        if (error.response && [400, 404, 403, 422].includes(error.response.status)) {\n          var _error$response2, _error$response2$data;\n\n          dispatch(showAlert({\n            type: 'error',\n            message: error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message\n          }));\n          return dispatch(getSingleTicketError(error.response.data.error ? error.response.data.error : error.response.data.message));\n        }\n\n        if (error.response && [401].includes(error.response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (error.response && error.response.status >= 500) {\n          return dispatch(getSingleTicketError('Oops! We did something wrong.'));\n        }\n\n        dispatch(getSingleTicketError('Oops! We did something wrong.'));\n      });\n    });\n  };\n}; //send message\n\nconst sendMessageRequest = () => {\n  return {\n    type: actions.SEND_MESSAGE_REQUEST\n  };\n};\n\nconst sendMessageError = message => {\n  return {\n    type: actions.SEND_MESSAGE_ERROR,\n    error: message\n  };\n};\n\nconst sendMessageSuccess = data => {\n  return {\n    type: actions.SEND_MESSAGE_SUCCESS,\n    data\n  };\n};\n\nexport const sendMessage = (id, payload) => {\n  return (dispatch, getState) => {\n    dispatch(sendMessageRequest());\n    const {\n      token\n    } = getState().user;\n    return new Promise(resolve => {\n      axios.post(`${CONFIG.BASE_URL}/users/tickets/${id}/message`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      }).then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if ([200, 201].includes(response.status)) {\n          dispatch(sendMessageSuccess(response.data.data));\n          return resolve(response.data.data);\n        }\n      }).catch(error => {\n        error.response && error.response.headers.authorization && dispatch(updateUser({\n          token: error.response.headers.authorization\n        }));\n\n        if (error.response && [400, 404, 403, 422].includes(error.response.status)) {\n          return dispatch(sendMessageError(error.response.data.error ? error.response.data.error : error.response.data.message));\n        }\n\n        if (error.response && [401].includes(error.response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (error.response && error.response.status >= 500) {\n          return dispatch(sendMessageError('Oops! We did something wrong.'));\n        }\n\n        dispatch(sendMessageError('Oops! We did something wrong.'));\n      });\n    });\n  };\n}; //send message\n\nconst getAllUserGuidesRequest = () => {\n  return {\n    type: actions.GET_ALL_USER_GUIDES_REQUEST\n  };\n};\n\nconst getAllUserGuidesError = message => {\n  return {\n    type: actions.GET_ALL_USER_GUIDES_ERROR,\n    error: message\n  };\n};\n\nconst getAllUserGuidesSuccess = data => {\n  return {\n    type: actions.GET_ALL_USER_GUIDES_SUCCESS,\n    data\n  };\n};\n\nexport const getAllUserGuides = () => {\n  return (dispatch, getState) => {\n    dispatch(getAllUserGuidesRequest());\n    const {\n      token\n    } = getState().user;\n    return new Promise(resolve => {\n      axios.get(`${CONFIG.BASE_URL}/users/guides`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      }).then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if ([200, 201].includes(response.status)) {\n          dispatch(getAllUserGuidesSuccess(response.data.data));\n          return resolve(response.data.data);\n        }\n      }).catch(error => {\n        error.response && error.response.headers.authorization && dispatch(updateUser({\n          token: error.response.headers.authorization\n        }));\n\n        if (error.response && [400, 404, 403, 422].includes(error.response.status)) {\n          var _error$response3, _error$response3$data;\n\n          dispatch(showAlert({\n            type: 'error',\n            message: error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message\n          }));\n          return dispatch(getAllUserGuidesError(error.response.data.error ? error.response.data.error : error.response.data.message));\n        }\n\n        if (error.response && [401].includes(error.response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (error.response && error.response.status >= 500) {\n          return dispatch(getAllUserGuidesError('Oops! We did something wrong.'));\n        }\n\n        dispatch(getAllUserGuidesError('Oops! We did something wrong.'));\n      });\n    });\n  };\n}; //get all FAQs\n\nconst getAllFaqsRequest = () => {\n  return {\n    type: actions.GET_ALL_FAQS_REQUEST\n  };\n};\n\nconst getAllFaqsError = message => {\n  return {\n    type: actions.GET_ALL_FAQS_ERROR,\n    error: message\n  };\n};\n\nconst getAllFaqsSuccess = data => {\n  return {\n    type: actions.GET_ALL_FAQS_SUCCESS,\n    data\n  };\n};\n\nexport const getAllFaqs = () => {\n  return dispatch => {\n    dispatch(getAllFaqsRequest());\n    axios.get(`${CONFIG.BASE_URL}/faq`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      if ([200, 201].includes(response.status)) {\n        return dispatch(getAllFaqsSuccess(response.data.data));\n      }\n    }).catch(error => {\n      if (error.response && [400, 404, 403, 422].includes(error.response.status)) {\n        var _error$response4, _error$response4$data;\n\n        dispatch(showAlert({\n          type: 'error',\n          message: error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message\n        }));\n        return dispatch(getAllFaqsError(error.response.data.error ? error.response.data.error : error.response.data.message));\n      }\n\n      if (error.response && [401].includes(error.response.status)) {\n        dispatch(showAlert({\n          type: 'error',\n          message: 'Your session has expired'\n        }));\n        return setTimeout(() => dispatch(logout()), 2000);\n      }\n\n      if (error.response && error.response.status >= 500) {\n        return dispatch(getAllFaqsError('Oops! We did something wrong.'));\n      }\n\n      dispatch(getAllFaqsError('Oops! We did something wrong.'));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/store/support/actions.js"],"names":["axios","CONFIG","actions","logout","updateUser","showAlert","getTicketsRequest","type","GET_TICKETS_REQUEST","getTicketsError","message","GET_TICKETS_ERROR","error","getTicketsSuccess","data","GET_TICKETS_SUCCESS","getTickets","limit","pageNumber","dispatch","getState","token","user","get","BASE_URL","headers","Authorization","then","response","authorization","includes","status","catch","setTimeout","createNewTicketRequest","CREATE_NEW_TICKET_REQUEST","createNewTicketError","CREATE_NEW_TICKET_ERROR","createNewTicketSuccess","CREATE_NEW_TICKET_SUCCESS","createNewTicket","payload","Promise","resolve","post","searchTicketsRequest","SEARCH_TICKETS_REQUEST","searchTicketsError","SEARCH_TICKETS_ERROR","searchTicketsSuccess","SEARCH_TICKETS_SUCCESS","searchTickets","search","getSingleTicketRequest","GET_SINGLE_TICKET_REQUEST","getSingleTicketError","GET_SINGLE_TICKET_ERROR","getSingleTicketSuccess","GET_SINGLE_TICKET_SUCCESS","getSingleTicket","id","sendMessageRequest","SEND_MESSAGE_REQUEST","sendMessageError","SEND_MESSAGE_ERROR","sendMessageSuccess","SEND_MESSAGE_SUCCESS","sendMessage","getAllUserGuidesRequest","GET_ALL_USER_GUIDES_REQUEST","getAllUserGuidesError","GET_ALL_USER_GUIDES_ERROR","getAllUserGuidesSuccess","GET_ALL_USER_GUIDES_SUCCESS","getAllUserGuides","getAllFaqsRequest","GET_ALL_FAQS_REQUEST","getAllFaqsError","GET_ALL_FAQS_ERROR","getAllFaqsSuccess","GET_ALL_FAQS_SUCCESS","getAllFaqs"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport CONFIG from '#/config';\nimport * as actions from \"./actionTypes\";\nimport { logout, updateUser } from \"#/store/user/actions\";\nimport { showAlert } from '#/store/ui/actions';\n\nconst getTicketsRequest = () => {\n  return {\n    type: actions.GET_TICKETS_REQUEST,\n  }\n}\n\nconst getTicketsError = (message) => {\n  return {\n    type: actions.GET_TICKETS_ERROR,\n    error: message,\n  }\n}\n\nconst getTicketsSuccess = (data) => {\n  return {\n    type: actions.GET_TICKETS_SUCCESS,\n    data,\n  }\n}\n\nexport const getTickets = (limit, pageNumber) => {\n  return (dispatch, getState) => {\n    dispatch(getTicketsRequest());\n\n    const { token } = getState().user;\n\n    axios.get(`${CONFIG.BASE_URL}/users/tickets?limit=${limit}&page=${pageNumber}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    })\n      .then(response => {\n        response.headers?.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if ([200, 201].includes(response.status)) {\n          dispatch(getTicketsSuccess(response.data.data));\n        }\n      })\n      .catch((error) => {\n        error.response && error.response.headers.authorization && dispatch(updateUser({\n          token: error.response.headers.authorization\n        }))\n        if (error.response && [400, 404, 403, 422].includes(error.response.status)) {\n          return dispatch(getTicketsError(error.response.data.error ? error.response.data.error : error.response.data.message));\n        }\n        if (error.response && [401].includes(error.response.status)) {\n          dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n          return setTimeout(() => dispatch(logout()), 2000)\n        }\n        if (error.response && error.response.status >= 500) {\n          return dispatch(getTicketsError('Oops! We did something wrong.'));\n        }\n        dispatch(getTicketsError('Oops! We did something wrong.'));\n      })\n  }\n}\n\n// create new tickets\nconst createNewTicketRequest = () => {\n  return {\n    type: actions.CREATE_NEW_TICKET_REQUEST,\n  }\n}\n\nconst createNewTicketError = (message) => {\n  return {\n    type: actions.CREATE_NEW_TICKET_ERROR,\n    error: message,\n  }\n}\n\nconst createNewTicketSuccess = (data) => {\n  return {\n    type: actions.CREATE_NEW_TICKET_SUCCESS,\n    data,\n  }\n}\n\nexport const createNewTicket = (payload) => {\n  return (dispatch, getState) => {\n    dispatch(createNewTicketRequest());\n\n    const { token } = getState().user;\n    return new Promise((resolve) => {\n      axios.post(`${CONFIG.BASE_URL}/users/tickets`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(response => {\n          response.headers.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          if ([200, 201].includes(response.status)) {\n            dispatch(createNewTicketSuccess(response.data.data));\n            dispatch(showAlert({ type: 'success', message: 'Ticket created successfully' }))\n            return resolve(response.data.data)\n          }\n        })\n        .catch((error) => {\n          error.response && error.response.headers.authorization && dispatch(updateUser({\n            token: error.response.headers.authorization\n          }))\n          if (error.response && [400, 404, 403, 422].includes(error.response.status)) {\n            return dispatch(createNewTicketError(error.response.data.error ? error.response.data.error : error.response.data.message));\n          }\n          if (error.response && [401].includes(error.response.status)) {\n            dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n            return setTimeout(() => dispatch(logout()), 2000)\n          }\n          if (error.response && error.response.status >= 500) {\n            return dispatch(createNewTicketError('Oops! We did something wrong.'));\n          }\n          dispatch(createNewTicketError('Oops! We did something wrong.'));\n        })\n    })\n  }\n}\n\n//filter tickets/ search tickets\nconst searchTicketsRequest = () => {\n  return {\n    type: actions.SEARCH_TICKETS_REQUEST,\n  }\n}\n\nconst searchTicketsError = (message) => {\n  return {\n    type: actions.SEARCH_TICKETS_ERROR,\n    error: message,\n  }\n}\n\nconst searchTicketsSuccess = (data) => {\n  return {\n    type: actions.SEARCH_TICKETS_SUCCESS,\n    data,\n  }\n}\n\nexport const searchTickets = (payload) => {\n  return (dispatch, getState) => {\n    dispatch(searchTicketsRequest());\n\n    const { token } = getState().user;\n    return new Promise((resolve) => {\n      axios.get(`${CONFIG.BASE_URL}/users/tickets/filter?search=${payload.search}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(response => {\n          response.headers.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          if ([200, 201].includes(response.status)) {\n            dispatch(searchTicketsSuccess(response.data.data));\n            return resolve(response.data.data)\n          }\n        })\n        .catch((error) => {\n          error.response && error.response.headers.authorization && dispatch(updateUser({\n            token: error.response.headers.authorization\n          }))\n          if (error.response && [400, 404, 403, 422].includes(error.response.status)) {\n            dispatch(showAlert({ type: 'error', message: error?.response?.data?.message }))\n            return dispatch(searchTicketsError(error.response.data.error ? error.response.data.error : error.response.data.message));\n          }\n          if (error.response && [401].includes(error.response.status)) {\n            dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n            return setTimeout(() => dispatch(logout()), 2000)\n          }\n          if (error.response && error.response.status >= 500) {\n            return dispatch(searchTicketsError('Oops! We did something wrong.'));\n          }\n          dispatch(searchTicketsError('Oops! We did something wrong.'));\n        })\n    })\n  }\n}\n\n\n//GET SINGLE TICKET\nconst getSingleTicketRequest = () => {\n  return {\n    type: actions.GET_SINGLE_TICKET_REQUEST,\n  }\n}\n\nconst getSingleTicketError = (message) => {\n  return {\n    type: actions.GET_SINGLE_TICKET_ERROR,\n    error: message,\n  }\n}\n\nconst getSingleTicketSuccess = (data) => {\n  return {\n    type: actions.GET_SINGLE_TICKET_SUCCESS,\n    data,\n  }\n}\n\nexport const getSingleTicket = (id) => {\n  return (dispatch, getState) => {\n    dispatch(getSingleTicketRequest());\n\n    const { token } = getState().user;\n    return new Promise((resolve) => {\n      axios.get(`${CONFIG.BASE_URL}/users/tickets/${id}`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(response => {\n          response.headers.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          if ([200, 201].includes(response.status)) {\n            dispatch(getSingleTicketSuccess(response.data.data));\n            return resolve(response.data.data)\n          }\n        })\n        .catch((error) => {\n          error.response && error.response.headers.authorization && dispatch(updateUser({\n            token: error.response.headers.authorization\n          }))\n          if (error.response && [400, 404, 403, 422].includes(error.response.status)) {\n            dispatch(showAlert({ type: 'error', message: error?.response?.data?.message }))\n            return dispatch(getSingleTicketError(error.response.data.error ? error.response.data.error : error.response.data.message));\n          }\n          if (error.response && [401].includes(error.response.status)) {\n            dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n            return setTimeout(() => dispatch(logout()), 2000)\n          }\n          if (error.response && error.response.status >= 500) {\n            return dispatch(getSingleTicketError('Oops! We did something wrong.'));\n          }\n          dispatch(getSingleTicketError('Oops! We did something wrong.'));\n        })\n    })\n  }\n}\n\n//send message\nconst sendMessageRequest = () => {\n  return {\n    type: actions.SEND_MESSAGE_REQUEST,\n  }\n}\n\nconst sendMessageError = (message) => {\n  return {\n    type: actions.SEND_MESSAGE_ERROR,\n    error: message,\n  }\n}\n\nconst sendMessageSuccess = (data) => {\n  return {\n    type: actions.SEND_MESSAGE_SUCCESS,\n    data,\n  }\n}\n\nexport const sendMessage = (id, payload) => {\n  return (dispatch, getState) => {\n    dispatch(sendMessageRequest());\n\n    const { token } = getState().user;\n    return new Promise((resolve) => {\n      axios.post(`${CONFIG.BASE_URL}/users/tickets/${id}/message`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(response => {\n          response.headers.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          if ([200, 201].includes(response.status)) {\n            dispatch(sendMessageSuccess(response.data.data));\n            return resolve(response.data.data)\n          }\n        })\n        .catch((error) => {\n          error.response && error.response.headers.authorization && dispatch(updateUser({\n            token: error.response.headers.authorization\n          }))\n          if (error.response && [400, 404, 403, 422].includes(error.response.status)) {\n            return dispatch(sendMessageError(error.response.data.error ? error.response.data.error : error.response.data.message));\n          }\n          if (error.response && [401].includes(error.response.status)) {\n            dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n            return setTimeout(() => dispatch(logout()), 2000)\n          }\n          if (error.response && error.response.status >= 500) {\n            return dispatch(sendMessageError('Oops! We did something wrong.'));\n          }\n          dispatch(sendMessageError('Oops! We did something wrong.'));\n        })\n    })\n  }\n}\n\n//send message\nconst getAllUserGuidesRequest = () => {\n  return {\n    type: actions.GET_ALL_USER_GUIDES_REQUEST,\n  }\n}\n\nconst getAllUserGuidesError = (message) => {\n  return {\n    type: actions.GET_ALL_USER_GUIDES_ERROR,\n    error: message,\n  }\n}\n\nconst getAllUserGuidesSuccess = (data) => {\n  return {\n    type: actions.GET_ALL_USER_GUIDES_SUCCESS,\n    data,\n  }\n}\n\nexport const getAllUserGuides = () => {\n  return (dispatch, getState) => {\n    dispatch(getAllUserGuidesRequest());\n\n    const { token } = getState().user;\n    return new Promise((resolve) => {\n      axios.get(`${CONFIG.BASE_URL}/users/guides`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(response => {\n          response.headers.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          if ([200, 201].includes(response.status)) {\n            dispatch(getAllUserGuidesSuccess(response.data.data));\n            return resolve(response.data.data)\n          }\n        })\n        .catch((error) => {\n          error.response && error.response.headers.authorization && dispatch(updateUser({\n            token: error.response.headers.authorization\n          }))\n          if (error.response && [400, 404, 403, 422].includes(error.response.status)) {\n            dispatch(showAlert({ type: 'error', message: error?.response?.data?.message }))\n            return dispatch(getAllUserGuidesError(error.response.data.error ? error.response.data.error : error.response.data.message));\n          }\n          if (error.response && [401].includes(error.response.status)) {\n            dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n            return setTimeout(() => dispatch(logout()), 2000)\n          }\n          if (error.response && error.response.status >= 500) {\n            return dispatch(getAllUserGuidesError('Oops! We did something wrong.'));\n          }\n          dispatch(getAllUserGuidesError('Oops! We did something wrong.'));\n        })\n    })\n  }\n}\n\n\n//get all FAQs\nconst getAllFaqsRequest = () => {\n  return {\n    type: actions.GET_ALL_FAQS_REQUEST,\n  }\n}\n\nconst getAllFaqsError = (message) => {\n  return {\n    type: actions.GET_ALL_FAQS_ERROR,\n    error: message,\n  }\n}\n\nconst getAllFaqsSuccess = (data) => {\n  return {\n    type: actions.GET_ALL_FAQS_SUCCESS,\n    data,\n  }\n}\n\nexport const getAllFaqs = () => {\n  return (dispatch) => {\n    dispatch(getAllFaqsRequest());\n\n    axios.get(`${CONFIG.BASE_URL}/faq`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(response => {\n        if ([200, 201].includes(response.status)) {\n          return dispatch(getAllFaqsSuccess(response.data.data));\n        }\n      })\n      .catch((error) => {\n        if (error.response && [400, 404, 403, 422].includes(error.response.status)) {\n          dispatch(showAlert({ type: 'error', message: error?.response?.data?.message }))\n          return dispatch(getAllFaqsError(error.response.data.error ? error.response.data.error : error.response.data.message));\n        }\n        if (error.response && [401].includes(error.response.status)) {\n          dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n          return setTimeout(() => dispatch(logout()), 2000)\n        }\n        if (error.response && error.response.status >= 500) {\n          return dispatch(getAllFaqsError('Oops! We did something wrong.'));\n        }\n        dispatch(getAllFaqsError('Oops! We did something wrong.'));\n      })\n  }\n}"]},"metadata":{},"sourceType":"module"}