{"ast":null,"code":"var _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Marketplace/TermedInvestments/index.js\";\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport actionTypes from \"#/store/investment/actionTypes\";\nimport { getTermedInvestments } from '#/store/investment/actions';\nimport MarketSkeleton from '../Skeleton';\nimport './style.scss';\nimport MarketplaceCard from '#/components/MarketplaceCard';\n\nclass TermedInvestments extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSingleInvestment = investment => {\n      this.props.history.push({\n        pathname: `/app/marketplace/termed-investment/${investment.id}`,\n        state: {\n          investment,\n          routeName: 'Marketplace'\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.investments) {\n      this.props.getTermedInvestments();\n    }\n  }\n\n  render() {\n    var _investments$investme, _investments$investme2;\n\n    const {\n      loading,\n      investments\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"termed-investments-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, !investments && loading && /*#__PURE__*/React.createElement(MarketSkeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 37\n      }\n    }), investments && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, investments && ((_investments$investme = investments.investments) === null || _investments$investme === void 0 ? void 0 : _investments$investme.data.length) > 0 ? (_investments$investme2 = investments.investments) === null || _investments$investme2 === void 0 ? void 0 : _investments$investme2.data.map(investment => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-3 pl-0\",\n      key: Math.random() * 1000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MarketplaceCard, {\n      item: investment,\n      handleSelect: () => this.handleSingleInvestment(investment),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }))) : !loading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center w-100 mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-grey text-medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"No Termed Investments\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    app: {\n      investment: {\n        investments\n      }\n    }\n  } = state;\n  return {\n    loading: getActionLoadingState(state, actionTypes.GET_ALL_INVESTMENTS_REQUEST),\n    investments\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getTermedInvestments: () => dispatch(getTermedInvestments())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TermedInvestments));","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Marketplace/TermedInvestments/index.js"],"names":["React","withRouter","connect","getActionLoadingState","actionTypes","getTermedInvestments","MarketSkeleton","MarketplaceCard","TermedInvestments","Component","handleSingleInvestment","investment","props","history","push","pathname","id","state","routeName","componentDidMount","investments","render","loading","data","length","map","Math","random","mapStateToProps","app","GET_ALL_INVESTMENTS_REQUEST","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,SAASC,oBAAT,QAAqC,4BAArC;AACA,OAAOC,cAAP,MAA2B,aAA3B;AACA,OAAO,cAAP;AACA,OAAOC,eAAP,MAA4B,8BAA5B;;AAEA,MAAMC,iBAAN,SAAgCR,KAAK,CAACS,SAAtC,CAAgD;AAAA;AAAA;;AAAA,SAQ9CC,sBAR8C,GAQpBC,UAAD,IAAgB;AACvC,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB;AACtBC,QAAAA,QAAQ,EAAG,sCAAqCJ,UAAU,CAACK,EAAG,EADxC;AAEtBC,QAAAA,KAAK,EAAE;AAAEN,UAAAA,UAAF;AAAcO,UAAAA,SAAS,EAAE;AAAzB;AAFe,OAAxB;AAID,KAb6C;AAAA;;AAE9CC,EAAAA,iBAAiB,GAAG;AAClB,QAAG,CAAC,KAAKP,KAAL,CAAWQ,WAAf,EAA4B;AAC1B,WAAKR,KAAL,CAAWP,oBAAX;AACD;AACF;;AASDgB,EAAAA,MAAM,GAAG;AAAA;;AACP,UAAM;AAAEC,MAAAA,OAAF;AAAWF,MAAAA;AAAX,QAA2B,KAAKR,KAAtC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACQ,WAAD,IAAgBE,OAAhB,iBAA2B,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD9B,EAGGF,WAAW,iBACZ;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,WAAW,IACZ,0BAAAA,WAAW,CAACA,WAAZ,gFAAyBG,IAAzB,CAA8BC,MAA9B,IAAuC,CADtC,6BAEDJ,WAAW,CAACA,WAFX,2DAED,uBAAyBG,IAAzB,CAA8BE,GAA9B,CAAkCd,UAAU,iBAC1C;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,GAAG,EAAEe,IAAI,CAACC,MAAL,KAAc,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AACE,MAAA,IAAI,EAAEhB,UADR;AAEE,MAAA,YAAY,EAAE,MAAM,KAAKD,sBAAL,CAA4BC,UAA5B,CAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAFC,GAWC,CAACW,OAAD,iBAAY;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACZ;AAAG,MAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADY,CAZhB,CAJF,CADF;AAyBD;;AA1C6C;;AA6ChD,MAAMM,eAAe,GAAGX,KAAK,IAAI;AAC/B,QAAM;AAAEY,IAAAA,GAAG,EAAE;AAAElB,MAAAA,UAAU,EAAE;AAAES,QAAAA;AAAF;AAAd;AAAP,MAA2CH,KAAjD;AAEA,SAAO;AACLK,IAAAA,OAAO,EAAEnB,qBAAqB,CAACc,KAAD,EAAQb,WAAW,CAAC0B,2BAApB,CADzB;AAELV,IAAAA;AAFK,GAAP;AAID,CAPD;;AASA,MAAMW,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL3B,IAAAA,oBAAoB,EAAE,MAAM2B,QAAQ,CAAC3B,oBAAoB,EAArB;AAD/B,GAAP;AAGD,CAJD;;AAMA,eAAeJ,UAAU,CAACC,OAAO,CAAC0B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CvB,iBAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport actionTypes from \"#/store/investment/actionTypes\";\nimport { getTermedInvestments } from '#/store/investment/actions'\nimport MarketSkeleton from '../Skeleton';\nimport './style.scss';\nimport MarketplaceCard from '#/components/MarketplaceCard';\n\nclass TermedInvestments extends React.Component {\n\n  componentDidMount() {\n    if(!this.props.investments) {\n      this.props.getTermedInvestments();\n    }\n  }\n\n  handleSingleInvestment = (investment) => {\n    this.props.history.push({\n      pathname: `/app/marketplace/termed-investment/${investment.id}`,\n      state: { investment, routeName: 'Marketplace' },\n    })\n  }\n\n  render() {\n    const { loading, investments } = this.props;\n    return (\n      <div className=\"termed-investments-page\">\n        {!investments && loading && <MarketSkeleton />\n        }\n        {investments &&\n        <div className=\"row\">\n          {investments &&\n          investments.investments?.data.length > 0 ?\n          investments.investments?.data.map(investment => (\n            <div className=\"col-md-3 pl-0\" key={Math.random()*1000} >\n              <MarketplaceCard \n                item={investment} \n                handleSelect={() => this.handleSingleInvestment(investment)}\n              />\n            </div>\n          ))\n          :\n          ( !loading && <div className=\"text-center w-100 mt-5\">\n            <p className=\"text-grey text-medium\">No Termed Investments</p>\n          </div>)\n        }\n        </div>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { app: { investment: { investments } } } = state;\n\n  return {\n    loading: getActionLoadingState(state, actionTypes.GET_ALL_INVESTMENTS_REQUEST),\n    investments,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getTermedInvestments: () => dispatch(getTermedInvestments()),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TermedInvestments));\n"]},"metadata":{},"sourceType":"module"}