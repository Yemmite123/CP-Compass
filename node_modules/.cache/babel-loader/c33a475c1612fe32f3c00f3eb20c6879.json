{"ast":null,"code":"var _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Marketplace/Collections/index.js\";\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport moment from 'moment';\nimport Back from '#/components/Back';\nimport Card from '#/components/Card';\nimport SelectBox from '#/components/SelectBox';\nimport Modal from '#/components/Modal';\nimport PaymentMethod from '#/components/PaymentMethod';\nimport PinInput from '#/components/PinInput';\nimport Textbox from '#/components/Textbox';\nimport DebitCard from '#/components/DebitCard';\nimport DateBox from '#/components/DateBox';\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport { getCards } from '#/store/wallet/actions';\nimport { bookNewInvestment, bookInvestmentWithPay } from '#/store/investment/actions';\nimport investmentActionTypes from '#/store/investment/actionTypes';\nimport { confirmPin } from '#/store/security/actions';\nimport securityActionTypes from '#/store/security/actionTypes';\nimport { investmentFrequency, validateFields, serializeErrors, fundingSource, formatCurrency, formatCurrencyToString, formatStringToCurrency } from '#/utils';\nimport './style.scss';\n\nclass Collections extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      type: '',\n      title: '',\n      target: '',\n      frequency: '',\n      startDate: new Date(),\n      amount: '',\n      confirmationModal: false,\n      showTransactionModal: false,\n      setupSuccessModal: false,\n      addMoneyModal: false,\n      fundingSourceModal: false,\n      allCardsModal: false,\n      enterAmountModal: false,\n      showAutomateModal: false,\n      finalAmount: '',\n      pin: {},\n      pinError: null,\n      selectedMethod: '',\n      errors: null,\n      selectedMethodError: null,\n      entryError: null,\n      selectedCard: null\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n\n      if (name === 'target' || name === 'amount' || name === 'finalAmount') {\n        this.setState({\n          errors: null\n        });\n        return this.setState({\n          [name]: formatCurrencyToString(value)\n        }, () => {\n          if (isNaN(this.state[name])) {\n            return this.setState({\n              errors: {\n                [name]: 'enter a valid number'\n              }\n            });\n          }\n        });\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleChangeDate = (item, date) => {\n      this.setState({\n        [item]: date\n      });\n    };\n\n    this.handlePin = pin => {\n      this.setState({\n        pin\n      });\n    };\n\n    this.handleSelectMethod = event => {\n      this.setState({\n        selectedMethod: event.target.id\n      });\n    };\n\n    this.handleComfirmation = e => {\n      e.preventDefault();\n      this.setState({\n        errors: null,\n        entryError: null\n      });\n\n      if (!this.props.isApproved) {\n        return this.setState({\n          entryError: 'Your account is awaiting approval'\n        });\n      }\n\n      if (!this.props.isBvnActive) {\n        return this.setState({\n          entryError: 'Access denied. Please complete your BVN profile'\n        });\n      }\n\n      const data = this.state;\n      const required = ['title', 'target', 'frequency', 'startDate', 'amount'];\n      const errors = validateFields(data, required);\n\n      if (Object.keys(errors).length > 0) {\n        return this.setState({\n          errors\n        });\n      }\n\n      this.toggleConfirmationModal();\n    };\n\n    this.handleEnterPin = () => {\n      this.toggleConfirmationModal();\n      this.toggleTransactionPinModal();\n    };\n\n    this.handleTransactionVerification = e => {\n      e.preventDefault();\n      const {\n        pin\n      } = this.state;\n      const {\n        confirmPin\n      } = this.props;\n      this.setState({\n        pinError: null\n      });\n      const initialPin = [pin.value1, pin.value2, pin.value3, pin.value4].join('');\n\n      if (initialPin.length < 4) {\n        return this.setState({\n          pinError: 'field is required'\n        });\n      }\n\n      confirmPin({\n        pin: initialPin\n      }).then(data => {\n        this.toggleTransactionPinModal();\n        this.toggleAddMoneyModal();\n      });\n    };\n\n    this.handleBookWithoutPay = e => {\n      e.preventDefault();\n      const {\n        bookNewInvestment\n      } = this.props;\n      const {\n        location: {\n          state\n        }\n      } = this.props.history;\n      const {\n        title,\n        target,\n        startDate,\n        amount,\n        frequency\n      } = this.state;\n      const payload = {\n        title,\n        targetAmount: formatCurrencyToString(target),\n        currency: 'NGN',\n        startDate: moment(startDate).format('YYYY-MM-DD'),\n        amount: formatCurrencyToString(amount),\n        frequency\n      };\n      const data = {\n        type: 'collection',\n        payload,\n        id: state === null || state === void 0 ? void 0 : state.investment.id\n      };\n      bookNewInvestment(data).then(data => {\n        this.toggleAddMoneyModal();\n        this.toggleSetupSuccessModal();\n      });\n    };\n\n    this.handleSuccess = () => {\n      this.toggleSetupSuccessModal();\n      this.props.history.push('/app/marketplace/termed-investments');\n    };\n\n    this.handleEnterAmount = () => {\n      this.toggleAddMoneyModal();\n      this.toggleAmountModal();\n    };\n\n    this.handlePickFundingSource = () => {\n      this.toggleAmountModal();\n      this.toggleFundingModal();\n    };\n\n    this.handleSelectedFundingSource = () => {\n      const {\n        selectedMethod\n      } = this.state;\n      const required = ['selectedMethod'];\n      const errors = validateFields({\n        selectedMethod\n      }, required);\n\n      if (Object.keys(errors).length > 0) {\n        return this.setState({\n          selectedMethodError: 'please select a method'\n        });\n      }\n\n      if (selectedMethod === 'wallet') {\n        this.setState({\n          type: 'wallet'\n        });\n        this.toggleFundingModal();\n        return this.toggleAutomateModal();\n      }\n\n      this.toggleFundingModal();\n      return this.toggleAllCardsModal();\n    };\n\n    this.handleSelectCard = card => {\n      this.setState({\n        selectedCard: card,\n        type: 'card'\n      }, () => {\n        this.toggleAllCardsModal();\n        return this.toggleAutomateModal();\n      });\n    };\n\n    this.handleAutomateStep = () => {\n      this.setState({\n        type: 'card'\n      }, () => {\n        this.toggleAllCardsModal();\n        return this.toggleAutomateModal();\n      });\n    };\n\n    this.handleBookWithPay = autoCharge => {\n      const {\n        selectedCard,\n        finalAmount,\n        title,\n        target,\n        startDate,\n        frequency,\n        amount,\n        type\n      } = this.state;\n      const {\n        bookInvestmentWithPay\n      } = this.props;\n      const {\n        location: {\n          state\n        }\n      } = this.props.history;\n      const payment = {\n        method: type,\n        type: 'debit',\n        reoccurring: selectedCard ? true : false,\n        cardId: selectedCard && selectedCard.id\n      };\n      const payload = {\n        title,\n        targetAmount: formatCurrencyToString(target),\n        currency: 'NGN',\n        startDate: moment(startDate).format('YYYY-MM-DD'),\n        frequency,\n        payment,\n        amount: formatCurrencyToString(amount),\n        initialAmount: formatCurrencyToString(finalAmount),\n        autoCharge\n      };\n      const data = {\n        type: 'collection',\n        payload,\n        id: state === null || state === void 0 ? void 0 : state.investment.id\n      };\n      bookInvestmentWithPay(data).then(data => {\n        type === 'wallet' && this.closeAutomateSuccess();\n        type === 'card' && selectedCard && this.closeAutomateSuccess();\n      });\n    };\n\n    this.closeAutomateSuccess = () => {\n      this.toggleAutomateModal();\n      this.toggleSetupSuccessModal();\n    };\n\n    this.toggleConfirmationModal = () => {\n      this.setState({\n        confirmationModal: !this.state.confirmationModal\n      });\n    };\n\n    this.toggleAddMoneyModal = () => {\n      this.setState({\n        addMoneyModal: !this.state.addMoneyModal\n      });\n    };\n\n    this.toggleFundingModal = () => {\n      this.setState({\n        fundingSourceModal: !this.state.fundingSourceModal\n      });\n    };\n\n    this.toggleAmountModal = () => {\n      this.setState({\n        enterAmountModal: !this.state.enterAmountModal\n      });\n    };\n\n    this.toggleAllCardsModal = () => {\n      this.setState({\n        allCardsModal: !this.state.allCardsModal\n      });\n    };\n\n    this.toggleTransactionPinModal = () => {\n      this.setState({\n        showTransactionModal: !this.state.showTransactionModal\n      });\n    };\n\n    this.toggleSetupSuccessModal = () => {\n      this.setState({\n        setupSuccessModal: !this.state.setupSuccessModal\n      });\n    };\n\n    this.toggleAutomateModal = () => {\n      this.setState(prevState => ({\n        showAutomateModal: !prevState.showAutomateModal\n      }));\n    };\n  }\n\n  componentDidMount() {\n    const {\n      location: {\n        state\n      }\n    } = this.props.history;\n\n    if (!(state === null || state === void 0 ? void 0 : state.investment)) {\n      this.props.history.push('/app/marketplace/termed-investments');\n    }\n\n    this.props.getCards();\n  }\n\n  render() {\n    const {\n      amount,\n      selectedMethod,\n      frequency,\n      title,\n      target,\n      startDate,\n      confirmationModal,\n      showTransactionModal,\n      addMoneyModal,\n      fundingSourceModal,\n      pinError,\n      errors,\n      allCardsModal,\n      selectedMethodError,\n      setupSuccessModal,\n      entryError,\n      enterAmountModal,\n      finalAmount,\n      showAutomateModal\n    } = this.state;\n    const {\n      error,\n      cards,\n      pinLoading,\n      confirmPinError,\n      newError,\n      loading,\n      payLoading,\n      walletDetails\n    } = this.props;\n    const {\n      location: {\n        state\n      }\n    } = this.props.history;\n    const errorObject = serializeErrors(error);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"collections-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 7\n      }\n    }, confirmationModal && /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }\n    }, \"Confirm Investment Setup\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }\n    }, \"To achieve your target of \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 42\n      }\n    }, \"N\", formatCurrency(target)), \", you have decided to save \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 101\n      }\n    }, \"N\", formatCurrency(amount), \" \", frequency), \".\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-deep-blue mr-3 mb-0 cursor-pointer\",\n      onClick: this.toggleConfirmationModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 15\n      }\n    }, \"Review Plan\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: this.handleEnterPin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 15\n      }\n    }, \"Set up\")))), showTransactionModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 15\n      }\n    }, \"Enter Transaction PIN\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-100 ml-auto mr-auto mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PinInput, {\n      onChange: this.handlePin,\n      error: pinError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary btn-block mt-5\",\n      onClick: this.handleTransactionVerification,\n      disabled: pinLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 15\n      }\n    }, \"Confirm Investment Setup\", pinLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 19\n      }\n    })), pinError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 28\n      }\n    }, pinError), confirmPinError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 35\n      }\n    }, confirmPinError))), setupSuccessModal && /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/complete-success.svg'),\n      alt: \"setup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 15\n      }\n    }, \"Investment setup successful!\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }\n    }, \"Your \", state === null || state === void 0 ? void 0 : state.investment.name, \" plan has been setup you can start enjoying returns on your principal.\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary btn-block mt-3\",\n      onClick: this.handleSuccess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }\n    }, \"Proceed\"))), addMoneyModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleAddMoneyModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/close.svg'),\n      alt: \"close\",\n      onClick: this.toggleAddMoneyModal,\n      className: \"cursor-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 15\n      }\n    }, \"Do you want to add money to this investment now?\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 15\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-primary text-primary spinner-border-sm mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mr-3 text-deep-blue mb-0 cursor-pointer\",\n      onClick: this.handleBookWithoutPay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }, \"No, I\\u2019ll add money later\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: this.handleEnterAmount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    }, \"Yes\")), newError && typeof newError === 'string' && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 60\n      }\n    }, newError))), enterAmountModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleAmountModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }\n    }, \"How much do you want to add to this investment right now?\"), /*#__PURE__*/React.createElement(Textbox, {\n      onChange: this.handleChange,\n      type: \"text\",\n      label: \"Amount\",\n      placeholder: \"Amount\",\n      name: \"finalAmount\",\n      value: formatStringToCurrency(finalAmount),\n      error: errors ? errors.finalAmount : errorObject && errorObject['amount'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 15\n      }\n    })), walletDetails && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-grey text-x-small mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 15\n      }\n    }, \"Available balance \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 76\n      }\n    }, \"\\u20A6 \", walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : 0)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: this.handlePickFundingSource,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 15\n      }\n    }, \"Proceed\"))), fundingSourceModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleFundingModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }\n    }, \"Choose a funding source\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }\n    }, fundingSource.map(method => /*#__PURE__*/React.createElement(PaymentMethod, {\n      onSelect: this.handleSelectMethod,\n      selected: selectedMethod === method.value ? true : false,\n      imgUrl: method.imgUrl,\n      imgBlue: method.imgBlue,\n      key: Math.random() * 1000,\n      value: method.value,\n      label: method.label,\n      balance: walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }\n    })), selectedMethodError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 39\n      }\n    }, selectedMethodError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary mt-3\",\n      onClick: this.handleSelectedFundingSource,\n      disabled: payLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 15\n      }\n    }, \"Proceed\", payLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 19\n      }\n    }))))), allCardsModal && /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/close.svg'),\n      alt: \"close\",\n      onClick: this.toggleAllCardsModal,\n      className: \"cursor-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 15\n      }\n    })), cards && cards.cards.length > 0 && cards.cards.map(card => /*#__PURE__*/React.createElement(DebitCard, {\n      card: card,\n      handleSelect: this.handleSelectCard,\n      key: card.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center cursor-pointer\",\n      onClick: this.handleAutomateStep,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/add-card.svg'),\n      className: \"img-fluid mr-3\",\n      alt: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-deep-blue text-medium mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 15\n      }\n    }, \"Add money from a new debit card\")), /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/right-arrow.svg'),\n      className: \"img-fluid cursor-pointer\",\n      alt: \"arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 13\n      }\n    }))), showAutomateModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleAutomateModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 17\n      }\n    }, \"Automate funding for this investment\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-small text-black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }\n    }, \"Allow us to fund from your source \", frequency, \" without asking.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 15\n      }\n    }, payLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-primary text-primary spinner-border-sm mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mr-3 text-deep-blue mb-0 cursor-pointer\",\n      onClick: () => this.handleBookWithPay(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 17\n      }\n    }, \"No, I\\u2019ll add money myself\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: () => this.handleBookWithPay(true),\n      disabled: payLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 17\n      }\n    }, \"Yes\")), newError && typeof newError === 'string' && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 60\n      }\n    }, newError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Back, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-7 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-medium text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }\n    }, \"Create new \", state === null || state === void 0 ? void 0 : state.investment.name, \" plan\"))), /*#__PURE__*/React.createElement(Card, {\n      classes: \"card p-4 mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 17\n      }\n    }, \"Give your new investment a name. You could name it after your goal. E.g. Freedom goal\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Textbox, {\n      onChange: this.handleChange,\n      type: \"text\",\n      label: \"Plan title\",\n      placeholder: \"Plan title\",\n      name: \"title\",\n      value: title,\n      error: errors ? errors.title : errorObject && errorObject['title'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }\n    }, \"How much do you need to make this goal work?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Textbox, {\n      onChange: this.handleChange,\n      type: \"text\",\n      label: \"Target amount\",\n      placeholder: \"Set target amount\",\n      name: \"target\",\n      value: formatStringToCurrency(target),\n      error: errors ? errors.target : errorObject && errorObject['target'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 17\n      }\n    }, \"How often do you want to set money aside for this investment?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SelectBox, {\n      onChange: this.handleChange,\n      label: \"Frequency\",\n      placeholder: \"Set frequency\",\n      name: \"frequency\",\n      options: investmentFrequency,\n      value: \"value\",\n      optionName: \"name\",\n      error: errors ? errors.frequency : errorObject && errorObject['frequency'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 17\n      }\n    }, \"How much do you want to pay on every frequency?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Textbox, {\n      onChange: this.handleChange,\n      type: \"text\",\n      label: \"Frequency amount\",\n      placeholder: \"Set frequency amount\",\n      name: \"amount\",\n      value: formatStringToCurrency(amount),\n      error: errors ? errors.amount : errorObject && errorObject['amount'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 17\n      }\n    }, \"When do you want to start?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(DateBox, {\n      onChange: date => this.handleChangeDate('startDate', date),\n      label: \"Start Date\",\n      placeholder: \"Set start date\",\n      name: \"startDate\",\n      value: startDate,\n      error: errors ? errors.startDate : errorObject && errorObject['startDate'],\n      min: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right mt-3 d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 13\n      }\n    }, entryError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2 mr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 28\n      }\n    }, entryError), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary btn-md-block\",\n      onClick: this.handleComfirmation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 15\n      }\n    }, \"Proceed\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    app: {\n      wallet: {\n        cards,\n        walletDetails\n      },\n      security: {\n        error: confirmPinError\n      },\n      investment: {\n        newError\n      },\n      profile: {\n        userProfile: {\n          data\n        }\n      }\n    }\n  } = state;\n  return {\n    loading: getActionLoadingState(state, investmentActionTypes.BOOK_NEW_INVESTMENT_REQUEST),\n    payLoading: getActionLoadingState(state, investmentActionTypes.BOOK_INVESTMENT_WITH_PAY_REQUEST),\n    pinLoading: getActionLoadingState(state, securityActionTypes.CONFIRM_PIN_REQUEST),\n    cards,\n    confirmPinError,\n    newError,\n    walletDetails,\n    isBvnActive: data && data.bvn ? true : false,\n    isApproved: data && data.isApproved === 1 ? true : false\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCards: () => dispatch(getCards()),\n    bookNewInvestment: data => dispatch(bookNewInvestment(data)),\n    bookInvestmentWithPay: data => dispatch(bookInvestmentWithPay(data)),\n    confirmPin: payload => dispatch(confirmPin(payload))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Collections));","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Marketplace/Collections/index.js"],"names":["React","withRouter","connect","moment","Back","Card","SelectBox","Modal","PaymentMethod","PinInput","Textbox","DebitCard","DateBox","getActionLoadingState","getCards","bookNewInvestment","bookInvestmentWithPay","investmentActionTypes","confirmPin","securityActionTypes","investmentFrequency","validateFields","serializeErrors","fundingSource","formatCurrency","formatCurrencyToString","formatStringToCurrency","Collections","Component","state","type","title","target","frequency","startDate","Date","amount","confirmationModal","showTransactionModal","setupSuccessModal","addMoneyModal","fundingSourceModal","allCardsModal","enterAmountModal","showAutomateModal","finalAmount","pin","pinError","selectedMethod","errors","selectedMethodError","entryError","selectedCard","handleChange","event","name","value","setState","isNaN","handleChangeDate","item","date","handlePin","handleSelectMethod","id","handleComfirmation","e","preventDefault","props","isApproved","isBvnActive","data","required","Object","keys","length","toggleConfirmationModal","handleEnterPin","toggleTransactionPinModal","handleTransactionVerification","initialPin","value1","value2","value3","value4","join","then","toggleAddMoneyModal","handleBookWithoutPay","location","history","payload","targetAmount","currency","format","investment","toggleSetupSuccessModal","handleSuccess","push","handleEnterAmount","toggleAmountModal","handlePickFundingSource","toggleFundingModal","handleSelectedFundingSource","toggleAutomateModal","toggleAllCardsModal","handleSelectCard","card","handleAutomateStep","handleBookWithPay","autoCharge","payment","method","reoccurring","cardId","initialAmount","closeAutomateSuccess","prevState","componentDidMount","render","error","cards","pinLoading","confirmPinError","newError","loading","payLoading","walletDetails","errorObject","toggleModal","require","wallet","NGN","map","imgUrl","imgBlue","Math","random","label","mapStateToProps","app","security","profile","userProfile","BOOK_NEW_INVESTMENT_REQUEST","BOOK_INVESTMENT_WITH_PAY_REQUEST","CONFIRM_PIN_REQUEST","bvn","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,iBAAT,EAA4BC,qBAA5B,QAAyD,4BAAzD;AACA,OAAOC,qBAAP,MAAkC,gCAAlC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,SACEC,mBADF,EACuBC,cADvB,EACuCC,eADvC,EACwDC,aADxD,EACuEC,cADvE,EACuFC,sBADvF,EAC+GC,sBAD/G,QAEO,SAFP;AAGA,OAAO,cAAP;;AAEA,MAAMC,WAAN,SAA0B3B,KAAK,CAAC4B,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAExCC,KAFwC,GAEhC;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,SAAS,EAAE,EAJL;AAKNC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,EALL;AAMNC,MAAAA,MAAM,EAAE,EANF;AAONC,MAAAA,iBAAiB,EAAE,KAPb;AAQNC,MAAAA,oBAAoB,EAAE,KARhB;AASNC,MAAAA,iBAAiB,EAAE,KATb;AAUNC,MAAAA,aAAa,EAAE,KAVT;AAWNC,MAAAA,kBAAkB,EAAE,KAXd;AAYNC,MAAAA,aAAa,EAAE,KAZT;AAaNC,MAAAA,gBAAgB,EAAE,KAbZ;AAcNC,MAAAA,iBAAiB,EAAE,KAdb;AAeNC,MAAAA,WAAW,EAAE,EAfP;AAgBNC,MAAAA,GAAG,EAAE,EAhBC;AAiBNC,MAAAA,QAAQ,EAAE,IAjBJ;AAkBNC,MAAAA,cAAc,EAAE,EAlBV;AAmBNC,MAAAA,MAAM,EAAE,IAnBF;AAoBNC,MAAAA,mBAAmB,EAAE,IApBf;AAqBNC,MAAAA,UAAU,EAAE,IArBN;AAsBNC,MAAAA,YAAY,EAAE;AAtBR,KAFgC;;AAAA,SAmCxCC,YAnCwC,GAmCxBC,KAAD,IAAW;AACxB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,KAAK,CAACtB,MAA9B;;AACA,UAAGuB,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,QAA9B,IAA0CA,IAAI,KAAK,aAAtD,EAAqE;AACnE,aAAKE,QAAL,CAAc;AAAER,UAAAA,MAAM,EAAE;AAAV,SAAd;AACE,eAAO,KAAKQ,QAAL,CAAc;AAAE,WAACF,IAAD,GAAQ9B,sBAAsB,CAAC+B,KAAD;AAAhC,SAAd,EAAwD,MAAK;AAClE,cAAGE,KAAK,CAAC,KAAK7B,KAAL,CAAW0B,IAAX,CAAD,CAAR,EAA4B;AAC1B,mBAAO,KAAKE,QAAL,CAAc;AAAER,cAAAA,MAAM,EAAE;AAAE,iBAACM,IAAD,GAAQ;AAAV;AAAV,aAAd,CAAP;AACD;AACF,SAJM,CAAP;AAKD;;AACH,WAAKE,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQC;AAAV,OAAd;AACD,KA9CuC;;AAAA,SAgDxCG,gBAhDwC,GAgDrB,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACjC,WAAKJ,QAAL,CAAc;AAAE,SAACG,IAAD,GAAQC;AAAV,OAAd;AACD,KAlDuC;;AAAA,SAoDxCC,SApDwC,GAoD3BhB,GAAD,IAAS;AACnB,WAAKW,QAAL,CAAc;AAACX,QAAAA;AAAD,OAAd;AACD,KAtDuC;;AAAA,SAwDxCiB,kBAxDwC,GAwDlBT,KAAD,IAAW;AAC9B,WAAKG,QAAL,CAAc;AAAET,QAAAA,cAAc,EAAEM,KAAK,CAACtB,MAAN,CAAagC;AAA/B,OAAd;AACD,KA1DuC;;AAAA,SA6DxCC,kBA7DwC,GA6DlBC,CAAD,IAAO;AAC1BA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKV,QAAL,CAAc;AAAER,QAAAA,MAAM,EAAE,IAAV;AAAgBE,QAAAA,UAAU,EAAE;AAA5B,OAAd;;AAEA,UAAG,CAAC,KAAKiB,KAAL,CAAWC,UAAf,EAA2B;AACzB,eAAO,KAAKZ,QAAL,CAAc;AAAEN,UAAAA,UAAU,EAAE;AAAd,SAAd,CAAP;AACD;;AACD,UAAG,CAAC,KAAKiB,KAAL,CAAWE,WAAf,EAA2B;AACzB,eAAO,KAAKb,QAAL,CAAc;AAAEN,UAAAA,UAAU,EAAE;AAAd,SAAd,CAAP;AACD;;AACD,YAAMoB,IAAI,GAAG,KAAK1C,KAAlB;AACA,YAAM2C,QAAQ,GAAG,CAAE,OAAF,EAAW,QAAX,EAAqB,WAArB,EAAkC,WAAlC,EAA+C,QAA/C,CAAjB;AACA,YAAMvB,MAAM,GAAG5B,cAAc,CAACkD,IAAD,EAAOC,QAAP,CAA7B;;AAEA,UAAIC,MAAM,CAACC,IAAP,CAAYzB,MAAZ,EAAoB0B,MAApB,GAA6B,CAAjC,EAAoC;AAClC,eAAO,KAAKlB,QAAL,CAAc;AAAER,UAAAA;AAAF,SAAd,CAAP;AACD;;AACD,WAAK2B,uBAAL;AACD,KA/EuC;;AAAA,SAkFxCC,cAlFwC,GAkFvB,MAAM;AACrB,WAAKD,uBAAL;AACA,WAAKE,yBAAL;AACD,KArFuC;;AAAA,SAwFxCC,6BAxFwC,GAwFPb,CAAD,IAAO;AACrCA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAErB,QAAAA;AAAF,UAAU,KAAKjB,KAArB;AACA,YAAM;AAAEX,QAAAA;AAAF,UAAiB,KAAKkD,KAA5B;AACA,WAAKX,QAAL,CAAc;AAAEV,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AAEA,YAAMiC,UAAU,GAAG,CAAElC,GAAG,CAACmC,MAAN,EAAcnC,GAAG,CAACoC,MAAlB,EAA0BpC,GAAG,CAACqC,MAA9B,EAAsCrC,GAAG,CAACsC,MAA1C,EAAmDC,IAAnD,CAAwD,EAAxD,CAAnB;;AACA,UAAIL,UAAU,CAACL,MAAX,GAAoB,CAAxB,EAA2B;AACzB,eAAO,KAAKlB,QAAL,CAAc;AAAEV,UAAAA,QAAQ,EAAE;AAAZ,SAAd,CAAP;AACD;;AACD7B,MAAAA,UAAU,CAAC;AAAE4B,QAAAA,GAAG,EAAEkC;AAAP,OAAD,CAAV,CACGM,IADH,CACQf,IAAI,IAAI;AACZ,aAAKO,yBAAL;AACA,aAAKS,mBAAL;AACH,OAJD;AAKD,KAvGuC;;AAAA,SA0GxCC,oBA1GwC,GA0GhBtB,CAAD,IAAO;AAC5BA,MAAAA,CAAC,CAACC,cAAF;AAEA,YAAM;AAAEpD,QAAAA;AAAF,UAAwB,KAAKqD,KAAnC;AACA,YAAM;AAAEqB,QAAAA,QAAQ,EAAE;AAAE5D,UAAAA;AAAF;AAAZ,UAA0B,KAAKuC,KAAL,CAAWsB,OAA3C;AACA,YAAM;AAAE3D,QAAAA,KAAF;AAASC,QAAAA,MAAT;AAAiBE,QAAAA,SAAjB;AAA4BE,QAAAA,MAA5B;AAAoCH,QAAAA;AAApC,UAAkD,KAAKJ,KAA7D;AACA,YAAM8D,OAAO,GAAG;AAAE5D,QAAAA,KAAF;AAAS6D,QAAAA,YAAY,EAAEnE,sBAAsB,CAACO,MAAD,CAA7C;AAAuD6D,QAAAA,QAAQ,EAAE,KAAjE;AAAwE3D,QAAAA,SAAS,EAAE/B,MAAM,CAAC+B,SAAD,CAAN,CAAkB4D,MAAlB,CAAyB,YAAzB,CAAnF;AAA2H1D,QAAAA,MAAM,EAAEX,sBAAsB,CAACW,MAAD,CAAzJ;AAAmKH,QAAAA;AAAnK,OAAhB;AACA,YAAMsC,IAAI,GAAG;AAAEzC,QAAAA,IAAI,EAAE,YAAR;AAAsB6D,QAAAA,OAAtB;AAA+B3B,QAAAA,EAAE,EAAEnC,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEkE,UAAP,CAAkB/B;AAArD,OAAb;AAEAjD,MAAAA,iBAAiB,CAACwD,IAAD,CAAjB,CACCe,IADD,CACMf,IAAI,IAAI;AACZ,aAAKgB,mBAAL;AACA,aAAKS,uBAAL;AACD,OAJD;AAKD,KAxHuC;;AAAA,SA2HxCC,aA3HwC,GA2HxB,MAAM;AACpB,WAAKD,uBAAL;AACA,WAAK5B,KAAL,CAAWsB,OAAX,CAAmBQ,IAAnB,CAAwB,qCAAxB;AACD,KA9HuC;;AAAA,SAiIxCC,iBAjIwC,GAiIpB,MAAM;AACxB,WAAKZ,mBAAL;AACA,WAAKa,iBAAL;AACD,KApIuC;;AAAA,SAuIxCC,uBAvIwC,GAuId,MAAM;AAE9B,WAAKD,iBAAL;AACA,WAAKE,kBAAL;AACD,KA3IuC;;AAAA,SA8IxCC,2BA9IwC,GA8IV,MAAM;AAClC,YAAM;AAAEvD,QAAAA;AAAF,UAAqB,KAAKnB,KAAhC;AAEA,YAAM2C,QAAQ,GAAG,CAAE,gBAAF,CAAjB;AACA,YAAMvB,MAAM,GAAG5B,cAAc,CAAC;AAAG2B,QAAAA;AAAH,OAAD,EAAsBwB,QAAtB,CAA7B;;AACA,UAAIC,MAAM,CAACC,IAAP,CAAYzB,MAAZ,EAAoB0B,MAApB,GAA6B,CAAjC,EAAoC;AAClC,eAAO,KAAKlB,QAAL,CAAc;AAAEP,UAAAA,mBAAmB,EAAE;AAAvB,SAAd,CAAP;AACD;;AACD,UAAGF,cAAc,KAAK,QAAtB,EAAgC;AAC9B,aAAKS,QAAL,CAAc;AAAE3B,UAAAA,IAAI,EAAE;AAAR,SAAd;AACA,aAAKwE,kBAAL;AACA,eAAO,KAAKE,mBAAL,EAAP;AACD;;AACD,WAAKF,kBAAL;AACA,aAAO,KAAKG,mBAAL,EAAP;AACD,KA7JuC;;AAAA,SA+JxCC,gBA/JwC,GA+JpBC,IAAD,IAAU;AAC3B,WAAKlD,QAAL,CAAc;AAAEL,QAAAA,YAAY,EAAEuD,IAAhB;AAAsB7E,QAAAA,IAAI,EAAE;AAA5B,OAAd,EACE,MAAK;AACH,aAAK2E,mBAAL;AACA,eAAO,KAAKD,mBAAL,EAAP;AACD,OAJH;AAKD,KArKuC;;AAAA,SAuKxCI,kBAvKwC,GAuKnB,MAAM;AACzB,WAAKnD,QAAL,CAAc;AAAE3B,QAAAA,IAAI,EAAE;AAAR,OAAd,EACA,MAAK;AACH,aAAK2E,mBAAL;AACA,eAAO,KAAKD,mBAAL,EAAP;AACD,OAJD;AAKD,KA7KuC;;AAAA,SAgLxCK,iBAhLwC,GAgLnBC,UAAD,IAAgB;AAClC,YAAM;AAAE1D,QAAAA,YAAF;AAAgBP,QAAAA,WAAhB;AAA6Bd,QAAAA,KAA7B;AAAoCC,QAAAA,MAApC;AAA4CE,QAAAA,SAA5C;AAAuDD,QAAAA,SAAvD;AAAkEG,QAAAA,MAAlE;AAA0EN,QAAAA;AAA1E,UAAoF,KAAKD,KAA/F;AACA,YAAM;AAAEb,QAAAA;AAAF,UAA4B,KAAKoD,KAAvC;AACA,YAAM;AAAEqB,QAAAA,QAAQ,EAAE;AAAE5D,UAAAA;AAAF;AAAZ,UAA0B,KAAKuC,KAAL,CAAWsB,OAA3C;AACA,YAAMqB,OAAO,GAAG;AAACC,QAAAA,MAAM,EAAElF,IAAT;AAAeA,QAAAA,IAAI,EAAE,OAArB;AAA8BmF,QAAAA,WAAW,EAAE7D,YAAY,GAAG,IAAH,GAAU,KAAjE;AAAwE8D,QAAAA,MAAM,EAAE9D,YAAY,IAAIA,YAAY,CAACY;AAA7G,OAAhB;AACA,YAAM2B,OAAO,GAAG;AAAE5D,QAAAA,KAAF;AAAS6D,QAAAA,YAAY,EAAEnE,sBAAsB,CAACO,MAAD,CAA7C;AAAuD6D,QAAAA,QAAQ,EAAE,KAAjE;AAAwE3D,QAAAA,SAAS,EAAE/B,MAAM,CAAC+B,SAAD,CAAN,CAAkB4D,MAAlB,CAAyB,YAAzB,CAAnF;AAA2H7D,QAAAA,SAA3H;AAAsI8E,QAAAA,OAAtI;AAChB3E,QAAAA,MAAM,EAAEX,sBAAsB,CAACW,MAAD,CADd;AACwB+E,QAAAA,aAAa,EAAE1F,sBAAsB,CAACoB,WAAD,CAD7D;AAC4EiE,QAAAA;AAD5E,OAAhB;AAEA,YAAMvC,IAAI,GAAG;AAAEzC,QAAAA,IAAI,EAAE,YAAR;AAAsB6D,QAAAA,OAAtB;AAA+B3B,QAAAA,EAAE,EAAEnC,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEkE,UAAP,CAAkB/B;AAArD,OAAb;AAEAhD,MAAAA,qBAAqB,CAACuD,IAAD,CAArB,CACCe,IADD,CACMf,IAAI,IAAI;AACZzC,QAAAA,IAAI,KAAK,QAAT,IAAqB,KAAKsF,oBAAL,EAArB;AACAtF,QAAAA,IAAI,KAAK,MAAT,IAAmBsB,YAAnB,IAAmC,KAAKgE,oBAAL,EAAnC;AACD,OAJD;AAKD,KA9LuC;;AAAA,SAgMxCA,oBAhMwC,GAgMjB,MAAM;AAC3B,WAAKZ,mBAAL;AACA,WAAKR,uBAAL;AACD,KAnMuC;;AAAA,SAqMxCpB,uBArMwC,GAqMd,MAAM;AAC9B,WAAKnB,QAAL,CAAc;AAAEpB,QAAAA,iBAAiB,EAAE,CAAC,KAAKR,KAAL,CAAWQ;AAAjC,OAAd;AACD,KAvMuC;;AAAA,SAyMxCkD,mBAzMwC,GAyMlB,MAAM;AAC1B,WAAK9B,QAAL,CAAc;AAAEjB,QAAAA,aAAa,EAAE,CAAC,KAAKX,KAAL,CAAWW;AAA7B,OAAd;AACD,KA3MuC;;AAAA,SA6MxC8D,kBA7MwC,GA6MnB,MAAM;AACzB,WAAK7C,QAAL,CAAc;AAAEhB,QAAAA,kBAAkB,EAAE,CAAC,KAAKZ,KAAL,CAAWY;AAAlC,OAAd;AACD,KA/MuC;;AAAA,SAiNxC2D,iBAjNwC,GAiNpB,MAAM;AACxB,WAAK3C,QAAL,CAAc;AAAEd,QAAAA,gBAAgB,EAAE,CAAC,KAAKd,KAAL,CAAWc;AAAhC,OAAd;AACD,KAnNuC;;AAAA,SAqNxC8D,mBArNwC,GAqNlB,MAAM;AAC1B,WAAKhD,QAAL,CAAc;AAAEf,QAAAA,aAAa,EAAE,CAAC,KAAKb,KAAL,CAAWa;AAA7B,OAAd;AACD,KAvNuC;;AAAA,SAyNxCoC,yBAzNwC,GAyNZ,MAAM;AAChC,WAAKrB,QAAL,CAAc;AAAEnB,QAAAA,oBAAoB,EAAE,CAAC,KAAKT,KAAL,CAAWS;AAApC,OAAd;AACD,KA3NuC;;AAAA,SA6NxC0D,uBA7NwC,GA6Nd,MAAM;AAC9B,WAAKvC,QAAL,CAAc;AAAElB,QAAAA,iBAAiB,EAAE,CAAC,KAAKV,KAAL,CAAWU;AAAjC,OAAd;AACD,KA/NuC;;AAAA,SAiOxCiE,mBAjOwC,GAiOlB,MAAM;AAC1B,WAAK/C,QAAL,CAAc4D,SAAS,KAAK;AAAEzE,QAAAA,iBAAiB,EAAE,CAACyE,SAAS,CAACzE;AAAhC,OAAL,CAAvB;AACD,KAnOuC;AAAA;;AA2BxC0E,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAE7B,MAAAA,QAAQ,EAAE;AAAE5D,QAAAA;AAAF;AAAZ,QAA0B,KAAKuC,KAAL,CAAWsB,OAA3C;;AACA,QAAI,EAAC7D,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEkE,UAAR,CAAJ,EAAwB;AACtB,WAAK3B,KAAL,CAAWsB,OAAX,CAAmBQ,IAAnB,CAAwB,qCAAxB;AACD;;AACD,SAAK9B,KAAL,CAAWtD,QAAX;AACD;;AAoMDyG,EAAAA,MAAM,GAAG;AACP,UAAM;AACJnF,MAAAA,MADI;AACIY,MAAAA,cADJ;AACoBf,MAAAA,SADpB;AAEJF,MAAAA,KAFI;AAEGC,MAAAA,MAFH;AAEWE,MAAAA,SAFX;AAGJG,MAAAA,iBAHI;AAGeC,MAAAA,oBAHf;AAGqCE,MAAAA,aAHrC;AAIJC,MAAAA,kBAJI;AAIgBM,MAAAA,QAJhB;AAI0BE,MAAAA,MAJ1B;AAKJP,MAAAA,aALI;AAKWQ,MAAAA,mBALX;AAKgCX,MAAAA,iBALhC;AAMJY,MAAAA,UANI;AAMQR,MAAAA,gBANR;AAM0BE,MAAAA,WAN1B;AAMuCD,MAAAA;AANvC,QAM6D,KAAKf,KANxE;AAQA,UAAM;AAAE2F,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,UAAhB;AAA4BC,MAAAA,eAA5B;AAA6CC,MAAAA,QAA7C;AAAuDC,MAAAA,OAAvD;AAAgEC,MAAAA,UAAhE;AAA4EC,MAAAA;AAA5E,QAA8F,KAAK3D,KAAzG;AACA,UAAM;AAAEqB,MAAAA,QAAQ,EAAE;AAAE5D,QAAAA;AAAF;AAAZ,QAA0B,KAAKuC,KAAL,CAAWsB,OAA3C;AACA,UAAMsC,WAAW,GAAG1G,eAAe,CAACkG,KAAD,CAAnC;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGnF,iBAAiB,iBAChB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKb,cAAc,CAACQ,MAAD,CAAnB,CAA7B,8CAAwF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKR,cAAc,CAACY,MAAD,CAAnB,OAA8BH,SAA9B,CAAxF,MAFF,eAIE;AAAK,MAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,yCAAb;AAAuD,MAAA,OAAO,EAAE,KAAK2C,uBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAQ,MAAA,SAAS,EAAC,wBAAlB;AAA2C,MAAA,OAAO,EAAE,KAAKC,cAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAJF,CADA,CAFJ,EAgBGvC,oBAAoB,iBACnB,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAK2F,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAEE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKnE,SAAzB;AAAoC,MAAA,KAAK,EAAEf,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,eAKE;AAAQ,MAAA,SAAS,EAAC,uCAAlB;AAA0D,MAAA,OAAO,EAAE,KAAKgC,6BAAxE;AAAuG,MAAA,QAAQ,EAAE2C,UAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEGA,UAAU,iBACT;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CALF,EAWG3E,QAAQ,iBAAI;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCA,QAAhC,CAXf,EAYG4E,eAAe,iBAAI;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCA,eAAhC,CAZtB,CADF,CAjBJ,EAkCGpF,iBAAiB,iBAChB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAE2F,OAAO,CAAC,qCAAD,CAAjB;AAA2D,MAAA,GAAG,EAAC,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFF,eAGI;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAqCrG,KAArC,aAAqCA,KAArC,uBAAqCA,KAAK,CAAEkE,UAAP,CAAkBxC,IAAvD,2EAHJ,eAII;AAAQ,MAAA,SAAS,EAAC,uCAAlB;AAA0D,MAAA,OAAO,EAAE,KAAK0C,aAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,CADF,CAnCJ,EA8CGzD,aAAa,iBACZ,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAK+C,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAE2C,OAAO,CAAC,0BAAD,CAAjB;AAA+C,MAAA,GAAG,EAAC,OAAnD;AAA2D,MAAA,OAAO,EAAE,KAAK3C,mBAAzE;AAA8F,MAAA,SAAS,EAAC,gBAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADA,eAIE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DADF,eAEE;AAAK,MAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKsC,OAAO,iBACN;AAAK,MAAA,SAAS,EAAC,2EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFN,eAIE;AAAG,MAAA,SAAS,EAAC,yCAAb;AAAuD,MAAA,OAAO,EAAE,KAAKrC,oBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAJF,eAKE;AAAQ,MAAA,SAAS,EAAC,wBAAlB;AAA2C,MAAA,OAAO,EAAE,KAAKW,iBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CAFF,EAWGyB,QAAQ,IAAI,OAAOA,QAAP,KAAoB,QAAhC,iBAA4C;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCA,QAAhC,CAX/C,CAJF,CA/CJ,EAmEIjF,gBAAgB,iBAChB,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKyD,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEADA,eAEE,oBAAC,OAAD;AACE,MAAA,QAAQ,EAAE,KAAK/C,YADjB;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAC,QAHR;AAIE,MAAA,WAAW,EAAC,QAJd;AAKE,MAAA,IAAI,EAAC,aALP;AAME,MAAA,KAAK,EAAE3B,sBAAsB,CAACmB,WAAD,CAN/B;AAOE,MAAA,KAAK,EAAEI,MAAM,GAAGA,MAAM,CAACJ,WAAV,GAAyBmF,WAAW,IAAIA,WAAW,CAAC,QAAD,CAPlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAaID,aAAa,iBACb;AAAG,MAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAA6D;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACjDA,aAAa,IAAIA,aAAa,CAACI,MAAd,CAAqBC,GAAtC,GAA4CL,aAAa,CAACI,MAAd,CAAqBC,GAAjE,GAAuE,CADtB,CAA7D,CAdJ,eAoBE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,wBAAlB;AAA2C,MAAA,OAAO,EAAE,KAAK/B,uBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CApBF,CApEJ,EA+FG5D,kBAAkB,iBACjB,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAK6D,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG/E,aAAa,CAAC8G,GAAd,CAAkBrB,MAAM,iBACvB,oBAAC,aAAD;AACE,MAAA,QAAQ,EAAE,KAAKjD,kBADjB;AAEE,MAAA,QAAQ,EAAEf,cAAc,KAAKgE,MAAM,CAACxD,KAA1B,GAAkC,IAAlC,GAAyC,KAFrD;AAGE,MAAA,MAAM,EAAEwD,MAAM,CAACsB,MAHjB;AAIE,MAAA,OAAO,EAAEtB,MAAM,CAACuB,OAJlB;AAKE,MAAA,GAAG,EAAEC,IAAI,CAACC,MAAL,KAAgB,IALvB;AAME,MAAA,KAAK,EAAEzB,MAAM,CAACxD,KANhB;AAOE,MAAA,KAAK,EAAEwD,MAAM,CAAC0B,KAPhB;AAQE,MAAA,OAAO,EAAEX,aAAa,IAAIA,aAAa,CAACI,MAAd,CAAqBC,GAAtC,GAA4CL,aAAa,CAACI,MAAd,CAAqBC,GAAjE,GAAuE,CARlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,EAaGlF,mBAAmB,iBAAI;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCA,mBAAhC,CAb1B,CAFF,eAiBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,6BAAlB;AAAgD,MAAA,OAAO,EAAE,KAAKqD,2BAA9D;AAA2F,MAAA,QAAQ,EAAEuB,UAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEGA,UAAU,iBACT;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADF,CAjBF,CADA,CAhGJ,EA6HGpF,aAAa,iBACZ,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEwF,OAAO,CAAC,0BAAD,CAAjB;AAA+C,MAAA,GAAG,EAAC,OAAnD;AAA2D,MAAA,OAAO,EAAE,KAAKzB,mBAAzE;AAA8F,MAAA,SAAS,EAAC,gBAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAKEgB,KAAK,IACLA,KAAK,CAACA,KAAN,CAAY9C,MAAZ,GAAqB,CADrB,IAEA8C,KAAK,CAACA,KAAN,CAAYY,GAAZ,CAAgB1B,IAAI,iBAClB,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEA,IAAjB;AAAuB,MAAA,YAAY,EAAE,KAAKD,gBAA1C;AAA4D,MAAA,GAAG,EAAEC,IAAI,CAAC3C,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,eAYA;AAAK,MAAA,SAAS,EAAC,kEAAf;AAAkF,MAAA,OAAO,EAAE,KAAK4C,kBAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEsB,OAAO,CAAC,6BAAD,CAAjB;AAAkD,MAAA,SAAS,EAAC,gBAA5D;AAA6E,MAAA,GAAG,EAAC,MAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAG,MAAA,SAAS,EAAC,iCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFF,CADF,eAKE;AAAK,MAAA,GAAG,EAAEA,OAAO,CAAC,gCAAD,CAAjB;AAAqD,MAAA,SAAS,EAAC,0BAA/D;AAA0F,MAAA,GAAG,EAAC,OAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAZA,CA9HJ,EAoJKtF,iBAAiB,iBAChB,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAK4D,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF,eAEE;AAAG,MAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAwEvE,SAAxE,qBAFF,CADF,eAKE;AAAK,MAAA,SAAS,EAAC,+CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG6F,UAAU,iBACT;AAAK,MAAA,SAAS,EAAC,2EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAIE;AAAG,MAAA,SAAS,EAAC,yCAAb;AAAuD,MAAA,OAAO,EAAE,MAAM,KAAKjB,iBAAL,CAAuB,KAAvB,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAJF,eAKE;AAAQ,MAAA,SAAS,EAAC,wBAAlB;AAA2C,MAAA,OAAO,EAAE,MAAM,KAAKA,iBAAL,CAAuB,IAAvB,CAA1D;AAAwF,MAAA,QAAQ,EAAEiB,UAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CALF,EAcGF,QAAQ,IAAI,OAAOA,QAAP,KAAoB,QAAhC,iBAA4C;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCA,QAAhC,CAd/C,CArJN,eAuKE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAI,MAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAuD/F,KAAvD,aAAuDA,KAAvD,uBAAuDA,KAAK,CAAEkE,UAAP,CAAkBxC,IAAzE,UADA,CAJF,CAvKF,eA+KE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,QAAQ,EAAE,KAAKF,YADjB;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAC,YAHR;AAIE,MAAA,WAAW,EAAC,YAJd;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,KAAK,EAAEtB,KANT;AAOE,MAAA,KAAK,EAAEkB,MAAM,GAAGA,MAAM,CAAClB,KAAV,GAAmBiG,WAAW,IAAIA,WAAW,CAAC,OAAD,CAP5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF,eAkBE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,QAAQ,EAAE,KAAK3E,YADjB;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAC,eAHR;AAIE,MAAA,WAAW,EAAC,mBAJd;AAKE,MAAA,IAAI,EAAC,QALP;AAME,MAAA,KAAK,EAAE3B,sBAAsB,CAACM,MAAD,CAN/B;AAOE,MAAA,KAAK,EAAEiB,MAAM,GAAGA,MAAM,CAACjB,MAAV,GAAoBgG,WAAW,IAAIA,WAAW,CAAC,QAAD,CAP7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CAlBF,eAmCE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,QAAQ,EAAE,KAAK3E,YADjB;AAEE,MAAA,KAAK,EAAC,WAFR;AAGE,MAAA,WAAW,EAAC,eAHd;AAIE,MAAA,IAAI,EAAC,WAJP;AAKE,MAAA,OAAO,EAAEjC,mBALX;AAME,MAAA,KAAK,EAAC,OANR;AAOE,MAAA,UAAU,EAAC,MAPb;AAQE,MAAA,KAAK,EAAE6B,MAAM,GAAGA,MAAM,CAAChB,SAAV,GAAuB+F,WAAW,IAAIA,WAAW,CAAC,WAAD,CARhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CAnCF,eAqDE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,QAAQ,EAAE,KAAK3E,YADjB;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAC,kBAHR;AAIE,MAAA,WAAW,EAAC,sBAJd;AAKE,MAAA,IAAI,EAAC,QALP;AAME,MAAA,KAAK,EAAE3B,sBAAsB,CAACU,MAAD,CAN/B;AAOE,MAAA,KAAK,EAAEa,MAAM,GAAGA,MAAM,CAACb,MAAV,GAAoB4F,WAAW,IAAIA,WAAW,CAAC,QAAD,CAP7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CArDF,eAsEE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,QAAQ,EAAEnE,IAAI,IAAI,KAAKF,gBAAL,CAAsB,WAAtB,EAAmCE,IAAnC,CADpB;AAEE,MAAA,KAAK,EAAC,YAFR;AAGE,MAAA,WAAW,EAAC,gBAHd;AAIE,MAAA,IAAI,EAAC,WAJP;AAKE,MAAA,KAAK,EAAE3B,SALT;AAME,MAAA,KAAK,EAAEe,MAAM,GAAGA,MAAM,CAACf,SAAV,GAAuB8F,WAAW,IAAIA,WAAW,CAAC,WAAD,CANhE;AAOE,MAAA,GAAG,EAAE,IAAI7F,IAAJ,EAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CAtEF,eAsFE;AAAK,MAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCgB,UAAU,iBAAI;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCA,UAArC,CADf,eAGE;AAAQ,MAAA,SAAS,EAAC,qCAAlB;AAAwD,MAAA,OAAO,EAAE,KAAKc,kBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CAtFF,CADF,CA/KF,CADF;AAkRD;;AApgBuC;;AAwgB1C,MAAM0E,eAAe,GAAI9G,KAAD,IAAW;AACjC,QAAM;AACJ+G,IAAAA,GAAG,EAAE;AACHT,MAAAA,MAAM,EAAE;AAAEV,QAAAA,KAAF;AAASM,QAAAA;AAAT,OADL;AAC+Bc,MAAAA,QAAQ,EAAE;AAAErB,QAAAA,KAAK,EAAEG;AAAT,OADzC;AACqE5B,MAAAA,UAAU,EAAE;AAAE6B,QAAAA;AAAF,OADjF;AAEHkB,MAAAA,OAAO,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAExE,UAAAA;AAAF;AAAf;AAFN;AADD,MAKF1C,KALJ;AAOA,SAAO;AACLgG,IAAAA,OAAO,EAAEhH,qBAAqB,CAACgB,KAAD,EAAQZ,qBAAqB,CAAC+H,2BAA9B,CADzB;AAELlB,IAAAA,UAAU,EAAEjH,qBAAqB,CAACgB,KAAD,EAAQZ,qBAAqB,CAACgI,gCAA9B,CAF5B;AAGLvB,IAAAA,UAAU,EAAE7G,qBAAqB,CAACgB,KAAD,EAAQV,mBAAmB,CAAC+H,mBAA5B,CAH5B;AAILzB,IAAAA,KAJK;AAKLE,IAAAA,eALK;AAMLC,IAAAA,QANK;AAOLG,IAAAA,aAPK;AAQLzD,IAAAA,WAAW,EAAEC,IAAI,IAAIA,IAAI,CAAC4E,GAAb,GAAmB,IAAnB,GAA0B,KARlC;AASL9E,IAAAA,UAAU,EAAEE,IAAI,IAAIA,IAAI,CAACF,UAAL,KAAoB,CAA5B,GAAgC,IAAhC,GAAuC;AAT9C,GAAP;AAWD,CAnBD;;AAqBA,MAAM+E,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLvI,IAAAA,QAAQ,EAAE,MAAMuI,QAAQ,CAACvI,QAAQ,EAAT,CADnB;AAELC,IAAAA,iBAAiB,EAAGwD,IAAD,IAAU8E,QAAQ,CAACtI,iBAAiB,CAACwD,IAAD,CAAlB,CAFhC;AAGLvD,IAAAA,qBAAqB,EAAGuD,IAAD,IAAU8E,QAAQ,CAACrI,qBAAqB,CAACuD,IAAD,CAAtB,CAHpC;AAILrD,IAAAA,UAAU,EAAGyE,OAAD,IAAa0D,QAAQ,CAACnI,UAAU,CAACyE,OAAD,CAAX;AAJ5B,GAAP;AAMD,CAPD;;AASA,eAAe1F,UAAU,CAACC,OAAO,CAACyI,eAAD,EAAkBS,kBAAlB,CAAP,CAA6CzH,WAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport moment from 'moment';\nimport Back from '#/components/Back';\nimport Card from '#/components/Card';\nimport SelectBox from '#/components/SelectBox';\nimport Modal from '#/components/Modal';\nimport PaymentMethod from '#/components/PaymentMethod';\nimport PinInput from '#/components/PinInput';\nimport Textbox from '#/components/Textbox';\nimport DebitCard from '#/components/DebitCard';\nimport DateBox from '#/components/DateBox';\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport { getCards } from '#/store/wallet/actions'\nimport { bookNewInvestment, bookInvestmentWithPay } from '#/store/investment/actions'\nimport investmentActionTypes from '#/store/investment/actionTypes';\nimport { confirmPin } from '#/store/security/actions'\nimport securityActionTypes from '#/store/security/actionTypes';\nimport { \n  investmentFrequency, validateFields, serializeErrors, fundingSource, formatCurrency, formatCurrencyToString, formatStringToCurrency\n} from '#/utils'\nimport './style.scss';\n\nclass Collections extends React.Component {\n\n  state = {\n    type: '',\n    title: '',\n    target: '',\n    frequency: '',\n    startDate: new Date(),\n    amount: '',\n    confirmationModal: false,\n    showTransactionModal: false,\n    setupSuccessModal: false,\n    addMoneyModal: false,\n    fundingSourceModal: false,\n    allCardsModal: false,\n    enterAmountModal: false,\n    showAutomateModal: false,\n    finalAmount: '',\n    pin: {},\n    pinError: null,\n    selectedMethod: '',\n    errors: null,\n    selectedMethodError: null,\n    entryError: null,\n    selectedCard: null,\n  }\n\n  componentDidMount() {\n    const { location: { state } } = this.props.history\n    if (!state?.investment) {\n      this.props.history.push('/app/marketplace/termed-investments')\n    }\n    this.props.getCards();\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    if(name === 'target' || name === 'amount' || name === 'finalAmount') {\n      this.setState({ errors: null});\n        return this.setState({ [name]: formatCurrencyToString(value)}, ()=> {\n          if(isNaN(this.state[name])) {\n            return this.setState({ errors: { [name]: 'enter a valid number' } })\n          }\n        });\n      }\n    this.setState({ [name]: value });\n  }\n\n  handleChangeDate = (item, date) => {\n    this.setState({ [item]: date });\n  }\n\n  handlePin = (pin) => {\n    this.setState({pin})\n  }\n\n  handleSelectMethod = (event) => {\n    this.setState({ selectedMethod: event.target.id });\n  }\n\n  //handles displaying the confirmation modal for the investment\n  handleComfirmation = (e) => {\n    e.preventDefault();\n    this.setState({ errors: null, entryError: null  });\n\n    if(!this.props.isApproved) {\n      return this.setState({ entryError: 'Your account is awaiting approval' })\n    }\n    if(!this.props.isBvnActive){\n      return this.setState({ entryError: 'Access denied. Please complete your BVN profile' })\n    }\n    const data = this.state;\n    const required = [ 'title', 'target', 'frequency', 'startDate', 'amount' ];\n    const errors = validateFields(data, required)\n\n    if (Object.keys(errors).length > 0) {\n      return this.setState({ errors });\n    }\n    this.toggleConfirmationModal();\n  }\n\n  //move to enterering transaction pin\n  handleEnterPin = () => {\n    this.toggleConfirmationModal();\n    this.toggleTransactionPinModal();\n  }\n\n  //submit transaction pin for verification\n  handleTransactionVerification = (e) => {\n    e.preventDefault()\n    const { pin } = this.state\n    const { confirmPin } = this.props\n    this.setState({ pinError: null })\n\n    const initialPin = [ pin.value1, pin.value2, pin.value3, pin.value4 ].join('');\n    if (initialPin.length < 4) {\n      return this.setState({ pinError: 'field is required'})\n    }\n    confirmPin({ pin: initialPin })\n      .then(data => {\n        this.toggleTransactionPinModal();\n        this.toggleAddMoneyModal()\n    })\n  }\n\n  //submit booking details without payment\n  handleBookWithoutPay = (e) => {\n    e.preventDefault();\n\n    const { bookNewInvestment } = this.props;\n    const { location: { state } } = this.props.history\n    const { title, target, startDate, amount, frequency } = this.state\n    const payload = { title, targetAmount: formatCurrencyToString(target), currency: 'NGN', startDate: moment(startDate).format('YYYY-MM-DD'), amount: formatCurrencyToString(amount), frequency }\n    const data = { type: 'collection', payload, id: state?.investment.id }\n\n    bookNewInvestment(data)\n    .then(data => {\n      this.toggleAddMoneyModal();\n      this.toggleSetupSuccessModal();\n    });\n  }\n\n  //handle proceed from the success modal\n  handleSuccess = () => {\n    this.toggleSetupSuccessModal();\n    this.props.history.push('/app/marketplace/termed-investments')\n  }\n\n  //displays the modal to enter the amount you might want to invest\n  handleEnterAmount = () => {\n    this.toggleAddMoneyModal();\n    this.toggleAmountModal();\n  }\n\n  //displays the modal to select a funding course\n  handlePickFundingSource = () => {\n\n    this.toggleAmountModal();\n    this.toggleFundingModal();\n  }\n  \n  // handles for when a funcding source is selected\n  handleSelectedFundingSource = () => {\n    const { selectedMethod } = this.state\n    \n    const required = [ 'selectedMethod'];\n    const errors = validateFields({  selectedMethod }, required)\n    if (Object.keys(errors).length > 0) {\n      return this.setState({ selectedMethodError: 'please select a method' });\n    }\n    if(selectedMethod === 'wallet') {\n      this.setState({ type: 'wallet' });\n      this.toggleFundingModal();\n      return this.toggleAutomateModal();\n    }\n    this.toggleFundingModal();\n    return this.toggleAllCardsModal()\n  }\n\n  handleSelectCard = (card) => {\n    this.setState({ selectedCard: card, type: 'card' }, \n      ()=> {\n        this.toggleAllCardsModal();\n        return this.toggleAutomateModal();\n      })\n  }\n\n  handleAutomateStep = () => {\n    this.setState({ type: 'card' }, \n    ()=> {\n      this.toggleAllCardsModal();\n      return this.toggleAutomateModal();\n    })\n  }\n\n  //submit booking details without payment\n  handleBookWithPay = (autoCharge) => {\n    const { selectedCard, finalAmount, title, target, startDate, frequency, amount, type  } = this.state;\n    const { bookInvestmentWithPay } = this.props;\n    const { location: { state } } = this.props.history\n    const payment = {method: type, type: 'debit', reoccurring: selectedCard ? true : false, cardId: selectedCard && selectedCard.id}\n    const payload = { title, targetAmount: formatCurrencyToString(target), currency: 'NGN', startDate: moment(startDate).format('YYYY-MM-DD'), frequency, payment,\n    amount: formatCurrencyToString(amount), initialAmount: formatCurrencyToString(finalAmount), autoCharge }\n    const data = { type: 'collection', payload, id: state?.investment.id }\n\n    bookInvestmentWithPay(data)\n    .then(data => {\n      type === 'wallet' && this.closeAutomateSuccess();\n      type === 'card' && selectedCard && this.closeAutomateSuccess();\n    });\n  }\n\n  closeAutomateSuccess = () => {\n    this.toggleAutomateModal();\n    this.toggleSetupSuccessModal();\n  }\n\n  toggleConfirmationModal = () => {\n    this.setState({ confirmationModal: !this.state.confirmationModal })\n  }\n\n  toggleAddMoneyModal = () => {\n    this.setState({ addMoneyModal: !this.state.addMoneyModal })\n  }\n\n  toggleFundingModal = () => {\n    this.setState({ fundingSourceModal: !this.state.fundingSourceModal })\n  }\n\n  toggleAmountModal = () => {\n    this.setState({ enterAmountModal: !this.state.enterAmountModal })\n  }\n\n  toggleAllCardsModal = () => {\n    this.setState({ allCardsModal: !this.state.allCardsModal })\n  }\n\n  toggleTransactionPinModal = () => {\n    this.setState({ showTransactionModal: !this.state.showTransactionModal })\n  }\n\n  toggleSetupSuccessModal = () => {\n    this.setState({ setupSuccessModal: !this.state.setupSuccessModal })\n  }\n\n  toggleAutomateModal = () => {\n    this.setState(prevState => ({ showAutomateModal: !prevState.showAutomateModal }));\n  }\n\n  render() {\n    const { \n      amount, selectedMethod, frequency, \n      title, target, startDate, \n      confirmationModal, showTransactionModal, addMoneyModal, \n      fundingSourceModal, pinError, errors,\n      allCardsModal, selectedMethodError, setupSuccessModal,\n      entryError, enterAmountModal, finalAmount, showAutomateModal } = this.state;\n\n    const { error, cards, pinLoading, confirmPinError, newError, loading, payLoading, walletDetails } = this.props;\n    const { location: { state } } = this.props.history\n    const errorObject = serializeErrors(error);\n\n    return (\n      <div className=\"collections-page\">\n        {confirmationModal &&\n          <Modal>\n          <div className=\"text-left\">\n            <h3 className=\"text-deep-blue\">Confirm Investment Setup</h3>\n            <p>To achieve your target of <b>N{formatCurrency(target)}</b>, you have decided to save <b>N{formatCurrency(amount)} {frequency}</b>.\n            </p>\n            <div className=\"d-flex justify-content-end align-items-center\">\n              <p className=\"text-deep-blue mr-3 mb-0 cursor-pointer\" onClick={this.toggleConfirmationModal}>Review Plan</p>\n              <button className=\"btn btn-sm btn-primary\" onClick={this.handleEnterPin}>\n                Set up\n              </button>\n            </div>\n          </div>\n        </Modal>\n        }\n        {showTransactionModal &&\n          <Modal onClose={this.toggleModal}>\n            <div className=\"text-center\">\n              <h3>Enter Transaction PIN</h3>\n              <div className=\"w-100 ml-auto mr-auto mt-3\">\n                <PinInput onChange={this.handlePin} error={pinError}/>\n              </div>\n              <button className=\"btn btn-sm btn-primary btn-block mt-5\" onClick={this.handleTransactionVerification} disabled={pinLoading}>\n                Confirm Investment Setup\n                {pinLoading &&\n                  <div className=\"spinner-border spinner-border-white spinner-border-sm ml-2\"></div>\n                }\n              </button>\n              {pinError && <p className=\"text-error mt-2\">{pinError}</p>}\n              {confirmPinError && <p className=\"text-error mt-2\">{confirmPinError}</p>}\n            </div>\n          </Modal>\n        }\n        {setupSuccessModal &&\n          <Modal>\n            <div className=\"text-center\">\n              <img src={require('#/assets/icons/complete-success.svg')}  alt=\"setup\"/>\n              <h3>Investment setup successful!</h3>\n                <p className=\"text-black mb-0\">Your {state?.investment.name} plan has been setup you can start enjoying returns on your principal.</p>\n                <button className=\"btn btn-sm btn-primary btn-block mt-3\" onClick={this.handleSuccess}>\n                  Proceed\n                </button>\n            </div>\n          </Modal>\n        }\n        {addMoneyModal &&\n          <Modal onClose={this.toggleAddMoneyModal}>\n          <div className=\"text-right pb-3\">\n            <img src={require('#/assets/icons/close.svg')} alt=\"close\" onClick={this.toggleAddMoneyModal} className=\"cursor-pointer\" />\n          </div>\n            <div className=\"text-left\">\n              <h3>Do you want to add money to this investment now?</h3>\n              <div className=\"d-flex justify-content-end align-items-center\">\n                  {loading &&\n                    <div className=\"spinner-border spinner-border-primary text-primary spinner-border-sm mr-2\"></div>\n                  }\n                <p className=\"mr-3 text-deep-blue mb-0 cursor-pointer\" onClick={this.handleBookWithoutPay}>No, I’ll add money later</p>\n                <button className=\"btn btn-sm btn-primary\" onClick={this.handleEnterAmount}>\n                  Yes\n                </button>\n              </div>\n              {newError && typeof newError === 'string' && <p className=\"text-error mt-2\">{newError}</p>}\n            </div>\n          </Modal>\n        }\n        {\n          enterAmountModal &&\n          <Modal onClose={this.toggleAmountModal}>\n            <div>\n            <h3 className=\"text-deep-blue\">How much do you want to add to this investment right now?</h3>\n              <Textbox\n                onChange={this.handleChange}\n                type=\"text\"\n                label=\"Amount\"\n                placeholder=\"Amount\"\n                name=\"finalAmount\"\n                value={formatStringToCurrency(finalAmount)}\n                error={errors ? errors.finalAmount : (errorObject && errorObject['amount'])}\n              />\n            </div>\n            { walletDetails &&  \n              <p className=\"text-grey text-x-small mb-0\">Available balance <span className=\"text-deep-blue\">\n                &#x20A6; {walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : 0}\n                </span>\n              </p>\n            }\n\n            <div className=\"text-right mt-2\">\n              <button className=\"btn btn-sm btn-primary\" onClick={this.handlePickFundingSource}>\n                Proceed\n              </button>\n            </div>\n          </Modal>\n        }\n        {fundingSourceModal &&\n          <Modal onClose={this.toggleFundingModal}>\n          <div className=\"text-left\">\n            <h3>Choose a funding source</h3>\n            <div>\n              {fundingSource.map(method => (\n                <PaymentMethod\n                  onSelect={this.handleSelectMethod}\n                  selected={selectedMethod === method.value ? true : false}\n                  imgUrl={method.imgUrl}\n                  imgBlue={method.imgBlue}\n                  key={Math.random() * 1000}\n                  value={method.value}\n                  label={method.label}\n                  balance={walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : 0}\n                />\n              ))}\n              {selectedMethodError && <p className=\"text-error mt-2\">{selectedMethodError}</p>}\n            </div>\n            <div className=\"text-right\">\n              <button className=\"btn btn-sm btn-primary mt-3\" onClick={this.handleSelectedFundingSource} disabled={payLoading}>\n                Proceed\n                {payLoading &&\n                  <div className=\"spinner-border spinner-border-white spinner-border-sm ml-2\"></div>\n                }\n              </button>\n            </div>\n          </div>\n        </Modal>\n        }\n        {allCardsModal &&\n          <Modal>\n            <div className=\"text-right pb-3\">\n              <img src={require('#/assets/icons/close.svg')} alt=\"close\" onClick={this.toggleAllCardsModal} className=\"cursor-pointer\" />\n            </div>\n            {\n            cards &&\n            cards.cards.length > 0 && \n            cards.cards.map(card => (\n              <DebitCard card={card} handleSelect={this.handleSelectCard} key={card.id}/> \n            ))\n          }\n\n          <div className=\"d-flex justify-content-between align-items-center cursor-pointer\" onClick={this.handleAutomateStep}>\n            <div className=\"d-flex align-items-center\">\n              <img src={require('#/assets/icons/add-card.svg')} className=\"img-fluid mr-3\" alt=\"card\" />\n              <p className=\"text-deep-blue text-medium mb-0\">Add money from a new debit card</p>\n            </div>\n            <img src={require('#/assets/icons/right-arrow.svg')} className=\"img-fluid cursor-pointer\" alt=\"arrow\" />\n          </div>\n          </Modal>\n        }\n\n          {showAutomateModal &&\n            <Modal onClose={this.toggleAutomateModal}>\n              <div className=\"text-left\">\n                <h3>Automate funding for this investment</h3>\n                <p className=\"text-small text-black\">Allow us to fund from your source {frequency} without asking.</p>\n              </div>\n              <div className=\"d-flex justify-content-end align-items-center\">\n                {payLoading &&\n                  <div className=\"spinner-border spinner-border-primary text-primary spinner-border-sm mr-2\"></div>\n                }\n                <p className=\"mr-3 text-deep-blue mb-0 cursor-pointer\" onClick={() => this.handleBookWithPay(false)}>No, I’ll add money myself</p>\n                <button className=\"btn btn-sm btn-primary\" onClick={() => this.handleBookWithPay(true)} disabled={payLoading}>\n                  Yes\n              </button>\n              </div>\n              {newError && typeof newError === 'string' && <p className=\"text-error mt-2\">{newError}</p>}\n            </Modal>\n          }\n\n        <div className=\"row\">\n          <div className=\"col-md-2\">\n            <Back />\n          </div>\n          <div className=\"col-md-7 text-center\">\n          <h3 className=\"text-medium text-deep-blue\">Create new {state?.investment.name} plan</h3>\n          </div>\n        </div>\n        <Card classes=\"card p-4 mt-3\">\n          <form>\n            <div className=\"row align-items-center\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium mt-3\">Give your new investment a name. You could name it after your goal. E.g. Freedom goal</p>\n              </div>\n              <div className=\"col-md-6\">\n                <Textbox\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  label=\"Plan title\"\n                  placeholder=\"Plan title\"\n                  name=\"title\"\n                  value={title}\n                  error={errors ? errors.title : (errorObject && errorObject['title'])}\n                />\n              </div>\n            </div>\n\n            <div className=\"row mt-4 align-items-center\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium mt-3\">How much do you need to make this goal work?</p>\n              </div>\n              <div className=\"col-md-6\">\n                <Textbox\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  label=\"Target amount\"\n                  placeholder=\"Set target amount\"\n                  name=\"target\"\n                  value={formatStringToCurrency(target)}\n                  error={errors ? errors.target : (errorObject && errorObject['target'])}\n                />\n              </div>\n            </div>\n\n            <div className=\"row mt-4 align-items-center\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium mt-3 \">How often do you want to set money aside for this investment?</p>\n              </div>\n              <div className=\"col-md-6\">\n                <SelectBox\n                  onChange={this.handleChange}\n                  label=\"Frequency\"\n                  placeholder=\"Set frequency\"\n                  name=\"frequency\"\n                  options={investmentFrequency}\n                  value=\"value\"\n                  optionName=\"name\"\n                  error={errors ? errors.frequency : (errorObject && errorObject['frequency'])}\n                />\n              </div>\n            </div>\n\n            <div className=\"row mt-4 align-items-center\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium mt-3\">How much do you want to pay on every frequency?</p>\n              </div>\n              <div className=\"col-md-6\">\n                <Textbox\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  label=\"Frequency amount\"\n                  placeholder=\"Set frequency amount\"\n                  name=\"amount\"\n                  value={formatStringToCurrency(amount)}\n                  error={errors ? errors.amount : (errorObject && errorObject['amount'])}\n                />\n              </div>\n            </div>\n\n            <div className=\"row mt-4 align-items-center\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium mt-3\">When do you want to start?</p>\n              </div>\n              <div className=\"col-md-6\">\n                <DateBox\n                  onChange={date => this.handleChangeDate('startDate', date)}\n                  label=\"Start Date\"\n                  placeholder=\"Set start date\"\n                  name=\"startDate\"\n                  value={startDate}\n                  error={errors ? errors.startDate : (errorObject && errorObject['startDate'])}\n                  min={new Date()}\n                />\n              </div>\n            </div>\n            <div className=\"text-right mt-3 d-flex justify-content-end\">\n            {entryError && <p className=\"text-error mt-2 mr-3\">{entryError}</p>}\n\n              <button className=\"btn btn-sm btn-primary btn-md-block\" onClick={this.handleComfirmation}>\n                Proceed\n              </button>\n            </div>\n          </form>\n        </Card>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  const { \n    app: { \n      wallet: { cards, walletDetails }, security: { error: confirmPinError }, investment: { newError },\n      profile: { userProfile: { data } }\n    }\n  } = state;\n\n  return {\n    loading: getActionLoadingState(state, investmentActionTypes.BOOK_NEW_INVESTMENT_REQUEST),\n    payLoading: getActionLoadingState(state, investmentActionTypes.BOOK_INVESTMENT_WITH_PAY_REQUEST),\n    pinLoading: getActionLoadingState(state, securityActionTypes.CONFIRM_PIN_REQUEST),\n    cards,\n    confirmPinError,\n    newError,\n    walletDetails,\n    isBvnActive: data && data.bvn ? true : false,\n    isApproved: data && data.isApproved === 1 ? true : false,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getCards: () => dispatch(getCards()),\n    bookNewInvestment: (data) => dispatch(bookNewInvestment(data)),\n    bookInvestmentWithPay: (data) => dispatch(bookInvestmentWithPay(data)),\n    confirmPin: (payload) => dispatch(confirmPin(payload)),\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Collections));\n"]},"metadata":{},"sourceType":"module"}