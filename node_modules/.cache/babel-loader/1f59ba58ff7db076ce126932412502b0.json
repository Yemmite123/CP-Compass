{"ast":null,"code":"import * as actions from \"./actionTypes\";\nconst portfolioDefaultState = {\n  data: null,\n  error: false,\n  loading: false,\n  funds: null,\n  fund: null\n};\nexport default ((state = portfolioDefaultState, action) => {\n  var _action$data;\n\n  switch (action.type) {\n    case actions.CLEAR_DATA:\n      return { ...state,\n        data: null\n      };\n\n    case actions.CLEAR_ERROR:\n      return { ...state,\n        error: false\n      };\n\n    case actions.GET_ACTIVE_PPI_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        funds: (_action$data = action.data) === null || _action$data === void 0 ? void 0 : _action$data.data,\n        data: action.data\n      };\n\n    case actions.GET_ACTIVE_PPI_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actions.GET_SINGLE_PPI_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        fund: action.data\n      };\n\n    case actions.GET_SINGLE_PPI_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actions.SUBMIT_MUTUAL_FORM_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        data: action.data\n      };\n\n    case actions.SUBMIT_MUTUAL_FORM_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    case actions.SEND_FORM_TO_EMAIL_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: false,\n        data: action.data\n      };\n\n    case actions.SEND_FORM_TO_EMAIL_ERROR:\n      return { ...state,\n        loading: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/store/ppi/index.js"],"names":["actions","portfolioDefaultState","data","error","loading","funds","fund","state","action","type","CLEAR_DATA","CLEAR_ERROR","GET_ACTIVE_PPI_SUCCESS","GET_ACTIVE_PPI_ERROR","GET_SINGLE_PPI_SUCCESS","GET_SINGLE_PPI_ERROR","SUBMIT_MUTUAL_FORM_SUCCESS","SUBMIT_MUTUAL_FORM_ERROR","SEND_FORM_TO_EMAIL_SUCCESS","SEND_FORM_TO_EMAIL_ERROR"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,eAAzB;AAEA,MAAMC,qBAAqB,GAAG;AAC5BC,EAAAA,IAAI,EAAE,IADsB;AAE5BC,EAAAA,KAAK,EAAE,KAFqB;AAG5BC,EAAAA,OAAO,EAAE,KAHmB;AAI5BC,EAAAA,KAAK,EAAE,IAJqB;AAK5BC,EAAAA,IAAI,EAAE;AALsB,CAA9B;AAQA,gBAAe,CAACC,KAAK,GAAGN,qBAAT,EAAgCO,MAAhC,KAA2C;AAAA;;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,OAAO,CAACU,UAAb;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYL,QAAAA,IAAI,EAAE;AAAlB,OAAP;;AACF,SAAKF,OAAO,CAACW,WAAb;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYJ,QAAAA,KAAK,EAAE;AAAnB,OAAP;;AACF,SAAKH,OAAO,CAACY,sBAAb;AACE,aAAO,EAAE,GAAGL,KAAL;AAAYH,QAAAA,OAAO,EAAE,KAArB;AAA4BD,QAAAA,KAAK,EAAE,KAAnC;AAA0CE,QAAAA,KAAK,kBAAEG,MAAM,CAACN,IAAT,iDAAE,aAAaA,IAA9D;AAAoEA,QAAAA,IAAI,EAAEM,MAAM,CAACN;AAAjF,OAAP;;AACF,SAAKF,OAAO,CAACa,oBAAb;AACE,aAAO,EAAE,GAAGN,KAAL;AAAYH,QAAAA,OAAO,EAAE,KAArB;AAA4BD,QAAAA,KAAK,EAAEK,MAAM,CAACL;AAA1C,OAAP;;AACF,SAAKH,OAAO,CAACc,sBAAb;AACE,aAAO,EAAE,GAAGP,KAAL;AAAYH,QAAAA,OAAO,EAAE,KAArB;AAA4BD,QAAAA,KAAK,EAAE,KAAnC;AAA0CG,QAAAA,IAAI,EAAEE,MAAM,CAACN;AAAvD,OAAP;;AACF,SAAKF,OAAO,CAACe,oBAAb;AACE,aAAO,EAAE,GAAGR,KAAL;AAAYH,QAAAA,OAAO,EAAE,KAArB;AAA4BD,QAAAA,KAAK,EAAEK,MAAM,CAACL;AAA1C,OAAP;;AACF,SAAKH,OAAO,CAACgB,0BAAb;AACE,aAAO,EAAE,GAAGT,KAAL;AAAYH,QAAAA,OAAO,EAAE,KAArB;AAA4BD,QAAAA,KAAK,EAAE,KAAnC;AAA0CD,QAAAA,IAAI,EAAEM,MAAM,CAACN;AAAvD,OAAP;;AACF,SAAKF,OAAO,CAACiB,wBAAb;AACE,aAAO,EAAE,GAAGV,KAAL;AAAYH,QAAAA,OAAO,EAAE,KAArB;AAA4BD,QAAAA,KAAK,EAAEK,MAAM,CAACL;AAA1C,OAAP;;AACF,SAAKH,OAAO,CAACkB,0BAAb;AACE,aAAO,EAAE,GAAGX,KAAL;AAAYH,QAAAA,OAAO,EAAE,KAArB;AAA4BD,QAAAA,KAAK,EAAE,KAAnC;AAA0CD,QAAAA,IAAI,EAAEM,MAAM,CAACN;AAAvD,OAAP;;AACF,SAAKF,OAAO,CAACmB,wBAAb;AACE,aAAO,EAAE,GAAGZ,KAAL;AAAYH,QAAAA,OAAO,EAAE,KAArB;AAA4BD,QAAAA,KAAK,EAAEK,MAAM,CAACL;AAA1C,OAAP;;AACF;AACE,aAAOI,KAAP;AAtBJ;AAwBD,CAzBD","sourcesContent":["import * as actions from \"./actionTypes\";\n\nconst portfolioDefaultState = {\n  data: null,\n  error: false,\n  loading: false,\n  funds: null,\n  fund: null,\n}\n\nexport default (state = portfolioDefaultState, action) => {\n  switch (action.type) {\n    case actions.CLEAR_DATA:\n      return { ...state, data: null };\n    case actions.CLEAR_ERROR:\n      return { ...state, error: false };\n    case actions.GET_ACTIVE_PPI_SUCCESS:\n      return { ...state, loading: false, error: false, funds: action.data?.data, data: action.data }\n    case actions.GET_ACTIVE_PPI_ERROR:\n      return { ...state, loading: false, error: action.error };\n    case actions.GET_SINGLE_PPI_SUCCESS:\n      return { ...state, loading: false, error: false, fund: action.data }\n    case actions.GET_SINGLE_PPI_ERROR:\n      return { ...state, loading: false, error: action.error };\n    case actions.SUBMIT_MUTUAL_FORM_SUCCESS:\n      return { ...state, loading: false, error: false, data: action.data }\n    case actions.SUBMIT_MUTUAL_FORM_ERROR:\n      return { ...state, loading: false, error: action.error };\n    case actions.SEND_FORM_TO_EMAIL_SUCCESS:\n      return { ...state, loading: false, error: false, data: action.data }\n    case actions.SEND_FORM_TO_EMAIL_ERROR:\n      return { ...state, loading: false, error: action.error };\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}