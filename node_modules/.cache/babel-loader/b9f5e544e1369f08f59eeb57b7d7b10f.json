{"ast":null,"code":"var _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Support/UserGuide/index.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport actionTypes from \"#/store/support/actionTypes\";\nimport { getAllUserGuides } from '#/store/support/actions';\nimport './style.scss';\n\nclass UserGuide extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stageOne: true,\n      stageTwo: false,\n      stageThree: false,\n      selectedGuide: null,\n      selectedGuideItem: null\n    };\n\n    this.handleSelectGuide = id => {\n      const {\n        guides\n      } = this.props;\n      const foundGuide = guides && guides.find(guide => guide.id === id);\n      this.setState({\n        selectedGuide: foundGuide\n      }, () => {\n        this.toggleStageOne();\n        this.toggleStageTwo();\n      });\n    };\n\n    this.handleSelectedGuideItem = id => {\n      const {\n        selectedGuide\n      } = this.state;\n      const foundGuideItem = selectedGuide && selectedGuide.guides.find(guide => guide.id === id);\n      this.setState({\n        selectedGuideItem: foundGuideItem\n      }, () => {\n        this.toggleStageTwo();\n        this.toggleStageThree();\n      });\n    };\n\n    this.handleViewGuideinfo = () => {\n      this.toggleStageThree();\n      this.toggleStageTwo();\n    };\n\n    this.handleHome = () => {\n      const {\n        stageThree\n      } = this.state;\n\n      if (stageThree) {\n        this.toggleStageThree();\n        return this.toggleStageOne();\n      }\n\n      this.toggleStageTwo();\n      return this.toggleStageOne();\n    };\n\n    this.toggleStageOne = () => {\n      this.setState(prevstate => ({\n        stageOne: !prevstate.stageOne\n      }));\n    };\n\n    this.toggleStageTwo = () => {\n      this.setState(prevstate => ({\n        stageTwo: !prevstate.stageTwo\n      }));\n    };\n\n    this.toggleStageThree = () => {\n      this.setState(prevstate => ({\n        stageThree: !prevstate.stageThree\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllUserGuides();\n  }\n\n  render() {\n    var _selectedGuide$guides;\n\n    const {\n      guides,\n      loading\n    } = this.props;\n    const {\n      stageOne,\n      stageTwo,\n      stageThree,\n      selectedGuide,\n      selectedGuideItem\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-guide-page mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-primary text-primary spinner-border-md mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    })), stageOne && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, guides && guides.length > 0 ? guides.map(guide => {\n      var _guide$content, _guide$content2;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4 mt-3\",\n        key: guide.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"guide-item p-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }\n      }, guide.image && /*#__PURE__*/React.createElement(\"img\", {\n        src: guide.image,\n        alt: \"\",\n        className: \"img-fluid attachment-img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"text-medium mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, guide.title), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"font-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, (guide === null || guide === void 0 ? void 0 : (_guide$content = guide.content) === null || _guide$content === void 0 ? void 0 : _guide$content.length) > 40 ? `${guide === null || guide === void 0 ? void 0 : (_guide$content2 = guide.content) === null || _guide$content2 === void 0 ? void 0 : _guide$content2.substring(0, 40)}...` : guide === null || guide === void 0 ? void 0 : guide.content), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-blue font-light cursor-pointer\",\n        onClick: () => this.handleSelectGuide(guide.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, \"View More\")));\n    }) : !loading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"font-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, \"No user guides available\"))), stageTwo && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stage-two\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"cursor-pointer\",\n      onClick: this.handleHome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"Home\")), \" \", '>', \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, \" \", selectedGuide && selectedGuide.title)), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"Topic: \", selectedGuide && selectedGuide.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"font-light text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \"Genegeral information about \", selectedGuide && selectedGuide.name), selectedGuide && ((_selectedGuide$guides = selectedGuide.guides) === null || _selectedGuide$guides === void 0 ? void 0 : _selectedGuide$guides.length) > 0 ? selectedGuide.guides.map(guide => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      key: guide.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/external-link.svg'),\n      className: \"mr-2\",\n      alt: \"link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-blue mb-0 text-small cursor-pointer\",\n      onClick: () => this.handleSelectedGuideItem(guide.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, guide.title))) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \" No items for this guide\")), stageThree && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stage-three\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"cursor-pointer\",\n      onClick: this.handleHome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, \"Home\"), \" \", '>', \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"cursor-pointer\",\n      onClick: this.handleViewGuideinfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 94\n      }\n    }, selectedGuide && selectedGuide.title), \" \", '>'), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 24\n      }\n    }, \" \", selectedGuideItem && selectedGuideItem.title)), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, selectedGuideItem && selectedGuideItem.title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, selectedGuideItem && selectedGuideItem.content), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, (selectedGuideItem === null || selectedGuideItem === void 0 ? void 0 : selectedGuideItem.image) && /*#__PURE__*/React.createElement(\"img\", {\n      src: selectedGuideItem === null || selectedGuideItem === void 0 ? void 0 : selectedGuideItem.image,\n      alt: \"attachment\",\n      className: \"attachment-img img-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 42\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    app: {\n      support: {\n        guides,\n        error\n      }\n    }\n  } = state;\n  return {\n    loading: getActionLoadingState(state, actionTypes.GET_ALL_USER_GUIDES_REQUEST),\n    error,\n    guides\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getAllUserGuides: () => dispatch(getAllUserGuides())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(UserGuide));","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Support/UserGuide/index.js"],"names":["React","connect","withRouter","getActionLoadingState","actionTypes","getAllUserGuides","UserGuide","Component","state","stageOne","stageTwo","stageThree","selectedGuide","selectedGuideItem","handleSelectGuide","id","guides","props","foundGuide","find","guide","setState","toggleStageOne","toggleStageTwo","handleSelectedGuideItem","foundGuideItem","toggleStageThree","handleViewGuideinfo","handleHome","prevstate","componentDidMount","render","loading","length","map","image","title","content","substring","name","require","mapStateToProps","app","support","error","GET_ALL_USER_GUIDES_REQUEST","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport actionTypes from \"#/store/support/actionTypes\";\nimport { getAllUserGuides } from '#/store/support/actions'\nimport './style.scss';\n\nclass UserGuide extends React.Component {\n\n  state = {\n    stageOne: true,\n    stageTwo: false,\n    stageThree: false,\n    selectedGuide: null,\n    selectedGuideItem: null,\n  }\n\n  componentDidMount() {\n    this.props.getAllUserGuides()\n  }\n\n  handleSelectGuide = (id) => {\n    const { guides } = this.props;\n    const foundGuide = guides && guides.find(guide => guide.id === id)\n    this.setState({ selectedGuide: foundGuide }, () => {\n      this.toggleStageOne();\n      this.toggleStageTwo();\n    })\n  }\n\n  handleSelectedGuideItem = (id) => {\n    const { selectedGuide } = this.state;\n    const foundGuideItem = selectedGuide && selectedGuide.guides.find(guide => guide.id === id)\n    this.setState({ selectedGuideItem: foundGuideItem}, () => {\n      this.toggleStageTwo();\n      this.toggleStageThree();\n    })\n  }\n\n  handleViewGuideinfo = () => {\n    this.toggleStageThree();\n    this.toggleStageTwo();\n  }\n\n  handleHome = () => {\n    const { stageThree } = this.state;\n    if(stageThree) {\n      this.toggleStageThree();\n      return this.toggleStageOne();\n    }\n    this.toggleStageTwo();\n    return this.toggleStageOne();\n  }\n\n  toggleStageOne = () => {\n    this.setState(prevstate => ({ stageOne: !prevstate.stageOne }))\n  }\n\n  toggleStageTwo = () => {\n    this.setState(prevstate => ({ stageTwo: !prevstate.stageTwo }))\n  }\n\n  toggleStageThree = () => {\n    this.setState(prevstate => ({ stageThree: !prevstate.stageThree }))\n  }\n\n  render() {\n    const { guides, loading } = this.props;\n    const { stageOne, stageTwo, stageThree, selectedGuide, selectedGuideItem } = this.state;\n\n    return (\n      <div className=\"user-guide-page mt-4\">\n        {loading &&\n            <div className=\"text-center p-4\">\n              <div className=\"spinner-border spinner-border-primary text-primary spinner-border-md mr-2\"></div>\n            </div>\n          }\n        {stageOne &&\n          <div className=\"row\">\n            {guides && guides.length > 0 ?\n              guides.map(guide => (\n                <div className=\"col-md-4 mt-3\" key={guide.id}>\n                  <div className=\"guide-item p-5\">\n                    {guide.image && <img src={guide.image} alt=\"\" className=\"img-fluid attachment-img\" />}\n                    <h3 className=\"text-medium mt-3\">{guide.title}</h3>\n                    <p className=\"font-light\">{guide?.content?.length > 40 ? `${guide?.content?.substring(0,40)}...` : guide?.content}</p>\n                    <p className=\"text-blue font-light cursor-pointer\" onClick={() => this.handleSelectGuide(guide.id)}>View More</p>\n                  </div>\n                </div>\n              ))\n              :\n              (!loading &&\n                <div className=\"text-center mt-2\">\n                  <p className=\"font-light\">No user guides available</p>\n                </div>\n              )\n            }\n          </div>\n        }\n        {stageTwo &&\n          <div className=\"stage-two\">\n            <p className=\"text-small\">\n              <span className=\"text-grey\">\n                <span className=\"cursor-pointer\" onClick={this.handleHome}>Home</span>\n              </span> {'>'} <span className=\"text-blue\"> {selectedGuide && selectedGuide.title}</span> \n            </p>\n            <h3 className=\"text-medium\">Topic: {selectedGuide && selectedGuide.name}</h3>\n            <p className=\"font-light text-small\">Genegeral information about {selectedGuide && selectedGuide.name}</p>\n            {selectedGuide && selectedGuide.guides?.length > 0 ?\n              selectedGuide.guides.map(guide => (\n                <div className=\"d-flex align-items-center\" key={guide.id}>\n                  <img src={require('#/assets/icons/external-link.svg')} className=\"mr-2\" alt=\"link\"/>\n                  <p className=\"text-blue mb-0 text-small cursor-pointer\" onClick={() => this.handleSelectedGuideItem(guide.id)}>{guide.title}</p>\n                </div>\n              ))\n              : <p> No items for this guide</p>\n            }\n          </div>  \n        }\n        {stageThree && \n          <div className=\"stage-three\">\n            <p className=\"text-small\">\n              <span className=\"text-grey\">\n                <span className=\"cursor-pointer\" onClick={this.handleHome}>Home</span> {'>'} <span className=\"cursor-pointer\" onClick={this.handleViewGuideinfo}>{selectedGuide && selectedGuide.title}</span> {'>'}\n                </span><span className=\"text-blue\"> {selectedGuideItem && selectedGuideItem.title}\n              </span>\n            </p>\n            <h3>{selectedGuideItem && selectedGuideItem.title}</h3>\n            <p>{selectedGuideItem && selectedGuideItem.content}</p>\n            <div>\n            {selectedGuideItem?.image && <img src={selectedGuideItem?.image} alt=\"attachment\" className=\"attachment-img img-fluid\" />}\n            </div>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { app: { support: { guides, error } } } = state;\n\n  return {\n    loading: getActionLoadingState(state, actionTypes.GET_ALL_USER_GUIDES_REQUEST),\n    error,\n    guides,\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getAllUserGuides: () => dispatch(getAllUserGuides()),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(UserGuide));\n"]},"metadata":{},"sourceType":"module"}