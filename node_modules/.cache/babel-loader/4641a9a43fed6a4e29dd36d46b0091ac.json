{"ast":null,"code":"import axios from 'axios';\nimport CONFIG from '#/config';\nimport * as actions from \"./actionTypes\";\nimport { logout, updateUser } from \"#/store/user/actions\";\nimport { showAlert } from '#/store/ui/actions';\n\nconst clearData = () => {\n  return {\n    type: actions.CLEAR_DATA\n  };\n};\n\nconst clearError = () => {\n  return {\n    type: actions.CLEAR_ERROR\n  };\n};\n\nconst clearPinError = () => {\n  return {\n    type: actions.CLEAR_PIN_ERROR\n  };\n};\n\nconst addEmploymentRequest = () => {\n  return {\n    type: actions.ADD_EMPLOYMENT_REQUEST\n  };\n};\n\nconst addEmploymentError = message => {\n  return {\n    type: actions.ADD_EMPLOYMENT_ERROR,\n    error: message\n  };\n};\n\nconst addEmploymentSuccess = data => {\n  return {\n    type: actions.ADD_EMPLOYMENT_SUCCESS,\n    data\n  };\n};\n\nconst addNextOfKinRequest = () => {\n  return {\n    type: actions.ADD_NEXT_OF_KIN_REQUEST\n  };\n};\n\nconst addNextOfKinError = message => {\n  return {\n    type: actions.ADD_NEXT_OF_KIN_ERROR,\n    error: message\n  };\n};\n\nconst addNextOfKinSuccess = data => {\n  return {\n    type: actions.ADD_NEXT_OF_KIN_SUCCESS,\n    data\n  };\n};\n\nconst addPoliticalStatusRequest = () => {\n  return {\n    type: actions.ADD_POLITICAL_STATUS_REQUEST\n  };\n};\n\nconst addPoliticalStatusError = message => {\n  return {\n    type: actions.ADD_POLITICAL_STATUS_ERROR,\n    error: message\n  };\n};\n\nconst addPoliticalStatusSuccess = data => {\n  return {\n    type: actions.ADD_POLITICAL_STATUS_SUCCESS,\n    data\n  };\n};\n\nconst addBiodataRequest = () => {\n  return {\n    type: actions.ADD_BIODATA_REQUEST\n  };\n};\n\nconst addBiodataError = message => {\n  return {\n    type: actions.ADD_BIODATA_ERROR,\n    error: message\n  };\n};\n\nconst addBiodataSuccess = data => {\n  return {\n    type: actions.ADD_BIODATA_SUCCESS,\n    data\n  };\n};\n\nconst getUserProfileRequest = () => {\n  return {\n    type: actions.GET_USER_PROFILE_REQUEST\n  };\n};\n\nconst getUserProfileError = message => {\n  return {\n    type: actions.GET_USER_PROFILE_ERROR,\n    error: message\n  };\n};\n\nconst getUserProfileSuccess = data => {\n  return {\n    type: actions.GET_USER_PROFILE_SUCCESS,\n    data\n  };\n};\n\nconst addProfilePhotoRequest = () => {\n  return {\n    type: actions.ADD_PROFILE_PHOTO_REQUEST\n  };\n};\n\nconst addProfilePhotoError = message => {\n  return {\n    type: actions.ADD_PROFILE_PHOTO_ERROR,\n    error: message\n  };\n};\n\nconst addProfilePhotoSuccess = data => {\n  return {\n    type: actions.ADD_PROFILE_PHOTO_SUCCESS,\n    data\n  };\n};\n\nconst updateKycRequest = () => {\n  return {\n    type: actions.UPDATE_KYC_REQUEST\n  };\n};\n\nconst updateKycError = message => {\n  return {\n    type: actions.UPDATE_KYC_ERROR,\n    error: message\n  };\n};\n\nconst updateKycSuccess = data => {\n  return {\n    type: actions.UPDATE_KYC_SUCCESS,\n    data\n  };\n};\n\nexport const addEmploymentDetails = payload => {\n  return (dispatch, getState) => {\n    dispatch(addEmploymentRequest());\n    const {\n      token\n    } = getState().user;\n    axios.post(`${CONFIG.BASE_URL}/profile/employment`, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      }\n    }).then(response => {\n      response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if ([200, 201].includes(response.status)) {\n        dispatch(addEmploymentSuccess(response.data));\n        setTimeout(() => dispatch(clearData()), 3000);\n      }\n    }).catch(({\n      response\n    }) => {\n      response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if (response && [400, 404, 403].includes(response.status)) {\n        return dispatch(addEmploymentError(response.data.error ? response.data.error : response.data.message));\n      }\n\n      if (response && [401].includes(response.status)) {\n        dispatch(showAlert({\n          type: 'error',\n          message: 'Your session has expired'\n        }));\n        return setTimeout(() => dispatch(logout()), 2000);\n      }\n\n      if (response && response.status >= 500) {\n        return dispatch(addEmploymentError('Oops! We did something wrong.'));\n      }\n\n      return dispatch(addEmploymentError('Oops! We did something wrong.'));\n    });\n  };\n};\nexport const addNextOfKinDetails = payload => {\n  return (dispatch, getState) => {\n    dispatch(addNextOfKinRequest());\n    const {\n      token\n    } = getState().user;\n    axios.post(`${CONFIG.BASE_URL}/profile/next-of-kin`, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      }\n    }).then(response => {\n      response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if ([200, 201].includes(response.status)) {\n        dispatch(addNextOfKinSuccess(response.data));\n        setTimeout(() => dispatch(clearData()), 3000);\n      }\n    }).catch(({\n      response\n    }) => {\n      response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if (response && [400, 404, 403].includes(response.status)) {\n        return dispatch(addNextOfKinError(response.data.error ? response.data.error : response.data.message));\n      }\n\n      if (response && [401].includes(response.status)) {\n        dispatch(showAlert({\n          type: 'error',\n          message: 'Your session has expired'\n        }));\n        return setTimeout(() => dispatch(logout()), 2000);\n      }\n\n      if (response && response.status >= 500) {\n        return dispatch(addNextOfKinError('Oops! We did something wrong.'));\n      }\n\n      return dispatch(addNextOfKinError('Oops! We did something wrong.'));\n    });\n  };\n};\nexport const addPoliticalStatus = payload => {\n  return (dispatch, getState) => {\n    dispatch(addPoliticalStatusRequest());\n    const {\n      token\n    } = getState().user;\n    axios.post(`${CONFIG.BASE_URL}/profile/political-status`, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      }\n    }).then(response => {\n      response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if ([200, 201].includes(response.status)) {\n        dispatch(addPoliticalStatusSuccess(response.data));\n        setTimeout(() => dispatch(clearData()), 3000);\n      }\n    }).catch(({\n      response\n    }) => {\n      response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if ([400, 404, 403].includes(response.status)) {\n        return dispatch(addPoliticalStatusError(response.data.error ? response.data.error : response.data.message));\n      }\n\n      if ([401].includes(response.status)) {\n        dispatch(showAlert({\n          type: 'error',\n          message: 'Your session has expired'\n        }));\n        return setTimeout(() => dispatch(logout()), 2000);\n      }\n\n      if (response.status >= 500) {\n        return dispatch(addPoliticalStatusError('Oops! We did something wrong.'));\n      }\n\n      return dispatch(addPoliticalStatusError('Oops! We did something wrong.'));\n    });\n  };\n};\nexport const addBioData = payload => {\n  return (dispatch, getState) => {\n    dispatch(addBiodataRequest());\n    const {\n      token\n    } = getState().user;\n    axios.post(`${CONFIG.BASE_URL}/profile/personal`, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      }\n    }).then(response => {\n      response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if ([200, 201].includes(response.status)) {\n        dispatch(addBiodataSuccess(response.data));\n        setTimeout(() => dispatch(clearData()), 3000);\n      }\n    }).catch(({\n      response\n    }) => {\n      response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if (response && [400, 404, 403].includes(response.status)) {\n        return dispatch(addBiodataError(response.data.error ? response.data.error : response.data.message));\n      }\n\n      if (response && [401].includes(response.status)) {\n        dispatch(showAlert({\n          type: 'error',\n          message: 'Your session has expired'\n        }));\n        return setTimeout(() => dispatch(logout()), 2000);\n      }\n\n      if (response && response.status >= 500) {\n        return dispatch(addBiodataError('Oops! We did something wrong.'));\n      }\n\n      return dispatch(addBiodataError('Oops! We did something wrong.'));\n    });\n  };\n};\nexport const addProfilePhoto = payload => {\n  return (dispatch, getState) => {\n    dispatch(addProfilePhotoRequest());\n    const {\n      token\n    } = getState().user;\n    axios.post(`${CONFIG.BASE_URL}/profile/picture`, payload, {\n      headers: {\n        Authorization: token,\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if ([200, 201].includes(response.status)) {\n        dispatch(addProfilePhotoSuccess(response.data.picture));\n      }\n    }).catch(({\n      response\n    }) => {\n      response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if (response && [400, 404, 403].includes(response.status)) {\n        return dispatch(addProfilePhotoError(response.data.error ? response.data.error : response.data.message));\n      }\n\n      if (response && [401].includes(response.status)) {\n        dispatch(showAlert({\n          type: 'error',\n          message: 'Your session has expired'\n        }));\n        return setTimeout(() => dispatch(logout()), 2000);\n      }\n\n      if (response && response.status >= 500) {\n        return dispatch(addProfilePhotoError('Oops! We did something wrong.'));\n      }\n\n      return dispatch(addProfilePhotoError('Oops! We did something wrong.'));\n    });\n  };\n};\nexport const getUserProfile = () => {\n  return (dispatch, getState) => {\n    dispatch(getUserProfileRequest());\n    const {\n      token\n    } = getState().user;\n    axios.get(`${CONFIG.BASE_URL}/profile`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      }\n    }).then(response => {\n      var _response$data$profil;\n\n      dispatch(updateUser({\n        token: response.headers.authorization,\n        isBvnActive: ((_response$data$profil = response.data.profile) === null || _response$data$profil === void 0 ? void 0 : _response$data$profil.isApproved) === 1 ? true : false\n      }));\n\n      if ([200, 201].includes(response.status)) {\n        dispatch(getUserProfileSuccess(response.data.profile));\n      }\n    }).catch(({\n      response\n    }) => {\n      response && response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if (response && [400, 404, 403].includes(response.status)) {\n        dispatch(getUserProfileError(response.data.error ? response.data.error : response.data.message));\n      }\n\n      if (response && [401].includes(response.status)) {\n        dispatch(showAlert({\n          type: 'error',\n          message: 'Your session has expired'\n        }));\n        return setTimeout(() => dispatch(logout()), 2000);\n      }\n\n      if (response && response.status >= 500) {\n        dispatch(getUserProfileError('Oops! We did something wrong.'));\n      }\n\n      dispatch(getUserProfileError('Oops! We did something wrong.'));\n    });\n  };\n};\nexport const updateKyc = payload => {\n  return (dispatch, getState) => {\n    dispatch(updateKycRequest());\n    const {\n      token\n    } = getState().user;\n    axios.post(`${CONFIG.BASE_URL}/profile/documents`, payload, {\n      headers: {\n        Authorization: token\n      }\n    }).then(response => {\n      response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if ([200, 201].includes(response.status)) {\n        dispatch(updateKycSuccess(response.data));\n        setTimeout(() => dispatch(clearData()), 3000);\n      }\n    }).catch(({\n      response\n    }) => {\n      response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if (response && [400, 404, 403].includes(response.status)) {\n        return dispatch(updateKycError(response.data.error ? response.data.error : response.data.message));\n      }\n\n      if (response && [401].includes(response.status)) {\n        dispatch(showAlert({\n          type: 'error',\n          message: 'Your session has expired'\n        }));\n        return setTimeout(() => dispatch(logout()), 2000);\n      }\n\n      if (response && response.status >= 500) {\n        return dispatch(updateKycError('Oops! We did something wrong.'));\n      }\n\n      return dispatch(updateKycError('Oops! We did something wrong.'));\n    });\n  };\n};\n\nconst getAllBanksRequest = () => {\n  return {\n    type: actions.GET_ALL_BANKS_REQUEST\n  };\n};\n\nconst getAllBanksError = message => {\n  return {\n    type: actions.GET_ALL_BANKS_ERROR,\n    error: message\n  };\n};\n\nconst getAllBanksSuccess = data => {\n  return {\n    type: actions.GET_ALL_BANKS_SUCCESS,\n    data\n  };\n};\n\nexport const getAllBanks = payload => {\n  return dispatch => {\n    dispatch(getAllBanksRequest());\n    axios.get(`${CONFIG.BASE_URL}/banks`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      if ([200, 201].includes(response.status)) {\n        dispatch(getAllBanksSuccess(response.data));\n      }\n    }).catch(({\n      response\n    }) => {\n      if (response && [400, 404, 403].includes(response.status)) {\n        return dispatch(getAllBanksError(response.data.error ? response.data.error : response.data.message));\n      }\n\n      if (response && [401].includes(response.status)) {\n        return dispatch(logout());\n      }\n\n      if (response && response.status >= 500) {\n        return dispatch(getAllBanksError('Oops! We did something wrong.'));\n      }\n\n      return dispatch(getAllBanksError('Oops! We did something wrong.'));\n    });\n  };\n};\n\nconst addBanksDetailsRequest = () => {\n  return {\n    type: actions.ADD_BANK_DETAILS_REQUEST\n  };\n};\n\nconst addBanksDetailsError = message => {\n  return {\n    type: actions.ADD_BANK_DETAILS_ERROR,\n    error: message\n  };\n};\n\nconst addBanksDetailsSuccess = data => {\n  return {\n    type: actions.ADD_BANK_DETAILS_SUCCESS,\n    data\n  };\n};\n\nexport const addBankDetails = payload => {\n  return (dispatch, getState) => {\n    dispatch(addBanksDetailsRequest());\n    const {\n      token\n    } = getState().user;\n    return new Promise(resolve => {\n      axios.post(`${CONFIG.BASE_URL}/profile/bank-info`, payload, {\n        headers: {\n          Authorization: token,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if ([200, 201].includes(response.status)) {\n          dispatch(addBanksDetailsSuccess(response.data));\n          setTimeout(() => dispatch(clearData()), 3000);\n          resolve(response.data);\n        }\n      }).catch(({\n        response\n      }) => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if (response && [400, 404, 422, 403].includes(response.status)) {\n          return dispatch(addBanksDetailsError(response.data.error ? response.data.error : response.data.message));\n        }\n\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (response && response.status >= 500) {\n          return dispatch(addBanksDetailsError('Oops! We did something wrong.'));\n        }\n\n        return dispatch(addBanksDetailsError('Oops! We did something wrong.'));\n      });\n    });\n  };\n};\n\nconst updatePinRequest = () => {\n  return {\n    type: actions.UPDATE_PIN_REQUEST\n  };\n};\n\nconst updatePinError = message => {\n  return {\n    type: actions.UPDATE_PIN_ERROR,\n    error: message\n  };\n};\n\nconst updatePinSuccess = data => {\n  return {\n    type: actions.UPDATE_PIN_SUCCESS,\n    data\n  };\n};\n\nexport const updatePin = payload => {\n  return (dispatch, getState) => {\n    dispatch(updatePinRequest());\n    const {\n      token\n    } = getState().user;\n    return new Promise((resolve, reject) => {\n      axios.post(`${CONFIG.BASE_URL}/profile/pin/update`, payload, {\n        headers: {\n          Authorization: token,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if ([200, 201].includes(response.status)) {\n          dispatch(updatePinSuccess(response.data));\n          dispatch(showAlert({\n            type: 'success',\n            message: response.data.message\n          }));\n          resolve();\n          setTimeout(() => dispatch(clearData()), 3000);\n        }\n      }).catch(({\n        response\n      }) => {\n        var _response$headers;\n\n        reject();\n        dispatch(updateUser({\n          token: response === null || response === void 0 ? void 0 : (_response$headers = response.headers) === null || _response$headers === void 0 ? void 0 : _response$headers.authorization\n        }));\n\n        if (response && [400, 404, 422, 403].includes(response.status)) {\n          dispatch(updatePinError(response.data.error ? response.data.error : response.data.message));\n          return setTimeout(() => dispatch(clearPinError()), 3000);\n        }\n\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (response && response.status >= 500) {\n          return dispatch(updatePinError('Oops! We did something wrong.'));\n        }\n\n        return dispatch(updatePinError('Oops! We did something wrong.'));\n      });\n    });\n  };\n};\n\nconst joinSegmentRequest = () => {\n  return {\n    type: actions.JOIN_SEGMENT_REQUEST\n  };\n};\n\nconst joinSegmentError = message => {\n  return {\n    type: actions.JOIN_SEGMENT_ERROR,\n    error: message\n  };\n};\n\nconst joinSegmentSuccess = data => {\n  return {\n    type: actions.JOIN_SEGMENT_SUCCESS,\n    data\n  };\n};\n\nexport const joinSegment = payload => {\n  return (dispatch, getState) => {\n    dispatch(joinSegmentRequest());\n    const {\n      token\n    } = getState().user;\n    return new Promise(resolve => {\n      axios.patch(`${CONFIG.BASE_URL}/segments/join`, payload, {\n        headers: {\n          Authorization: token,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        var _response$headers2;\n\n        ((_response$headers2 = response.headers) === null || _response$headers2 === void 0 ? void 0 : _response$headers2.authorization) && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if ([200, 201].includes(response.status)) {\n          dispatch(joinSegmentSuccess(response.data));\n          resolve(response.data);\n          setTimeout(() => dispatch(clearData()), 3000);\n        }\n      }).catch(error => {\n        error.response && error.response.headers.authorization && dispatch(updateUser({\n          token: error.response.headers.authorization\n        }));\n\n        if (error.response && [400, 404, 422, 403].includes(error.response.status)) {\n          dispatch(joinSegmentError(error.response.data.error ? error.response.data.error : error.response.data.message));\n          return setTimeout(() => dispatch(clearError()), 5000);\n        }\n\n        if (error.response && [401].includes(error.response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (error.response && error.response.status >= 500) {\n          return dispatch(joinSegmentError('Oops! We did something wrong.'));\n        }\n\n        return dispatch(joinSegmentError('Oops! We did something wrong.'));\n      });\n    });\n  };\n};\n\nconst getSegmentQuestionsRequest = () => {\n  return {\n    type: actions.GET_SEGMENT_QUESTIONS_REQUEST\n  };\n};\n\nconst getSegmentQuestionsError = message => {\n  return {\n    type: actions.GET_SEGMENT_QUESTIONS_ERROR,\n    error: message\n  };\n};\n\nconst getSegmentQuestionsSuccess = data => {\n  return {\n    type: actions.GET_SEGMENT_QUESTIONS_SUCCESS,\n    data\n  };\n};\n\nexport const getSegmentQuestions = () => {\n  return (dispatch, getState) => {\n    dispatch(getSegmentQuestionsRequest());\n    const {\n      token\n    } = getState().user;\n    axios.get(`${CONFIG.BASE_URL}/segments/questions?limit=40&page=1`, {\n      headers: {\n        Authorization: token,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if ([200, 201].includes(response.status)) {\n        dispatch(getSegmentQuestionsSuccess(response.data));\n        setTimeout(() => dispatch(clearData()), 3000);\n      }\n    }).catch(({\n      response\n    }) => {\n      response && response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if (response && [400, 404, 422, 403].includes(response.status)) {\n        return dispatch(getSegmentQuestionsError(response.data.error ? response.data.error : response.data.message));\n      }\n\n      if (response && [401].includes(response.status)) {\n        dispatch(showAlert({\n          type: 'error',\n          message: 'Your session has expired'\n        }));\n        return setTimeout(() => dispatch(logout()), 2000);\n      }\n\n      if (response && response.status >= 500) {\n        return dispatch(getSegmentQuestionsError('Oops! We did something wrong.'));\n      }\n\n      return dispatch(getSegmentQuestionsError('Oops! We did something wrong.'));\n    });\n  };\n}; //get risk assessment questions\n\nconst getRiskQuestionsRequest = () => {\n  return {\n    type: actions.GET_RISK_QUESTIONS_REQUEST\n  };\n};\n\nconst getRiskQuestionsError = message => {\n  return {\n    type: actions.GET_RISK_QUESTIONS_ERROR,\n    error: message\n  };\n};\n\nconst getRiskQuestionsSuccess = data => {\n  return {\n    type: actions.GET_RISK_QUESTIONS_SUCCESS,\n    data\n  };\n};\n\nexport const getRiskQuestions = () => {\n  return (dispatch, getState) => {\n    dispatch(getRiskQuestionsRequest());\n    const {\n      token\n    } = getState().user;\n    axios.get(`${CONFIG.BASE_URL}/questions/risk-assessment`, {\n      headers: {\n        Authorization: token,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if ([200, 201].includes(response.status)) {\n        dispatch(getRiskQuestionsSuccess(response.data));\n        setTimeout(() => dispatch(clearData()), 3000);\n      }\n    }).catch(({\n      response\n    }) => {\n      response && response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if (response && [400, 404, 422, 403].includes(response.status)) {\n        return dispatch(getRiskQuestionsError(response.data.error ? response.data.error : response.data.message));\n      }\n\n      if (response && [401].includes(response.status)) {\n        dispatch(showAlert({\n          type: 'error',\n          message: 'Your session has expired'\n        }));\n        return setTimeout(() => dispatch(logout()), 2000);\n      }\n\n      if (response && response.status >= 500) {\n        return dispatch(getRiskQuestionsError('Oops! We did something wrong.'));\n      }\n\n      return dispatch(getRiskQuestionsError('Oops! We did something wrong.'));\n    });\n  };\n};\n\nconst riskAssessmentRequest = () => {\n  return {\n    type: actions.SET_RISK_QUESTIONS_REQUEST\n  };\n};\n\nconst riskAssessmentError = message => {\n  return {\n    type: actions.SET_RISK_QUESTIONS_ERROR,\n    error: message\n  };\n};\n\nconst riskAssessmentSuccess = data => {\n  return {\n    type: actions.SET_RISK_QUESTIONS_SUCCESS,\n    data\n  };\n};\n\nexport const riskAssessment = payload => {\n  return (dispatch, getState) => {\n    dispatch(riskAssessmentRequest());\n    const {\n      token\n    } = getState().user;\n    return new Promise(resolve => {\n      axios.post(`${CONFIG.BASE_URL}/risks/assessment`, payload, {\n        headers: {\n          Authorization: token,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        var _response$headers3;\n\n        ((_response$headers3 = response.headers) === null || _response$headers3 === void 0 ? void 0 : _response$headers3.authorization) && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if ([200, 201].includes(response.status)) {\n          dispatch(riskAssessmentSuccess(response.data));\n          resolve(response.data);\n          setTimeout(() => dispatch(clearData()), 3000);\n        }\n      }).catch(error => {\n        error.response && error.response.headers.authorization && dispatch(updateUser({\n          token: error.response.headers.authorization\n        }));\n\n        if (error.response && [400, 404, 422, 403].includes(error.response.status)) {\n          dispatch(riskAssessmentError(error.response.data.error ? error.response.data.error : error.response.data.message));\n          return setTimeout(() => dispatch(clearError()), 5000);\n        }\n\n        if (error.response && [401].includes(error.response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (error.response && error.response.status >= 500) {\n          return dispatch(riskAssessmentError('Oops! We did something wrong.'));\n        }\n\n        return dispatch(riskAssessmentError('Oops! We did something wrong.'));\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/store/profile/actions.js"],"names":["axios","CONFIG","actions","logout","updateUser","showAlert","clearData","type","CLEAR_DATA","clearError","CLEAR_ERROR","clearPinError","CLEAR_PIN_ERROR","addEmploymentRequest","ADD_EMPLOYMENT_REQUEST","addEmploymentError","message","ADD_EMPLOYMENT_ERROR","error","addEmploymentSuccess","data","ADD_EMPLOYMENT_SUCCESS","addNextOfKinRequest","ADD_NEXT_OF_KIN_REQUEST","addNextOfKinError","ADD_NEXT_OF_KIN_ERROR","addNextOfKinSuccess","ADD_NEXT_OF_KIN_SUCCESS","addPoliticalStatusRequest","ADD_POLITICAL_STATUS_REQUEST","addPoliticalStatusError","ADD_POLITICAL_STATUS_ERROR","addPoliticalStatusSuccess","ADD_POLITICAL_STATUS_SUCCESS","addBiodataRequest","ADD_BIODATA_REQUEST","addBiodataError","ADD_BIODATA_ERROR","addBiodataSuccess","ADD_BIODATA_SUCCESS","getUserProfileRequest","GET_USER_PROFILE_REQUEST","getUserProfileError","GET_USER_PROFILE_ERROR","getUserProfileSuccess","GET_USER_PROFILE_SUCCESS","addProfilePhotoRequest","ADD_PROFILE_PHOTO_REQUEST","addProfilePhotoError","ADD_PROFILE_PHOTO_ERROR","addProfilePhotoSuccess","ADD_PROFILE_PHOTO_SUCCESS","updateKycRequest","UPDATE_KYC_REQUEST","updateKycError","UPDATE_KYC_ERROR","updateKycSuccess","UPDATE_KYC_SUCCESS","addEmploymentDetails","payload","dispatch","getState","token","user","post","BASE_URL","headers","Authorization","then","response","authorization","includes","status","setTimeout","catch","addNextOfKinDetails","addPoliticalStatus","addBioData","addProfilePhoto","picture","getUserProfile","get","isBvnActive","profile","isApproved","updateKyc","getAllBanksRequest","GET_ALL_BANKS_REQUEST","getAllBanksError","GET_ALL_BANKS_ERROR","getAllBanksSuccess","GET_ALL_BANKS_SUCCESS","getAllBanks","addBanksDetailsRequest","ADD_BANK_DETAILS_REQUEST","addBanksDetailsError","ADD_BANK_DETAILS_ERROR","addBanksDetailsSuccess","ADD_BANK_DETAILS_SUCCESS","addBankDetails","Promise","resolve","updatePinRequest","UPDATE_PIN_REQUEST","updatePinError","UPDATE_PIN_ERROR","updatePinSuccess","UPDATE_PIN_SUCCESS","updatePin","reject","joinSegmentRequest","JOIN_SEGMENT_REQUEST","joinSegmentError","JOIN_SEGMENT_ERROR","joinSegmentSuccess","JOIN_SEGMENT_SUCCESS","joinSegment","patch","getSegmentQuestionsRequest","GET_SEGMENT_QUESTIONS_REQUEST","getSegmentQuestionsError","GET_SEGMENT_QUESTIONS_ERROR","getSegmentQuestionsSuccess","GET_SEGMENT_QUESTIONS_SUCCESS","getSegmentQuestions","getRiskQuestionsRequest","GET_RISK_QUESTIONS_REQUEST","getRiskQuestionsError","GET_RISK_QUESTIONS_ERROR","getRiskQuestionsSuccess","GET_RISK_QUESTIONS_SUCCESS","getRiskQuestions","riskAssessmentRequest","SET_RISK_QUESTIONS_REQUEST","riskAssessmentError","SET_RISK_QUESTIONS_ERROR","riskAssessmentSuccess","SET_RISK_QUESTIONS_SUCCESS","riskAssessment"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport CONFIG from '#/config';\nimport * as actions from \"./actionTypes\";\nimport { logout, updateUser } from \"#/store/user/actions\";\nimport { showAlert } from '#/store/ui/actions';\n\nconst clearData = () => {\n  return {\n    type: actions.CLEAR_DATA,\n  }\n}\n\nconst clearError = () => {\n  return {\n    type: actions.CLEAR_ERROR,\n  }\n}\n\nconst clearPinError = () => {\n  return {\n    type: actions.CLEAR_PIN_ERROR,\n  }\n}\n\nconst addEmploymentRequest = () => {\n  return {\n    type: actions.ADD_EMPLOYMENT_REQUEST,\n  }\n}\n\nconst addEmploymentError = (message) => {\n  return {\n    type: actions.ADD_EMPLOYMENT_ERROR,\n    error: message,\n  }\n}\n\nconst addEmploymentSuccess = (data) => {\n  return {\n    type: actions.ADD_EMPLOYMENT_SUCCESS,\n    data,\n  }\n}\n\nconst addNextOfKinRequest = () => {\n  return {\n    type: actions.ADD_NEXT_OF_KIN_REQUEST,\n  }\n}\n\nconst addNextOfKinError = (message) => {\n  return {\n    type: actions.ADD_NEXT_OF_KIN_ERROR,\n    error: message,\n  }\n}\n\nconst addNextOfKinSuccess = (data) => {\n  return {\n    type: actions.ADD_NEXT_OF_KIN_SUCCESS,\n    data,\n  }\n}\n\nconst addPoliticalStatusRequest = () => {\n  return {\n    type: actions.ADD_POLITICAL_STATUS_REQUEST,\n  }\n}\n\nconst addPoliticalStatusError = (message) => {\n  return {\n    type: actions.ADD_POLITICAL_STATUS_ERROR,\n    error: message,\n  }\n}\n\nconst addPoliticalStatusSuccess = (data) => {\n  return {\n    type: actions.ADD_POLITICAL_STATUS_SUCCESS,\n    data,\n  }\n}\n\nconst addBiodataRequest = () => {\n  return {\n    type: actions.ADD_BIODATA_REQUEST,\n  }\n}\n\nconst addBiodataError = (message) => {\n  return {\n    type: actions.ADD_BIODATA_ERROR,\n    error: message,\n  }\n}\n\nconst addBiodataSuccess = (data) => {\n  return {\n    type: actions.ADD_BIODATA_SUCCESS,\n    data,\n  }\n}\n\nconst getUserProfileRequest = () => {\n  return {\n    type: actions.GET_USER_PROFILE_REQUEST,\n  }\n}\n\nconst getUserProfileError = (message) => {\n  return {\n    type: actions.GET_USER_PROFILE_ERROR,\n    error: message,\n  }\n}\n\nconst getUserProfileSuccess = (data) => {\n  return {\n    type: actions.GET_USER_PROFILE_SUCCESS,\n    data,\n  }\n}\n\nconst addProfilePhotoRequest = () => {\n  return {\n    type: actions.ADD_PROFILE_PHOTO_REQUEST,\n  }\n}\n\nconst addProfilePhotoError = (message) => {\n  return {\n    type: actions.ADD_PROFILE_PHOTO_ERROR,\n    error: message,\n  }\n}\n\nconst addProfilePhotoSuccess = (data) => {\n  return {\n    type: actions.ADD_PROFILE_PHOTO_SUCCESS,\n    data,\n  }\n}\n\nconst updateKycRequest = () => {\n  return {\n    type: actions.UPDATE_KYC_REQUEST,\n  }\n}\n\nconst updateKycError = (message) => {\n  return {\n    type: actions.UPDATE_KYC_ERROR,\n    error: message,\n  }\n}\n\nconst updateKycSuccess = (data) => {\n  return {\n    type: actions.UPDATE_KYC_SUCCESS,\n    data,\n  }\n}\n\nexport const addEmploymentDetails = (payload) => {\n  return (dispatch, getState) => {\n    dispatch(addEmploymentRequest());\n\n    const { token } = getState().user;\n\n    axios.post(`${CONFIG.BASE_URL}/profile/employment`, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    })\n      .then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if ([200, 201].includes(response.status)) {\n          dispatch(addEmploymentSuccess(response.data));\n          setTimeout(() => dispatch(clearData()), 3000)\n        }\n      })\n      .catch(({ response }) => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if (response && [400, 404, 403].includes(response.status)) {\n          return dispatch(addEmploymentError(response.data.error ? response.data.error : response.data.message));\n        }\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n          return setTimeout(() => dispatch(logout()), 2000)\n        }\n        if (response && response.status >= 500) {\n          return dispatch(addEmploymentError('Oops! We did something wrong.'));\n        }\n        return dispatch(addEmploymentError('Oops! We did something wrong.'));\n      })\n  }\n}\n\nexport const addNextOfKinDetails = (payload) => {\n  return (dispatch, getState) => {\n    dispatch(addNextOfKinRequest());\n\n    const { token } = getState().user;\n\n    axios.post(`${CONFIG.BASE_URL}/profile/next-of-kin`, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    })\n      .then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if ([200, 201].includes(response.status)) {\n          dispatch(addNextOfKinSuccess(response.data));\n          setTimeout(() => dispatch(clearData()), 3000)\n        }\n      })\n      .catch(({ response }) => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if (response && [400, 404, 403].includes(response.status)) {\n          return dispatch(addNextOfKinError(response.data.error ? response.data.error : response.data.message));\n        }\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n          return setTimeout(() => dispatch(logout()), 2000)\n        }\n        if (response && response.status >= 500) {\n          return dispatch(addNextOfKinError('Oops! We did something wrong.'));\n        }\n        return dispatch(addNextOfKinError('Oops! We did something wrong.'));\n      })\n  }\n}\n\nexport const addPoliticalStatus = (payload) => {\n  return (dispatch, getState) => {\n    dispatch(addPoliticalStatusRequest());\n\n    const { token } = getState().user;\n\n    axios.post(`${CONFIG.BASE_URL}/profile/political-status`, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    })\n      .then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if ([200, 201].includes(response.status)) {\n          dispatch(addPoliticalStatusSuccess(response.data));\n          setTimeout(() => dispatch(clearData()), 3000)\n        }\n      })\n      .catch(({ response }) => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if ([400, 404, 403].includes(response.status)) {\n          return dispatch(addPoliticalStatusError(response.data.error ? response.data.error : response.data.message));\n        }\n        if ([401].includes(response.status)) {\n          dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n          return setTimeout(() => dispatch(logout()), 2000)\n        }\n        if (response.status >= 500) {\n          return dispatch(addPoliticalStatusError('Oops! We did something wrong.'));\n        }\n        return dispatch(addPoliticalStatusError('Oops! We did something wrong.'));\n      })\n  }\n}\n\nexport const addBioData = (payload) => {\n  return (dispatch, getState) => {\n    dispatch(addBiodataRequest());\n\n    const { token } = getState().user;\n\n    axios.post(`${CONFIG.BASE_URL}/profile/personal`, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    })\n      .then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if ([200, 201].includes(response.status)) {\n          dispatch(addBiodataSuccess(response.data));\n          setTimeout(() => dispatch(clearData()), 3000)\n        }\n      })\n      .catch(({ response }) => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if (response && [400, 404, 403].includes(response.status)) {\n          return dispatch(addBiodataError(response.data.error ? response.data.error : response.data.message));\n        }\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n          return setTimeout(() => dispatch(logout()), 2000)\n        }\n        if (response && response.status >= 500) {\n          return dispatch(addBiodataError('Oops! We did something wrong.'));\n        }\n        return dispatch(addBiodataError('Oops! We did something wrong.'));\n      })\n  }\n}\n\nexport const addProfilePhoto = (payload) => {\n  return (dispatch, getState) => {\n    dispatch(addProfilePhotoRequest());\n\n    const { token } = getState().user;\n\n    axios.post(`${CONFIG.BASE_URL}/profile/picture`, payload, {\n      headers: {\n        Authorization: token,\n        'Content-Type': 'multipart/form-data'\n      },\n    })\n      .then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if ([200, 201].includes(response.status)) {\n          dispatch(addProfilePhotoSuccess(response.data.picture));\n        }\n      })\n      .catch(({ response }) => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if (response && [400, 404, 403].includes(response.status)) {\n          return dispatch(addProfilePhotoError(response.data.error ? response.data.error : response.data.message));\n        }\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n          return setTimeout(() => dispatch(logout()), 2000)\n        }\n        if (response && response.status >= 500) {\n          return dispatch(addProfilePhotoError('Oops! We did something wrong.'));\n        }\n        return dispatch(addProfilePhotoError('Oops! We did something wrong.'));\n      })\n  }\n}\n\nexport const getUserProfile = () => {\n  return (dispatch, getState) => {\n    dispatch(getUserProfileRequest());\n\n    const { token } = getState().user;\n\n    axios.get(`${CONFIG.BASE_URL}/profile`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    })\n      .then(response => {\n        dispatch(updateUser({\n          token: response.headers.authorization,\n          isBvnActive: response.data.profile?.isApproved === 1 ? true : false\n        }))\n        if ([200, 201].includes(response.status)) {\n          dispatch(getUserProfileSuccess(response.data.profile));\n        }\n      })\n      .catch(({ response }) => {\n        response && response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if (response && [400, 404, 403].includes(response.status)) {\n          dispatch(getUserProfileError(response.data.error ? response.data.error : response.data.message));\n        }\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n          return setTimeout(() => dispatch(logout()), 2000)\n        }\n        if (response && response.status >= 500) {\n          dispatch(getUserProfileError('Oops! We did something wrong.'));\n        }\n        dispatch(getUserProfileError('Oops! We did something wrong.'));\n      })\n  }\n}\n\nexport const updateKyc = (payload) => {\n  return (dispatch, getState) => {\n    dispatch(updateKycRequest());\n\n    const { token } = getState().user;\n\n    axios.post(`${CONFIG.BASE_URL}/profile/documents`, payload, {\n      headers: {\n        Authorization: token,\n      },\n    })\n      .then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if ([200, 201].includes(response.status)) {\n          dispatch(updateKycSuccess(response.data));\n          setTimeout(() => dispatch(clearData()), 3000)\n        }\n      })\n      .catch(({ response }) => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if (response && [400, 404, 403].includes(response.status)) {\n          return dispatch(updateKycError(response.data.error ? response.data.error : response.data.message));\n        }\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n          return setTimeout(() => dispatch(logout()), 2000)\n        }\n        if (response && response.status >= 500) {\n          return dispatch(updateKycError('Oops! We did something wrong.'));\n        }\n        return dispatch(updateKycError('Oops! We did something wrong.'));\n      })\n  }\n}\n\nconst getAllBanksRequest = () => {\n  return {\n    type: actions.GET_ALL_BANKS_REQUEST,\n  }\n}\n\nconst getAllBanksError = (message) => {\n  return {\n    type: actions.GET_ALL_BANKS_ERROR,\n    error: message,\n  }\n}\n\nconst getAllBanksSuccess = (data) => {\n  return {\n    type: actions.GET_ALL_BANKS_SUCCESS,\n    data,\n  }\n}\n\nexport const getAllBanks = (payload) => {\n  return (dispatch) => {\n    dispatch(getAllBanksRequest());\n\n    axios.get(`${CONFIG.BASE_URL}/banks`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(response => {\n        if ([200, 201].includes(response.status)) {\n          dispatch(getAllBanksSuccess(response.data));\n        }\n      })\n      .catch(({ response }) => {\n        if (response && [400, 404, 403].includes(response.status)) {\n          return dispatch(getAllBanksError(response.data.error ? response.data.error : response.data.message));\n        }\n        if (response && [401].includes(response.status)) {\n          return dispatch(logout())\n        }\n        if (response && response.status >= 500) {\n          return dispatch(getAllBanksError('Oops! We did something wrong.'));\n        }\n        return dispatch(getAllBanksError('Oops! We did something wrong.'));\n      })\n  }\n}\n\nconst addBanksDetailsRequest = () => {\n  return {\n    type: actions.ADD_BANK_DETAILS_REQUEST,\n  }\n}\n\nconst addBanksDetailsError = (message) => {\n  return {\n    type: actions.ADD_BANK_DETAILS_ERROR,\n    error: message,\n  }\n}\n\nconst addBanksDetailsSuccess = (data) => {\n  return {\n    type: actions.ADD_BANK_DETAILS_SUCCESS,\n    data,\n  }\n}\n\nexport const addBankDetails = (payload) => {\n  return (dispatch, getState) => {\n    dispatch(addBanksDetailsRequest());\n\n    const { token } = getState().user;\n    return new Promise((resolve) => {\n    axios.post(`${CONFIG.BASE_URL}/profile/bank-info`, payload, {\n      headers: {\n        Authorization: token,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if ([200, 201].includes(response.status)) {\n          dispatch(addBanksDetailsSuccess(response.data));\n          setTimeout(() => dispatch(clearData()), 3000)\n          resolve(response.data)\n        }\n      })\n      .catch(({ response }) => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if (response && [400, 404, 422, 403].includes(response.status)) {\n          return dispatch(addBanksDetailsError(response.data.error ? response.data.error : response.data.message));\n        }\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n          return setTimeout(() => dispatch(logout()), 2000)\n        }\n        if (response && response.status >= 500) {\n          return dispatch(addBanksDetailsError('Oops! We did something wrong.'));\n        }\n        return dispatch(addBanksDetailsError('Oops! We did something wrong.'));\n      })\n    })\n  }\n}\n\nconst updatePinRequest = () => {\n  return {\n    type: actions.UPDATE_PIN_REQUEST,\n  }\n}\n\nconst updatePinError = (message) => {\n  return {\n    type: actions.UPDATE_PIN_ERROR,\n    error: message,\n  }\n}\n\nconst updatePinSuccess = (data) => {\n  return {\n    type: actions.UPDATE_PIN_SUCCESS,\n    data,\n  }\n}\n\nexport const updatePin = (payload) => {\n  return (dispatch, getState) => {\n    dispatch(updatePinRequest());\n\n    const { token } = getState().user;\n    return new Promise((resolve, reject) => {\n\n      axios.post(`${CONFIG.BASE_URL}/profile/pin/update`, payload, {\n        headers: {\n          Authorization: token,\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then(response => {\n          response.headers.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          if ([200, 201].includes(response.status)) {\n            dispatch(updatePinSuccess(response.data));\n            dispatch(showAlert({ type: 'success', message: response.data.message }))\n            resolve()\n            setTimeout(() => dispatch(clearData()), 3000)\n          }\n        })\n        .catch(({ response }) => {\n          reject()\n          dispatch(updateUser({\n            token: response?.headers?.authorization\n          }))\n          if (response && [400, 404, 422, 403].includes(response.status)) {\n            dispatch(updatePinError(response.data.error ? response.data.error : response.data.message));\n            return setTimeout(() => dispatch(clearPinError()), 3000)\n          }\n          if (response && [401].includes(response.status)) {\n            dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n            return setTimeout(() => dispatch(logout()), 2000)\n          }\n          if (response && response.status >= 500) {\n            return dispatch(updatePinError('Oops! We did something wrong.'));\n          }\n          return dispatch(updatePinError('Oops! We did something wrong.'));\n        })\n    })\n  }\n}\n\n\nconst joinSegmentRequest = () => {\n  return {\n    type: actions.JOIN_SEGMENT_REQUEST,\n  }\n}\n\nconst joinSegmentError = (message) => {\n  return {\n    type: actions.JOIN_SEGMENT_ERROR,\n    error: message,\n  }\n}\n\nconst joinSegmentSuccess = (data) => {\n  return {\n    type: actions.JOIN_SEGMENT_SUCCESS,\n    data,\n  }\n}\n\nexport const joinSegment = (payload) => {\n  return (dispatch, getState) => {\n    dispatch(joinSegmentRequest());\n\n    const { token } = getState().user;\n    return new Promise((resolve) => {\n      axios.patch(`${CONFIG.BASE_URL}/segments/join`, payload, {\n        headers: {\n          Authorization: token,\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then(response => {\n          response.headers?.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          if ([200, 201].includes(response.status)) {\n            dispatch(joinSegmentSuccess(response.data));\n            resolve(response.data);\n            setTimeout(() => dispatch(clearData()), 3000)\n          }\n        })\n        .catch((error) => {\n          error.response && error.response.headers.authorization && dispatch(updateUser({\n            token: error.response.headers.authorization\n          }))\n          if (error.response && [400, 404, 422, 403].includes(error.response.status)) {\n            dispatch(joinSegmentError(error.response.data.error ? error.response.data.error : error.response.data.message));\n            return setTimeout(() => dispatch(clearError()), 5000)\n          }\n          if (error.response && [401].includes(error.response.status)) {\n            dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n            return setTimeout(() => dispatch(logout()), 2000)\n          }\n          if (error.response && error.response.status >= 500) {\n            return dispatch(joinSegmentError('Oops! We did something wrong.'));\n          }\n          return dispatch(joinSegmentError('Oops! We did something wrong.'));\n        })\n    })\n  }\n}\n\nconst getSegmentQuestionsRequest = () => {\n  return {\n    type: actions.GET_SEGMENT_QUESTIONS_REQUEST,\n  }\n}\n\nconst getSegmentQuestionsError = (message) => {\n  return {\n    type: actions.GET_SEGMENT_QUESTIONS_ERROR,\n    error: message,\n  }\n}\n\nconst getSegmentQuestionsSuccess = (data) => {\n  return {\n    type: actions.GET_SEGMENT_QUESTIONS_SUCCESS,\n    data,\n  }\n}\n\nexport const getSegmentQuestions = () => {\n  return (dispatch, getState) => {\n    dispatch(getSegmentQuestionsRequest());\n\n    const { token } = getState().user;\n\n    axios.get(`${CONFIG.BASE_URL}/segments/questions?limit=40&page=1`, {\n      headers: {\n        Authorization: token,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if ([200, 201].includes(response.status)) {\n          dispatch(getSegmentQuestionsSuccess(response.data));\n          setTimeout(() => dispatch(clearData()), 3000)\n        }\n      })\n      .catch(({ response }) => {\n        response && response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if (response && [400, 404, 422, 403].includes(response.status)) {\n          return dispatch(getSegmentQuestionsError(response.data.error ? response.data.error : response.data.message));\n        }\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n          return setTimeout(() => dispatch(logout()), 2000)\n        }\n        if (response && response.status >= 500) {\n          return dispatch(getSegmentQuestionsError('Oops! We did something wrong.'));\n        }\n        return dispatch(getSegmentQuestionsError('Oops! We did something wrong.'));\n      })\n  }\n}\n\n//get risk assessment questions\nconst getRiskQuestionsRequest = () => {\n  return {\n    type: actions.GET_RISK_QUESTIONS_REQUEST,\n  }\n}\n\nconst getRiskQuestionsError = (message) => {\n  return {\n    type: actions.GET_RISK_QUESTIONS_ERROR,\n    error: message,\n  }\n}\n\nconst getRiskQuestionsSuccess = (data) => {\n  return {\n    type: actions.GET_RISK_QUESTIONS_SUCCESS,\n    data,\n  }\n}\n\nexport const getRiskQuestions = () => {\n  return (dispatch, getState) => {\n    dispatch(getRiskQuestionsRequest());\n\n    const { token } = getState().user;\n\n    axios.get(`${CONFIG.BASE_URL}/questions/risk-assessment`, {\n      headers: {\n        Authorization: token,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if ([200, 201].includes(response.status)) {\n          dispatch(getRiskQuestionsSuccess(response.data));\n          setTimeout(() => dispatch(clearData()), 3000)\n        }\n      })\n      .catch(({ response }) => {\n        response && response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if (response && [400, 404, 422, 403].includes(response.status)) {\n          return dispatch(getRiskQuestionsError(response.data.error ? response.data.error : response.data.message));\n        }\n        if (response && [401].includes(response.status)) {\n          dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n          return setTimeout(() => dispatch(logout()), 2000)\n        }\n        if (response && response.status >= 500) {\n          return dispatch(getRiskQuestionsError('Oops! We did something wrong.'));\n        }\n        return dispatch(getRiskQuestionsError('Oops! We did something wrong.'));\n      })\n  }\n}\n\nconst riskAssessmentRequest = () => {\n  return {\n    type: actions.SET_RISK_QUESTIONS_REQUEST,\n  }\n}\n\nconst riskAssessmentError = (message) => {\n  return {\n    type: actions.SET_RISK_QUESTIONS_ERROR,\n    error: message,\n  }\n}\n\nconst riskAssessmentSuccess = (data) => {\n  return {\n    type: actions.SET_RISK_QUESTIONS_SUCCESS,\n    data,\n  }\n}\n\nexport const riskAssessment = (payload) => {\n  return (dispatch, getState) => {\n    dispatch(riskAssessmentRequest());\n\n    const { token } = getState().user;\n    return new Promise((resolve) => {\n      axios.post(`${CONFIG.BASE_URL}/risks/assessment`, payload, {\n        headers: {\n          Authorization: token,\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then(response => {\n          response.headers?.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          if ([200, 201].includes(response.status)) {\n            dispatch(riskAssessmentSuccess(response.data));\n            resolve(response.data);\n            setTimeout(() => dispatch(clearData()), 3000)\n          }\n        })\n        .catch((error) => {\n          error.response && error.response.headers.authorization && dispatch(updateUser({\n            token: error.response.headers.authorization\n          }))\n          if (error.response && [400, 404, 422, 403].includes(error.response.status)) {\n            dispatch(riskAssessmentError(error.response.data.error ? error.response.data.error : error.response.data.message));\n            return setTimeout(() => dispatch(clearError()), 5000)\n          }\n          if (error.response && [401].includes(error.response.status)) {\n            dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n            return setTimeout(() => dispatch(logout()), 2000)\n          }\n          if (error.response && error.response.status >= 500) {\n            return dispatch(riskAssessmentError('Oops! We did something wrong.'));\n          }\n          return dispatch(riskAssessmentError('Oops! We did something wrong.'));\n        })\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}