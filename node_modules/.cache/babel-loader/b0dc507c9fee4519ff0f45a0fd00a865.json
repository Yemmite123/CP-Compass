{"ast":null,"code":"import axios from 'axios';\nimport CONFIG from '#/config';\nimport * as actions from \"./actionTypes\";\nimport { logout, updateUser } from \"#/store/user/actions\";\nimport { showAlert } from '#/store/ui/actions';\n\nconst clearError = () => {\n  return {\n    type: actions.CLEAR_ERROR\n  };\n};\n\nconst fetchPortfolioRequest = () => {\n  return {\n    type: actions.FETCH_PORTFOLIO_REQUEST\n  };\n};\n\nconst fetchPortfolioError = message => {\n  return {\n    type: actions.FETCH_PORTFOLIO_ERROR,\n    error: message\n  };\n};\n\nconst fetchPortfolioSuccess = data => {\n  return {\n    type: actions.FETCH_PORTFOLIO_SUCCESS,\n    data\n  };\n};\n\nexport const fetchPortfolio = status => {\n  return (dispatch, getState) => {\n    dispatch(fetchPortfolioRequest());\n    const {\n      token\n    } = getState().user;\n    axios.get(`${CONFIG.BASE_URL}/services/portfolio/termed/${status}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      }\n    }).then(response => {\n      response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if ([200, 201].includes(response.status)) {\n        dispatch(fetchPortfolioSuccess(response.data.data));\n      }\n    }).catch(error => {\n      error.response && error.response.headers.authorization && dispatch(updateUser({\n        token: error.response.headers.authorization\n      }));\n\n      if (error.response && [400, 404, 403, 402].includes(error.response.status)) {\n        return dispatch(fetchPortfolioError(error.response.data.error ? error.response.data.error : error.response.data.message));\n      }\n\n      if (error.response && [401].includes(error.response.status)) {\n        dispatch(showAlert({\n          type: 'error',\n          message: 'Your session has expired'\n        }));\n        return setTimeout(() => dispatch(logout()), 2000);\n      }\n\n      if (error.response && error.response.status >= 500) {\n        return dispatch(fetchPortfolioError('Oops! We did something wrong.'));\n      }\n\n      dispatch(fetchPortfolioError('Oops! We did something wrong.'));\n    });\n  };\n}; //fetch single investment\n\nconst fetchSingleInvestmentRequest = () => {\n  return {\n    type: actions.FETCH_SINGLE_INVESTMENT_REQUEST\n  };\n};\n\nconst fetchSingleInvestmentError = message => {\n  return {\n    type: actions.FETCH_SINGLE_INVESTMENT_ERROR,\n    error: message\n  };\n};\n\nconst fetchSingleInvestmentSuccess = data => {\n  return {\n    type: actions.FETCH_SINGLE_INVESTMENT_SUCCESS,\n    data\n  };\n};\n\nexport const fetchSingleInvestment = id => {\n  return (dispatch, getState) => {\n    dispatch(fetchSingleInvestmentRequest());\n    const {\n      token\n    } = getState().user;\n    axios.get(`${CONFIG.BASE_URL}/services/investments/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      }\n    }).then(response => {\n      response.headers.authorization && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if ([200, 201].includes(response.status)) {\n        dispatch(fetchSingleInvestmentSuccess(response.data.data));\n      }\n    }).catch(error => {\n      error.response && error.response.headers.authorization && dispatch(updateUser({\n        token: error.response.headers.authorization\n      }));\n\n      if (error.response && [400, 403].includes(error.response.status)) {\n        return dispatch(fetchSingleInvestmentError(error.response.data.error ? error.response.data.error : error.response.data.message));\n      }\n\n      if (error.response && [404].includes(error.response.status)) {\n        dispatch(showAlert({\n          type: 'error',\n          message: error.response.data.message\n        }));\n        return dispatch(fetchSingleInvestmentError(error.response.data.error ? error.response.data.error : error.response.data.message));\n      }\n\n      if (error.response && [401].includes(error.response.status)) {\n        dispatch(showAlert({\n          type: 'error',\n          message: 'Your session has expired'\n        }));\n        return setTimeout(() => dispatch(logout()), 2000);\n      }\n\n      if (error.response && error.response.status >= 500) {\n        return dispatch(fetchSingleInvestmentError('Oops! We did something wrong.'));\n      }\n\n      dispatch(fetchSingleInvestmentError('Oops! We did something wrong.'));\n    });\n  };\n}; //topup single investment\n\nconst topUpInvestmentRequest = () => {\n  return {\n    type: actions.TOP_UP_INVESTMENT_REQUEST\n  };\n};\n\nconst topUpInvestmentError = message => {\n  return {\n    type: actions.TOP_UP_INVESTMENT_ERROR,\n    error: message\n  };\n};\n\nconst topUpInvestmentSuccess = data => {\n  return {\n    type: actions.TOP_UP_INVESTMENT_SUCCESS,\n    data\n  };\n};\n\nexport const topUpInvestment = (payload, id) => {\n  return (dispatch, getState) => {\n    dispatch(topUpInvestmentRequest());\n    const {\n      token\n    } = getState().user;\n    return new Promise(resolve => {\n      axios.post(`${CONFIG.BASE_URL}/services/investments/${id}/top-up`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      }).then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if ([200, 201].includes(response.status)) {\n          var _response$data$data;\n\n          dispatch(topUpInvestmentSuccess(response.data.data));\n          resolve(response.data);\n\n          if ((_response$data$data = response.data.data) === null || _response$data$data === void 0 ? void 0 : _response$data$data.authorization_url) {\n            return window.location = response.data.data.authorization_url;\n          }\n\n          return dispatch(showAlert({\n            type: 'success',\n            message: response.data.message\n          }));\n        }\n      }).catch(error => {\n        error.response && error.response.headers.authorization && dispatch(updateUser({\n          token: error.response.headers.authorization\n        }));\n\n        if (error.response && [400, 422, 403].includes(error.response.status)) {\n          dispatch(topUpInvestmentError(error.response.data.error ? error.response.data.error : error.response.data.message));\n          return setTimeout(() => dispatch(clearError()), 2000);\n        }\n\n        if (error.response && [404].includes(error.response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: error.response.data.message\n          }));\n          dispatch(topUpInvestmentError(error.response.data.error ? error.response.data.error : error.response.data.message));\n          return setTimeout(() => dispatch(clearError()), 2000);\n        }\n\n        if (error.response && [401].includes(error.response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (error.response && error.response.status >= 500) {\n          dispatch(topUpInvestmentError('Oops! We did something wrong.'));\n          return setTimeout(() => dispatch(clearError()), 2000);\n        }\n\n        dispatch(topUpInvestmentError('Oops! We did something wrong.'));\n        return setTimeout(() => dispatch(clearError()), 2000);\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/store/portfolio/actions.js"],"names":["axios","CONFIG","actions","logout","updateUser","showAlert","clearError","type","CLEAR_ERROR","fetchPortfolioRequest","FETCH_PORTFOLIO_REQUEST","fetchPortfolioError","message","FETCH_PORTFOLIO_ERROR","error","fetchPortfolioSuccess","data","FETCH_PORTFOLIO_SUCCESS","fetchPortfolio","status","dispatch","getState","token","user","get","BASE_URL","headers","Authorization","then","response","authorization","includes","catch","setTimeout","fetchSingleInvestmentRequest","FETCH_SINGLE_INVESTMENT_REQUEST","fetchSingleInvestmentError","FETCH_SINGLE_INVESTMENT_ERROR","fetchSingleInvestmentSuccess","FETCH_SINGLE_INVESTMENT_SUCCESS","fetchSingleInvestment","id","topUpInvestmentRequest","TOP_UP_INVESTMENT_REQUEST","topUpInvestmentError","TOP_UP_INVESTMENT_ERROR","topUpInvestmentSuccess","TOP_UP_INVESTMENT_SUCCESS","topUpInvestment","payload","Promise","resolve","post","authorization_url","window","location"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport CONFIG from '#/config';\nimport * as actions from \"./actionTypes\";\nimport { logout, updateUser } from \"#/store/user/actions\";\nimport { showAlert } from '#/store/ui/actions';\n\nconst clearError = () => {\n  return {\n    type: actions.CLEAR_ERROR,\n  }\n}\n\nconst fetchPortfolioRequest = () => {\n  return {\n    type: actions.FETCH_PORTFOLIO_REQUEST,\n  }\n}\n\nconst fetchPortfolioError = (message) => {\n  return {\n    type: actions.FETCH_PORTFOLIO_ERROR,\n    error: message,\n  }\n}\n\nconst fetchPortfolioSuccess = (data) => {\n  return {\n    type: actions.FETCH_PORTFOLIO_SUCCESS,\n    data,\n  }\n}\n\nexport const fetchPortfolio = (status) => {\n  return (dispatch, getState) => {\n    dispatch(fetchPortfolioRequest());\n\n    const { token } = getState().user;\n\n    axios.get(`${CONFIG.BASE_URL}/services/portfolio/termed/${status}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    })\n      .then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if ([200, 201].includes(response.status)) {\n          dispatch(fetchPortfolioSuccess(response.data.data));\n        }\n      })\n      .catch((error) => {\n        error.response && error.response.headers.authorization && dispatch(updateUser({\n          token: error.response.headers.authorization\n        }))\n        if (error.response && [400, 404, 403, 402].includes(error.response.status)) {\n          return dispatch(fetchPortfolioError(error.response.data.error ? error.response.data.error : error.response.data.message));\n        }\n        if (error.response && [401].includes(error.response.status)) {\n          dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n          return setTimeout(() => dispatch(logout()), 2000)\n        }\n        if (error.response && error.response.status >= 500) {\n          return dispatch(fetchPortfolioError('Oops! We did something wrong.'));\n        }\n        dispatch(fetchPortfolioError('Oops! We did something wrong.'));\n      })\n  }\n}\n\n//fetch single investment\nconst fetchSingleInvestmentRequest = () => {\n  return {\n    type: actions.FETCH_SINGLE_INVESTMENT_REQUEST,\n  }\n}\n\nconst fetchSingleInvestmentError = (message) => {\n  return {\n    type: actions.FETCH_SINGLE_INVESTMENT_ERROR,\n    error: message,\n  }\n}\n\nconst fetchSingleInvestmentSuccess = (data) => {\n  return {\n    type: actions.FETCH_SINGLE_INVESTMENT_SUCCESS,\n    data,\n  }\n}\n\nexport const fetchSingleInvestment = (id) => {\n  return (dispatch, getState) => {\n    dispatch(fetchSingleInvestmentRequest());\n\n    const { token } = getState().user;\n\n    axios.get(`${CONFIG.BASE_URL}/services/investments/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    })\n      .then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if ([200, 201].includes(response.status)) {\n          dispatch(fetchSingleInvestmentSuccess(response.data.data));\n        }\n      })\n      .catch((error) => {\n        error.response && error.response.headers.authorization && dispatch(updateUser({\n          token: error.response.headers.authorization\n        }))\n        if (error.response && [400, 403].includes(error.response.status)) {\n          return dispatch(fetchSingleInvestmentError(error.response.data.error ? error.response.data.error : error.response.data.message));\n        }\n        if (error.response && [404].includes(error.response.status)) {\n          dispatch(showAlert({ type: 'error', message: error.response.data.message }))\n          return dispatch(fetchSingleInvestmentError(error.response.data.error ? error.response.data.error : error.response.data.message));\n        }\n        if (error.response && [401].includes(error.response.status)) {\n          dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n          return setTimeout(() => dispatch(logout()), 2000)\n        }\n        if (error.response && error.response.status >= 500) {\n          return dispatch(fetchSingleInvestmentError('Oops! We did something wrong.'));\n        }\n        dispatch(fetchSingleInvestmentError('Oops! We did something wrong.'));\n      })\n  }\n}\n\n//topup single investment\nconst topUpInvestmentRequest = () => {\n  return {\n    type: actions.TOP_UP_INVESTMENT_REQUEST,\n  }\n}\n\nconst topUpInvestmentError = (message) => {\n  return {\n    type: actions.TOP_UP_INVESTMENT_ERROR,\n    error: message,\n  }\n}\n\nconst topUpInvestmentSuccess = (data) => {\n  return {\n    type: actions.TOP_UP_INVESTMENT_SUCCESS,\n    data,\n  }\n}\n\nexport const topUpInvestment = (payload, id) => {\n  return (dispatch, getState) => {\n    dispatch(topUpInvestmentRequest());\n\n    const { token } = getState().user;\n    return new Promise((resolve) => {\n\n      axios.post(`${CONFIG.BASE_URL}/services/investments/${id}/top-up`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(response => {\n          response.headers.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          if ([200, 201].includes(response.status)) {\n            dispatch(topUpInvestmentSuccess(response.data.data));\n            resolve(response.data)\n            if (response.data.data?.authorization_url) {\n              return window.location = response.data.data.authorization_url;\n            }\n            return dispatch(showAlert({ type: 'success', message: response.data.message }))\n          }\n        })\n        .catch((error) => {\n          error.response && error.response.headers.authorization && dispatch(updateUser({\n            token: error.response.headers.authorization\n          }))\n          if (error.response && [400, 422, 403].includes(error.response.status)) {\n            dispatch(topUpInvestmentError(error.response.data.error ? error.response.data.error : error.response.data.message));\n            return setTimeout(() => dispatch(clearError()), 2000)\n          }\n          if (error.response && [404].includes(error.response.status)) {\n            dispatch(showAlert({ type: 'error', message: error.response.data.message }))\n            dispatch(topUpInvestmentError(error.response.data.error ? error.response.data.error : error.response.data.message));\n            return setTimeout(() => dispatch(clearError()), 2000)\n          }\n          if (error.response && [401].includes(error.response.status)) {\n            dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n            return setTimeout(() => dispatch(logout()), 2000)\n          }\n          if (error.response && error.response.status >= 500) {\n            dispatch(topUpInvestmentError('Oops! We did something wrong.'));\n            return setTimeout(() => dispatch(clearError()), 2000)\n          }\n          dispatch(topUpInvestmentError('Oops! We did something wrong.'));\n          return setTimeout(() => dispatch(clearError()), 2000)\n        })\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}