{"ast":null,"code":"var _jsxFileName = \"/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Marketplace/Custom/index.js\";\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport moment from 'moment';\nimport Back from '#/components/Back';\nimport Card from '#/components/Card';\nimport SelectBox from '#/components/SelectBox';\nimport Modal from '#/components/Modal';\nimport PinInput from '#/components/PinInput';\nimport Textbox from '#/components/Textbox';\nimport PaymentMethod from '#/components/PaymentMethod';\nimport DebitCard from '#/components/DebitCard';\nimport DateBox from '#/components/DateBox';\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport { getCards } from '#/store/wallet/actions';\nimport { bookNewInvestment, bookInvestmentWithPay, calculateInvestment } from '#/store/investment/actions';\nimport investmentActionTypes from '#/store/investment/actionTypes';\nimport { confirmPin } from '#/store/security/actions';\nimport securityActionTypes from '#/store/security/actionTypes';\nimport { investmentFrequency, validateFields, serializeErrors, fundingSource, formatCurrency, convertDate, verifyFrequencyPeriod, formatCurrencyToString, formatStringToCurrency } from '#/utils';\nimport './style.scss';\n\nclass Custom extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      type: '',\n      title: '',\n      target: '',\n      targetDate: '',\n      frequency: '',\n      startDate: '',\n      confirmationModal: false,\n      showTransactionModal: false,\n      setupSuccessModal: false,\n      addMoneyModal: false,\n      fundingSourceModal: false,\n      allCardsModal: false,\n      enterAmountModal: false,\n      showAutomateModal: false,\n      amount: '',\n      pin: {},\n      pinError: null,\n      selectedMethod: '',\n      errors: null,\n      selectedMethodError: null,\n      entryError: null,\n      selectedCard: null,\n      installment: '',\n      expectedTotalReturns: '',\n      withpay: false,\n      addEndDate: false,\n      frequencyAmount: ''\n    };\n\n    this.handleChange = event => {\n      const {\n        name\n      } = event.target;\n      let value;\n\n      if (event.target.type === \"radio\" && event.target.value === \"true\") {\n        value = true;\n      } else if (event.target.type === \"radio\" && event.target.value === \"false\") {\n        value = false;\n      } else {\n        value = event.target.type === \"checkbox\" ? event.target.checked : event.target.value;\n      }\n\n      if (name === 'target' || name === 'amount' || name === 'frequencyAmount') {\n        this.setState({\n          errors: null\n        });\n        return this.setState({\n          [name]: formatCurrencyToString(value)\n        }, () => {\n          if (isNaN(this.state[name])) {\n            return this.setState({\n              errors: {\n                [name]: 'enter a valid number'\n              }\n            });\n          }\n        });\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleChangeDate = (item, date) => {\n      this.setState({\n        [item]: date\n      });\n    };\n\n    this.handlePin = pin => {\n      this.setState({\n        pin\n      });\n    };\n\n    this.handleSelectMethod = event => {\n      this.setState({\n        selectedMethod: event.target.id\n      });\n    };\n\n    this.handleComfirmation = e => {\n      e.preventDefault();\n      this.setState({\n        errors: null,\n        entryError: null\n      });\n\n      if (!this.props.isApproved) {\n        return this.setState({\n          entryError: 'Your account is awaiting approval'\n        });\n      }\n\n      if (!this.props.isBvnActive) {\n        return this.setState({\n          entryError: 'Access denied. Please complete your BVN profile'\n        });\n      }\n\n      const data = this.state;\n      const required = this.state.addEndDate ? ['title', 'target', 'targetDate', 'frequency', 'startDate'] : ['title', 'target', 'frequency', 'startDate', 'frequencyAmount'];\n      const errors = validateFields(data, required);\n\n      if (Object.keys(errors).length > 0) {\n        return this.setState({\n          errors\n        });\n      }\n\n      const info = {\n        startDate: moment(this.state.startDate).format('YYYY-MM-DD'),\n        endDate: moment(this.state.targetDate).format('YYYY-MM-DD'),\n        frequency: this.state.frequency,\n        targetAmount: formatCurrencyToString(this.state.target)\n      };\n      const entryError = verifyFrequencyPeriod(info);\n\n      if (entryError) {\n        return this.setState({\n          entryError\n        });\n      }\n\n      this.state.addEndDate ? this.props.calculateInvestment(info).then(data => {\n        this.setState({\n          installment: data.installment,\n          expectedTotalReturns: data.expectedTotalReturns\n        }, () => {\n          this.toggleConfirmationModal();\n        });\n      }) : this.toggleConfirmationModal();\n    };\n\n    this.handleEnterPin = () => {\n      this.toggleConfirmationModal();\n      this.toggleTransactionPinModal();\n    };\n\n    this.handleTransactionVerification = e => {\n      e.preventDefault();\n      const {\n        pin\n      } = this.state;\n      const {\n        confirmPin\n      } = this.props;\n      this.setState({\n        pinError: null\n      });\n      const initialPin = [pin.value1, pin.value2, pin.value3, pin.value4].join('');\n\n      if (initialPin.length < 4) {\n        return this.setState({\n          pinError: 'field is required'\n        });\n      }\n\n      confirmPin({\n        pin: initialPin\n      }).then(data => {\n        this.toggleTransactionPinModal();\n        this.toggleAddMoneyModal();\n      });\n    };\n\n    this.handleBookWithoutPay = e => {\n      e.preventDefault();\n      const {\n        bookNewInvestment\n      } = this.props;\n      const {\n        location: {\n          state\n        }\n      } = this.props.history;\n      const {\n        title,\n        target,\n        startDate,\n        targetDate,\n        frequency,\n        frequencyAmount\n      } = this.state;\n      const payload = this.state.addEndDate ? {\n        title,\n        targetAmount: formatCurrencyToString(target),\n        currency: 'NGN',\n        startDate: moment(startDate).format('YYYY-MM-DD'),\n        endDate: moment(targetDate).format('YYYY-MM-DD'),\n        frequency\n      } : {\n        title,\n        targetAmount: formatCurrencyToString(target),\n        currency: 'NGN',\n        startDate: moment(startDate).format('YYYY-MM-DD'),\n        amount: formatCurrencyToString(frequencyAmount),\n        frequency\n      };\n      const data = {\n        type: 'custom',\n        payload,\n        id: state === null || state === void 0 ? void 0 : state.investment.id\n      };\n      bookNewInvestment(data).then(data => {\n        this.toggleAddMoneyModal();\n        this.toggleSetupSuccessModal();\n      });\n    };\n\n    this.handleSuccess = () => {\n      this.toggleSetupSuccessModal();\n      this.props.history.push('/app/marketplace/termed-investments');\n    };\n\n    this.handleEnterAmount = () => {\n      this.toggleAddMoneyModal();\n      this.toggleAmountModal();\n    };\n\n    this.handlePickFundingSource = () => {\n      this.toggleAmountModal();\n      this.toggleFundingModal();\n    };\n\n    this.handleSelectedFundingSource = () => {\n      const {\n        selectedMethod\n      } = this.state;\n      const required = ['selectedMethod'];\n      const errors = validateFields({\n        selectedMethod\n      }, required);\n\n      if (Object.keys(errors).length > 0) {\n        return this.setState({\n          selectedMethodError: 'please select a method'\n        });\n      }\n\n      if (selectedMethod === 'wallet') {\n        this.setState({\n          type: 'wallet'\n        });\n        this.toggleFundingModal();\n        return this.toggleAutomateModal();\n      }\n\n      this.toggleFundingModal();\n      return this.toggleAllCardsModal();\n    };\n\n    this.handleSelectCard = card => {\n      this.setState({\n        selectedCard: card,\n        type: 'card'\n      }, () => {\n        this.toggleAllCardsModal();\n        return this.toggleAutomateModal();\n      });\n    };\n\n    this.handleAutomateStep = () => {\n      this.setState({\n        type: 'card'\n      }, () => {\n        this.toggleAllCardsModal();\n        return this.toggleAutomateModal();\n      });\n    };\n\n    this.handleBookWithPay = autoCharge => {\n      const {\n        selectedCard\n      } = this.state;\n      const {\n        bookInvestmentWithPay\n      } = this.props;\n      const {\n        location: {\n          state\n        }\n      } = this.props.history;\n      const {\n        title,\n        target,\n        startDate,\n        targetDate,\n        frequency,\n        type,\n        frequencyAmount,\n        amount\n      } = this.state;\n      const payment = {\n        method: type,\n        type: 'debit',\n        reoccurring: selectedCard ? true : false,\n        cardId: selectedCard && selectedCard.id\n      };\n      const payload = this.state.addEndDate ? {\n        title,\n        targetAmount: formatCurrencyToString(target),\n        currency: 'NGN',\n        startDate: moment(startDate).format('YYYY-MM-DD'),\n        endDate: moment(targetDate).format('YYYY-MM-DD'),\n        frequency,\n        payment,\n        initialAmount: formatCurrencyToString(amount),\n        autoCharge\n      } : {\n        title,\n        targetAmount: formatCurrencyToString(target),\n        currency: 'NGN',\n        startDate: moment(startDate).format('YYYY-MM-DD'),\n        frequency,\n        payment,\n        amount: formatCurrencyToString(frequencyAmount),\n        initialAmount: formatCurrencyToString(amount),\n        autoCharge\n      };\n      const data = {\n        type: 'custom',\n        payload,\n        id: state === null || state === void 0 ? void 0 : state.investment.id\n      };\n      bookInvestmentWithPay(data).then(data => {\n        this.setState({\n          withpay: true\n        });\n        type === 'wallet' && this.closeAutomateSuccess();\n        type === 'card' && selectedCard && this.closeAutomateSuccess();\n      });\n    };\n\n    this.closeAutomateSuccess = () => {\n      this.toggleAutomateModal();\n      this.toggleSetupSuccessModal();\n    };\n\n    this.toggleConfirmationModal = () => {\n      this.setState({\n        confirmationModal: !this.state.confirmationModal\n      });\n    };\n\n    this.toggleAddMoneyModal = () => {\n      this.setState({\n        addMoneyModal: !this.state.addMoneyModal\n      });\n    };\n\n    this.toggleFundingModal = () => {\n      this.setState({\n        fundingSourceModal: !this.state.fundingSourceModal\n      });\n    };\n\n    this.toggleAmountModal = () => {\n      this.setState({\n        enterAmountModal: !this.state.enterAmountModal\n      });\n    };\n\n    this.toggleAllCardsModal = () => {\n      this.setState({\n        allCardsModal: !this.state.allCardsModal\n      });\n    };\n\n    this.toggleTransactionPinModal = () => {\n      this.setState({\n        showTransactionModal: !this.state.showTransactionModal\n      });\n    };\n\n    this.toggleSetupSuccessModal = () => {\n      this.setState({\n        setupSuccessModal: !this.state.setupSuccessModal\n      });\n    };\n\n    this.toggleAutomateModal = () => {\n      this.setState(prevState => ({\n        showAutomateModal: !prevState.showAutomateModal\n      }));\n    };\n  }\n\n  componentDidMount() {\n    const {\n      location: {\n        state\n      }\n    } = this.props.history;\n\n    if (!(state === null || state === void 0 ? void 0 : state.investment)) {\n      this.props.history.push('/app/marketplace/termed-investments');\n    }\n\n    this.props.getCards();\n  }\n\n  render() {\n    const {\n      title,\n      target,\n      targetDate,\n      startDate,\n      confirmationModal,\n      showTransactionModal,\n      pinError,\n      errors,\n      addMoneyModal,\n      fundingSourceModal,\n      selectedMethod,\n      selectedMethodError,\n      allCardsModal,\n      setupSuccessModal,\n      enterAmountModal,\n      frequency,\n      entryError,\n      amount,\n      showAutomateModal,\n      installment,\n      withpay,\n      expectedTotalReturns,\n      addEndDate,\n      frequencyAmount\n    } = this.state;\n    const {\n      error,\n      cards,\n      pinLoading,\n      confirmPinError,\n      newError,\n      loading,\n      payLoading,\n      walletDetails,\n      calcLoading\n    } = this.props;\n    const errorObject = serializeErrors(error);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"predefined-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 7\n      }\n    }, confirmationModal && /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 15\n      }\n    }, \"Confirm Investment Setup\"), addEndDate && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 30\n      }\n    }, \"To achieve your target of \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 59\n      }\n    }, \"N\", formatCurrency(target)), \" by \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 95\n      }\n    }, convertDate(targetDate)), \", you have to save\", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }\n    }, \" N\", formatCurrency(installment), \" \", frequency), \". Adding interests, your target amount will be approximately\", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 15\n      }\n    }, \" N\", formatCurrency(expectedTotalReturns), \".\")), !addEndDate && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 31\n      }\n    }, \"To achieve your target of \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 60\n      }\n    }, \"N\", formatCurrency(target)), \", you have decided to save \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 119\n      }\n    }, \"N\", formatCurrency(frequencyAmount), \" \", frequency), \".\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-deep-blue mr-3 mb-0 cursor-pointer\",\n      onClick: this.toggleConfirmationModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }\n    }, \"Review Plan\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: this.handleEnterPin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }\n    }, \"Set up\")))), showTransactionModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 15\n      }\n    }, \"Enter Transaction PIN\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-100 ml-auto mr-auto mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(PinInput, {\n      onChange: this.handlePin,\n      error: pinError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary btn-block mt-5\",\n      onClick: this.handleTransactionVerification,\n      disabled: pinLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 15\n      }\n    }, \"Confirm Investment Setup\", pinLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 19\n      }\n    })), pinError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 28\n      }\n    }, pinError), confirmPinError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 35\n      }\n    }, confirmPinError))), setupSuccessModal && /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/complete-success.svg'),\n      alt: \"setup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 15\n      }\n    }, \"Investment setup successful!\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 15\n      }\n    }, \"Your Custom investment plan has been setup \", !withpay && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 102\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-blue font-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 108\n      }\n    }, \"pay\"), \" so\"), \" you can start enjoying returns on your principal.\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary btn-block mt-3\",\n      onClick: this.handleSuccess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 15\n      }\n    }, \"Proceed\"))), addMoneyModal && /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/close.svg'),\n      alt: \"close\",\n      onClick: this.toggleAddMoneyModal,\n      className: \"cursor-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 15\n      }\n    }, \"Do you want to add money to this investment now?\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 15\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-primary text-primary spinner-border-sm mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mr-3 text-deep-blue mb-0 cursor-pointer\",\n      onClick: this.handleBookWithoutPay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }\n    }, \"No, I\\u2019ll add money later\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: this.handleEnterAmount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }\n    }, \"Yes\")), newError && typeof newError === 'string' && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 60\n      }\n    }, newError))), enterAmountModal && /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 15\n      }\n    }, \"How much do you want to add to this investment right now?\"), /*#__PURE__*/React.createElement(Textbox, {\n      onChange: this.handleChange,\n      type: \"text\",\n      label: \"Amount\",\n      placeholder: \"Amount\",\n      name: \"amount\",\n      value: formatStringToCurrency(amount),\n      error: errors ? errors.amount : errorObject && errorObject['amount'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 15\n      }\n    })), walletDetails && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-grey text-x-small mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 15\n      }\n    }, \"Available balance \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-deep-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 76\n      }\n    }, \"\\u20A6 \", walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : 0)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: this.handlePickFundingSource,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 15\n      }\n    }, \"Proceed\"))), fundingSourceModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleFundingModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 15\n      }\n    }, \"Choose a funding source\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 15\n      }\n    }, fundingSource.map(method => /*#__PURE__*/React.createElement(PaymentMethod, {\n      onSelect: this.handleSelectMethod,\n      selected: selectedMethod === method.value ? true : false,\n      imgUrl: method.imgUrl,\n      imgBlue: method.imgBlue,\n      key: Math.random() * 1000,\n      value: method.value,\n      label: method.label,\n      balance: walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 19\n      }\n    })), selectedMethodError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 41\n      }\n    }, selectedMethodError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary mt-3\",\n      onClick: this.handleSelectedFundingSource,\n      disabled: payLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 17\n      }\n    }, \"Proceed\", payLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 21\n      }\n    }))))), allCardsModal && /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right pb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/close.svg'),\n      alt: \"close\",\n      onClick: this.toggleAllCardsModal,\n      className: \"cursor-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 15\n      }\n    })), cards && cards.cards.length > 0 && cards.cards.map(card => /*#__PURE__*/React.createElement(DebitCard, {\n      card: card,\n      handleSelect: this.handleSelectCard,\n      key: card.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center cursor-pointer\",\n      onClick: this.handleAutomateStep,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/add-card.svg'),\n      className: \"img-fluid mr-3\",\n      alt: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-deep-blue text-medium mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 17\n      }\n    }, \"Add money from a new debit card\")), /*#__PURE__*/React.createElement(\"img\", {\n      src: require('#/assets/icons/right-arrow.svg'),\n      className: \"img-fluid cursor-pointer\",\n      alt: \"arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 15\n      }\n    }))), showAutomateModal && /*#__PURE__*/React.createElement(Modal, {\n      onClose: this.toggleAutomateModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 15\n      }\n    }, \"Automate funding for this investment\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-small text-black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 15\n      }\n    }, \"Allow us to fund from your source \", frequency, \" without asking.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 13\n      }\n    }, payLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-primary text-primary spinner-border-sm mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mr-3 text-deep-blue mb-0 cursor-pointer\",\n      onClick: () => this.handleBookWithPay(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 15\n      }\n    }, \"No, I\\u2019ll add money myself\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary\",\n      onClick: () => this.handleBookWithPay(true),\n      disabled: payLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 15\n      }\n    }, \"Yes\")), newError && typeof newError === 'string' && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 58\n      }\n    }, newError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Back, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-medium text-deep-blue \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 13\n      }\n    }, \"Create new custom investment plan\"))), /*#__PURE__*/React.createElement(Card, {\n      classes: \"card mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 17\n      }\n    }, \"Give your new investment a name. You could name it after your goal. E.g. Freedom goal\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Textbox, {\n      onChange: this.handleChange,\n      type: \"text\",\n      label: \"Plan title\",\n      placeholder: \"Plan title\",\n      name: \"title\",\n      value: title,\n      error: errors ? errors.title : errorObject && errorObject['title'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 17\n      }\n    }, \"How much do you need to make this goal work?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Textbox, {\n      onChange: this.handleChange,\n      type: \"text\",\n      label: \"Target amount\",\n      placeholder: \"Set target amount\",\n      name: \"target\",\n      value: formatStringToCurrency(target),\n      error: errors ? errors.target : errorObject && errorObject['target'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 17\n      }\n    }, \"When do you want to start?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(DateBox, {\n      onChange: date => this.handleChangeDate('startDate', date),\n      label: \"Start Date\",\n      placeholder: \"Set start date\",\n      name: \"startDate\",\n      value: startDate,\n      error: errors ? errors.startDate : errorObject && errorObject['startDate'],\n      min: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"addEndDate\",\n      className: \"mr-2\",\n      type: \"checkbox\",\n      name: \"addEndDate\",\n      value: addEndDate,\n      onChange: this.handleChange,\n      checked: addEndDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"addEndDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 19\n      }\n    }, \"Do you want to add a target date to this investment?\")))), addEndDate && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 17\n      }\n    }, \"By what date do you want to have your invested target amount?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(DateBox, {\n      onChange: date => this.handleChangeDate('targetDate', date),\n      label: \"Target date\",\n      placeholder: \"Set target date\",\n      name: \"targetDate\",\n      value: targetDate,\n      error: errors ? errors.targetDate : errorObject && errorObject['targetDate'],\n      min: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 17\n      }\n    }, \"How often do you want to set money aside for this investment?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SelectBox, {\n      onChange: this.handleChange,\n      label: \"Frequency\",\n      placeholder: \"Set frequency\",\n      name: \"frequency\",\n      boxClasses: \"mt-3\",\n      options: investmentFrequency,\n      value: \"value\",\n      optionName: \"name\",\n      error: errors ? errors.frequency : errorObject && errorObject['frequency'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 17\n      }\n    }))), !addEndDate && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-black text-medium mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 17\n      }\n    }, \"How much do you want to pay on every frequency?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Textbox, {\n      onChange: this.handleChange,\n      type: \"text\",\n      label: \"Frequency amount\",\n      placeholder: \"Set frequency amount\",\n      name: \"frequencyAmount\",\n      value: formatStringToCurrency(frequencyAmount),\n      error: errors ? errors.frequencyAmount : errorObject && errorObject['amount'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right mt-3 d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 13\n      }\n    }, entryError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-error mt-2 mr-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 30\n      }\n    }, entryError), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary btn-md-block\",\n      onClick: this.handleComfirmation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 15\n      }\n    }, \"Proceed\", calcLoading && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border text-white spinner-border-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  var _config$data;\n\n  const {\n    app: {\n      wallet: {\n        cards,\n        walletDetails\n      },\n      security: {\n        error: confirmPinError\n      },\n      investment: {\n        newError\n      },\n      config,\n      profile: {\n        userProfile: {\n          data\n        }\n      }\n    }\n  } = state;\n  return {\n    loading: getActionLoadingState(state, investmentActionTypes.BOOK_NEW_INVESTMENT_REQUEST),\n    payLoading: getActionLoadingState(state, investmentActionTypes.BOOK_INVESTMENT_WITH_PAY_REQUEST),\n    pinLoading: getActionLoadingState(state, securityActionTypes.CONFIRM_PIN_REQUEST),\n    calcLoading: getActionLoadingState(state, investmentActionTypes.CALCULATE_INVESTMENT_REQUEST),\n    cards,\n    confirmPinError,\n    newError,\n    walletDetails,\n    interestRate: config === null || config === void 0 ? void 0 : (_config$data = config.data) === null || _config$data === void 0 ? void 0 : _config$data.investmentConfig,\n    isBvnActive: data && data.bvn ? true : false,\n    isApproved: data && data.isApproved === 1 ? true : false\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCards: () => dispatch(getCards()),\n    bookNewInvestment: data => dispatch(bookNewInvestment(data)),\n    bookInvestmentWithPay: data => dispatch(bookInvestmentWithPay(data)),\n    confirmPin: payload => dispatch(confirmPin(payload)),\n    calculateInvestment: payload => dispatch(calculateInvestment(payload))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Custom));","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/pages/App/Marketplace/Custom/index.js"],"names":["React","withRouter","connect","moment","Back","Card","SelectBox","Modal","PinInput","Textbox","PaymentMethod","DebitCard","DateBox","getActionLoadingState","getCards","bookNewInvestment","bookInvestmentWithPay","calculateInvestment","investmentActionTypes","confirmPin","securityActionTypes","investmentFrequency","validateFields","serializeErrors","fundingSource","formatCurrency","convertDate","verifyFrequencyPeriod","formatCurrencyToString","formatStringToCurrency","Custom","Component","state","type","title","target","targetDate","frequency","startDate","confirmationModal","showTransactionModal","setupSuccessModal","addMoneyModal","fundingSourceModal","allCardsModal","enterAmountModal","showAutomateModal","amount","pin","pinError","selectedMethod","errors","selectedMethodError","entryError","selectedCard","installment","expectedTotalReturns","withpay","addEndDate","frequencyAmount","handleChange","event","name","value","checked","setState","isNaN","handleChangeDate","item","date","handlePin","handleSelectMethod","id","handleComfirmation","e","preventDefault","props","isApproved","isBvnActive","data","required","Object","keys","length","info","format","endDate","targetAmount","then","toggleConfirmationModal","handleEnterPin","toggleTransactionPinModal","handleTransactionVerification","initialPin","value1","value2","value3","value4","join","toggleAddMoneyModal","handleBookWithoutPay","location","history","payload","currency","investment","toggleSetupSuccessModal","handleSuccess","push","handleEnterAmount","toggleAmountModal","handlePickFundingSource","toggleFundingModal","handleSelectedFundingSource","toggleAutomateModal","toggleAllCardsModal","handleSelectCard","card","handleAutomateStep","handleBookWithPay","autoCharge","payment","method","reoccurring","cardId","initialAmount","closeAutomateSuccess","prevState","componentDidMount","render","error","cards","pinLoading","confirmPinError","newError","loading","payLoading","walletDetails","calcLoading","errorObject","toggleModal","require","wallet","NGN","map","imgUrl","imgBlue","Math","random","label","Date","mapStateToProps","app","security","config","profile","userProfile","BOOK_NEW_INVESTMENT_REQUEST","BOOK_INVESTMENT_WITH_PAY_REQUEST","CONFIRM_PIN_REQUEST","CALCULATE_INVESTMENT_REQUEST","interestRate","investmentConfig","bvn","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport moment from 'moment';\nimport Back from '#/components/Back';\nimport Card from '#/components/Card';\nimport SelectBox from '#/components/SelectBox';\nimport Modal from '#/components/Modal';\nimport PinInput from '#/components/PinInput';\nimport Textbox from '#/components/Textbox';\nimport PaymentMethod from '#/components/PaymentMethod';\nimport DebitCard from '#/components/DebitCard';\nimport DateBox from '#/components/DateBox';\nimport { getActionLoadingState } from \"#/store/selectors\";\nimport { getCards } from '#/store/wallet/actions'\nimport { bookNewInvestment, bookInvestmentWithPay, calculateInvestment } from '#/store/investment/actions'\nimport investmentActionTypes from '#/store/investment/actionTypes';\nimport { confirmPin } from '#/store/security/actions'\nimport securityActionTypes from '#/store/security/actionTypes';\nimport {\n  investmentFrequency,\n  validateFields,\n  serializeErrors,\n  fundingSource,\n  formatCurrency,\n  convertDate,\n  verifyFrequencyPeriod,\n  formatCurrencyToString,\n  formatStringToCurrency\n} from '#/utils'\nimport './style.scss';\n\nclass Custom extends React.Component {\n\n  state = {\n    type: '',\n    title: '',\n    target: '',\n    targetDate: '',\n    frequency: '',\n    startDate: '',\n    confirmationModal: false,\n    showTransactionModal: false,\n    setupSuccessModal: false,\n    addMoneyModal: false,\n    fundingSourceModal: false,\n    allCardsModal: false,\n    enterAmountModal: false,\n    showAutomateModal: false,\n    amount: '',\n    pin: {},\n    pinError: null,\n    selectedMethod: '',\n    errors: null,\n    selectedMethodError: null,\n    entryError: null,\n    selectedCard: null,\n    installment: '',\n    expectedTotalReturns: '',\n    withpay: false,\n    addEndDate: false,\n    frequencyAmount: '',\n  }\n\n  componentDidMount() {\n    const { location: { state } } = this.props.history\n    if (!state?.investment) {\n      this.props.history.push('/app/marketplace/termed-investments')\n    }\n    this.props.getCards();\n  }\n\n  handleChange = (event) => {\n    const { name } = event.target\n    let value\n    if (event.target.type === \"radio\" && event.target.value === \"true\") {\n      value = true;\n    }\n    else if (event.target.type === \"radio\" && event.target.value === \"false\") {\n      value = false;\n    }\n    else {\n      value = event.target.type === \"checkbox\" ? event.target.checked : event.target.value;\n    }\n    if (name === 'target' || name === 'amount' || name === 'frequencyAmount') {\n      this.setState({ errors: null });\n      return this.setState({ [name]: formatCurrencyToString(value) }, () => {\n        if (isNaN(this.state[name])) {\n          return this.setState({ errors: { [name]: 'enter a valid number' } })\n        }\n      });\n    }\n    this.setState({ [name]: value });\n  }\n\n  handleChangeDate = (item, date) => {\n    this.setState({ [item]: date });\n  }\n\n  handlePin = (pin) => {\n    this.setState({ pin })\n  }\n\n  handleSelectMethod = (event) => {\n    this.setState({ selectedMethod: event.target.id });\n  }\n\n  //handles displaying the confirmation modal for the investment\n  handleComfirmation = (e) => {\n    e.preventDefault();\n    this.setState({ errors: null, entryError: null });\n\n    if(!this.props.isApproved) {\n      return this.setState({ entryError: 'Your account is awaiting approval' })\n    }\n    if(!this.props.isBvnActive){\n      return this.setState({ entryError: 'Access denied. Please complete your BVN profile' })\n    }\n    \n    const data = this.state;\n    const required = this.state.addEndDate\n      ? ['title', 'target', 'targetDate', 'frequency', 'startDate']\n      : ['title', 'target', 'frequency', 'startDate', 'frequencyAmount'];\n    const errors = validateFields(data, required)\n\n    if (Object.keys(errors).length > 0) {\n      return this.setState({ errors });\n    }\n    const info = {\n      startDate: moment(this.state.startDate).format('YYYY-MM-DD'),\n      endDate: moment(this.state.targetDate).format('YYYY-MM-DD'),\n      frequency: this.state.frequency,\n      targetAmount: formatCurrencyToString(this.state.target),\n    }\n    const entryError = verifyFrequencyPeriod(info)\n    if (entryError) {\n      return this.setState({ entryError });\n    }\n    this.state.addEndDate ? this.props.calculateInvestment(info)\n      .then(data => {\n        this.setState({ installment: data.installment, expectedTotalReturns: data.expectedTotalReturns }, () => {\n          this.toggleConfirmationModal()\n        })\n      })\n      : this.toggleConfirmationModal()\n  }\n\n  //move to enterering transaction pin\n  handleEnterPin = () => {\n    this.toggleConfirmationModal();\n    this.toggleTransactionPinModal();\n  }\n\n  //submit transaction pin for verification\n  handleTransactionVerification = (e) => {\n    e.preventDefault()\n    const { pin } = this.state\n    const { confirmPin } = this.props\n    this.setState({ pinError: null })\n\n    const initialPin = [pin.value1, pin.value2, pin.value3, pin.value4].join('');\n    if (initialPin.length < 4) {\n      return this.setState({ pinError: 'field is required' })\n    }\n    confirmPin({ pin: initialPin })\n      .then(data => {\n        this.toggleTransactionPinModal();\n        this.toggleAddMoneyModal()\n      })\n  }\n\n  //submit booking details without payment\n  handleBookWithoutPay = (e) => {\n    e.preventDefault();\n\n    const { bookNewInvestment } = this.props;\n    const { location: { state } } = this.props.history\n    const { title, target, startDate, targetDate, frequency, frequencyAmount } = this.state\n    const payload = this.state.addEndDate ?\n      { title, targetAmount: formatCurrencyToString(target), currency: 'NGN', startDate: moment(startDate).format('YYYY-MM-DD'), endDate: moment(targetDate).format('YYYY-MM-DD'), frequency }\n      : { title, targetAmount: formatCurrencyToString(target), currency: 'NGN', startDate: moment(startDate).format('YYYY-MM-DD'), amount: formatCurrencyToString(frequencyAmount), frequency }\n    const data = { type: 'custom', payload, id: state?.investment.id }\n\n    bookNewInvestment(data)\n      .then(data => {\n        this.toggleAddMoneyModal();\n        this.toggleSetupSuccessModal();\n      });\n  }\n\n  //handle proceed from the success modal\n  handleSuccess = () => {\n    this.toggleSetupSuccessModal();\n    this.props.history.push('/app/marketplace/termed-investments')\n  }\n\n  //displays the modal to enter the amount you might want to invest\n  handleEnterAmount = () => {\n    this.toggleAddMoneyModal();\n    this.toggleAmountModal();\n  }\n\n  //displays the modal to select a funding course\n  handlePickFundingSource = () => {\n    this.toggleAmountModal();\n    this.toggleFundingModal();\n  }\n\n  // handles for when a funcding source is selected\n  handleSelectedFundingSource = () => {\n    const { selectedMethod } = this.state\n\n    const required = ['selectedMethod'];\n    const errors = validateFields({ selectedMethod }, required)\n    if (Object.keys(errors).length > 0) {\n      return this.setState({ selectedMethodError: 'please select a method' });\n    }\n    if (selectedMethod === 'wallet') {\n      this.setState({ type: 'wallet' });\n      this.toggleFundingModal();\n      return this.toggleAutomateModal();\n    }\n    this.toggleFundingModal();\n    return this.toggleAllCardsModal()\n  }\n\n\n  handleSelectCard = (card) => {\n    this.setState({ selectedCard: card, type: 'card' },\n      () => {\n        this.toggleAllCardsModal();\n        return this.toggleAutomateModal();\n      })\n  }\n\n  handleAutomateStep = () => {\n    this.setState({ type: 'card' },\n      () => {\n        this.toggleAllCardsModal();\n        return this.toggleAutomateModal();\n      })\n  }\n\n  //submit booking details without payment\n  handleBookWithPay = (autoCharge) => {\n    const { selectedCard } = this.state;\n    const { bookInvestmentWithPay } = this.props;\n    const { location: { state } } = this.props.history\n    const { title, target, startDate, targetDate, frequency, type, frequencyAmount, amount } = this.state;\n    const payment = { method: type, type: 'debit', reoccurring: selectedCard ? true : false, cardId: selectedCard && selectedCard.id }\n    const payload = this.state.addEndDate ?\n      {\n        title, targetAmount: formatCurrencyToString(target), currency: 'NGN', startDate: moment(startDate).format('YYYY-MM-DD'), endDate: moment(targetDate).format('YYYY-MM-DD'), frequency, payment,\n        initialAmount: formatCurrencyToString(amount), autoCharge\n      }\n      : {\n        title, targetAmount: formatCurrencyToString(target), currency: 'NGN', startDate: moment(startDate).format('YYYY-MM-DD'), frequency, payment,\n        amount: formatCurrencyToString(frequencyAmount), initialAmount: formatCurrencyToString(amount), autoCharge\n      }\n    const data = { type: 'custom', payload, id: state?.investment.id }\n\n    bookInvestmentWithPay(data)\n      .then(data => {\n        this.setState({ withpay: true });\n        type === 'wallet' && this.closeAutomateSuccess();\n        type === 'card' && selectedCard && this.closeAutomateSuccess();\n      });\n  }\n\n  closeAutomateSuccess = () => {\n    this.toggleAutomateModal();\n    this.toggleSetupSuccessModal();\n  }\n\n  toggleConfirmationModal = () => {\n    this.setState({ confirmationModal: !this.state.confirmationModal })\n  }\n\n  toggleAddMoneyModal = () => {\n    this.setState({ addMoneyModal: !this.state.addMoneyModal })\n  }\n\n  toggleFundingModal = () => {\n    this.setState({ fundingSourceModal: !this.state.fundingSourceModal })\n  }\n\n  toggleAmountModal = () => {\n    this.setState({ enterAmountModal: !this.state.enterAmountModal })\n  }\n\n  toggleAllCardsModal = () => {\n    this.setState({ allCardsModal: !this.state.allCardsModal })\n  }\n\n  toggleTransactionPinModal = () => {\n    this.setState({ showTransactionModal: !this.state.showTransactionModal })\n  }\n\n  toggleSetupSuccessModal = () => {\n    this.setState({ setupSuccessModal: !this.state.setupSuccessModal })\n  }\n\n  toggleAutomateModal = () => {\n    this.setState(prevState => ({ showAutomateModal: !prevState.showAutomateModal }));\n  }\n\n  render() {\n    const {\n      title, target, targetDate,\n      startDate, confirmationModal, showTransactionModal,\n      pinError, errors, addMoneyModal,\n      fundingSourceModal, selectedMethod, selectedMethodError,\n      allCardsModal, setupSuccessModal, enterAmountModal,\n      frequency, entryError, amount, showAutomateModal,\n      installment, withpay, expectedTotalReturns, addEndDate, frequencyAmount,\n    } = this.state;\n\n    const { error, cards, pinLoading, confirmPinError, newError, loading, payLoading, walletDetails, calcLoading } = this.props;\n    const errorObject = serializeErrors(error);\n\n    return (\n      <div className=\"predefined-page\">\n        {confirmationModal &&\n          <Modal>\n            <div className=\"text-left\">\n              <h3 className=\"text-deep-blue\">Confirm Investment Setup</h3>\n              {addEndDate && <p>To achieve your target of <b>N{formatCurrency(target)}</b> by <b>{convertDate(targetDate)}</b>, you have to save\n            <b> N{formatCurrency(installment)} {frequency}</b>.\n              Adding interests, your target amount will be approximately\n              <b> N{formatCurrency(expectedTotalReturns)}.</b>\n              </p>}\n              {!addEndDate && <p>To achieve your target of <b>N{formatCurrency(target)}</b>, you have decided to save <b>N{formatCurrency(frequencyAmount)} {frequency}</b>.</p>}\n              <div className=\"d-flex justify-content-end align-items-center\">\n                <p className=\"text-deep-blue mr-3 mb-0 cursor-pointer\" onClick={this.toggleConfirmationModal}>Review Plan</p>\n                <button className=\"btn btn-sm btn-primary\" onClick={this.handleEnterPin}>\n                  Set up\n              </button>\n              </div>\n            </div>\n          </Modal>\n        }\n        {showTransactionModal &&\n          <Modal onClose={this.toggleModal}>\n            <div className=\"text-center\">\n              <h3>Enter Transaction PIN</h3>\n              <div className=\"w-100 ml-auto mr-auto mt-3\">\n                <PinInput onChange={this.handlePin} error={pinError} />\n              </div>\n              <button className=\"btn btn-sm btn-primary btn-block mt-5\" onClick={this.handleTransactionVerification} disabled={pinLoading}>\n                Confirm Investment Setup\n                {pinLoading &&\n                  <div className=\"spinner-border spinner-border-white spinner-border-sm ml-2\"></div>\n                }\n              </button>\n              {pinError && <p className=\"text-error mt-2\">{pinError}</p>}\n              {confirmPinError && <p className=\"text-error mt-2\">{confirmPinError}</p>}\n            </div>\n          </Modal>\n        }\n        {setupSuccessModal &&\n          <Modal>\n            <div className=\"text-center\">\n              <img src={require('#/assets/icons/complete-success.svg')} alt=\"setup\" />\n              <h3>Investment setup successful!</h3>\n              <p className=\"text-black mb-0\">Your Custom investment plan has been setup {!withpay && <span><span className=\"text-blue font-weight-bold\">pay</span> so</span>} you can start enjoying returns on your principal.</p>\n              <button className=\"btn btn-sm btn-primary btn-block mt-3\" onClick={this.handleSuccess}>\n                Proceed\n                </button>\n            </div>\n          </Modal>\n        }\n        {addMoneyModal &&\n          <Modal>\n            <div className=\"text-right pb-3\">\n              <img src={require('#/assets/icons/close.svg')} alt=\"close\" onClick={this.toggleAddMoneyModal} className=\"cursor-pointer\" />\n            </div>\n            <div className=\"text-left\">\n              <h3>Do you want to add money to this investment now?</h3>\n              <div className=\"d-flex justify-content-end align-items-center\">\n                {loading &&\n                  <div className=\"spinner-border spinner-border-primary text-primary spinner-border-sm mr-2\"></div>\n                }\n                <p className=\"mr-3 text-deep-blue mb-0 cursor-pointer\" onClick={this.handleBookWithoutPay}>No, I’ll add money later</p>\n                <button className=\"btn btn-sm btn-primary\" onClick={this.handleEnterAmount}>\n                  Yes\n                </button>\n              </div>\n              {newError && typeof newError === 'string' && <p className=\"text-error mt-2\">{newError}</p>}\n            </div>\n          </Modal>\n        }\n        {\n          enterAmountModal &&\n          <Modal>\n            <div>\n              <h3 className=\"text-deep-blue\">How much do you want to add to this investment right now?</h3>\n              <Textbox\n                onChange={this.handleChange}\n                type=\"text\"\n                label=\"Amount\"\n                placeholder=\"Amount\"\n                name=\"amount\"\n                value={formatStringToCurrency(amount)}\n                error={errors ? errors.amount : (errorObject && errorObject['amount'])}\n              />\n            </div>\n            {walletDetails &&\n              <p className=\"text-grey text-x-small mb-0\">Available balance <span className=\"text-deep-blue\">\n                &#x20A6; {walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : 0}\n              </span>\n              </p>\n            }\n            <div className=\"text-right mt-2\">\n              <button className=\"btn btn-sm btn-primary\" onClick={this.handlePickFundingSource}>\n                Proceed\n              </button>\n            </div>\n\n          </Modal>\n        }\n        {fundingSourceModal &&\n          <Modal onClose={this.toggleFundingModal}>\n            <div className=\"text-left\">\n              <h3>Choose a funding source</h3>\n              <div>\n                {fundingSource.map(method => (\n                  <PaymentMethod\n                    onSelect={this.handleSelectMethod}\n                    selected={selectedMethod === method.value ? true : false}\n                    imgUrl={method.imgUrl}\n                    imgBlue={method.imgBlue}\n                    key={Math.random() * 1000}\n                    value={method.value}\n                    label={method.label}\n                    balance={walletDetails && walletDetails.wallet.NGN ? walletDetails.wallet.NGN : 0}\n                  />\n                ))}\n                {selectedMethodError && <p className=\"text-error mt-2\">{selectedMethodError}</p>}\n              </div>\n              <div className=\"text-right\">\n                <button className=\"btn btn-sm btn-primary mt-3\" onClick={this.handleSelectedFundingSource} disabled={payLoading}>\n                  Proceed\n                {payLoading &&\n                    <div className=\"spinner-border spinner-border-white spinner-border-sm ml-2\"></div>\n                  }\n                </button>\n              </div>\n            </div>\n          </Modal>\n        }\n        {allCardsModal &&\n          <Modal>\n            <div className=\"text-right pb-3\">\n              <img src={require('#/assets/icons/close.svg')} alt=\"close\" onClick={this.toggleAllCardsModal} className=\"cursor-pointer\" />\n            </div>\n            {\n              cards &&\n              cards.cards.length > 0 &&\n              cards.cards.map(card => (\n                <DebitCard card={card} handleSelect={this.handleSelectCard} key={card.id} />\n              ))\n            }\n            <div className=\"d-flex justify-content-between align-items-center cursor-pointer\" onClick={this.handleAutomateStep}>\n              <div className=\"d-flex align-items-center\">\n                <img src={require('#/assets/icons/add-card.svg')} className=\"img-fluid mr-3\" alt=\"card\" />\n                <p className=\"text-deep-blue text-medium mb-0\">Add money from a new debit card</p>\n              </div>\n              <img src={require('#/assets/icons/right-arrow.svg')} className=\"img-fluid cursor-pointer\" alt=\"arrow\" />\n            </div>\n          </Modal>\n        }\n\n        {showAutomateModal &&\n          <Modal onClose={this.toggleAutomateModal}>\n            <div className=\"text-left\">\n              <h3>Automate funding for this investment</h3>\n              <p className=\"text-small text-black\">Allow us to fund from your source {frequency} without asking.</p>\n            </div>\n            <div className=\"d-flex justify-content-end align-items-center\">\n              {payLoading &&\n                <div className=\"spinner-border spinner-border-primary text-primary spinner-border-sm mr-2\"></div>\n              }\n              <p className=\"mr-3 text-deep-blue mb-0 cursor-pointer\" onClick={() => this.handleBookWithPay(false)}>No, I’ll add money myself</p>\n              <button className=\"btn btn-sm btn-primary\" onClick={() => this.handleBookWithPay(true)} disabled={payLoading}>\n                Yes\n              </button>\n            </div>\n            {newError && typeof newError === 'string' && <p className=\"text-error mt-2\">{newError}</p>}\n          </Modal>\n        }\n\n        <div className=\"row\">\n          <div className=\"col-md-2\">\n            <Back />\n          </div>\n          <div className=\"col-md-5 text-center\">\n            <h3 className=\"text-medium text-deep-blue \">Create new custom investment plan</h3>\n          </div>\n        </div>\n        <Card classes=\"card mt-3\">\n          <form>\n            <div className=\"row align-items-center\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium mt-3\">Give your new investment a name. You could name it after your goal. E.g. Freedom goal</p>\n              </div>\n              <div className=\"col-md-6\">\n                <Textbox\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  label=\"Plan title\"\n                  placeholder=\"Plan title\"\n                  name=\"title\"\n                  value={title}\n                  error={errors ? errors.title : (errorObject && errorObject['title'])}\n                />\n              </div>\n            </div>\n\n            <div className=\"row mt-4 align-items-center\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium mt-3\">How much do you need to make this goal work?</p>\n              </div>\n              <div className=\"col-md-6\">\n                <Textbox\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  label=\"Target amount\"\n                  placeholder=\"Set target amount\"\n                  name=\"target\"\n                  value={formatStringToCurrency(target)}\n                  error={errors ? errors.target : (errorObject && errorObject['target'])}\n                />\n              </div>\n            </div>\n\n            <div className=\"row mt-4 align-items-center\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium mt-3\">When do you want to start?</p>\n              </div>\n              <div className=\"col-md-6\">\n                <DateBox\n                  onChange={date => this.handleChangeDate('startDate', date)}\n                  label=\"Start Date\"\n                  placeholder=\"Set start date\"\n                  name=\"startDate\"\n                  value={startDate}\n                  error={errors ? errors.startDate : (errorObject && errorObject['startDate'])}\n                  min={new Date()}\n                />\n                <div className=\"mt-2\">\n                  <input\n                    id=\"addEndDate\"\n                    className=\"mr-2\"\n                    type=\"checkbox\"\n                    name=\"addEndDate\"\n                    value={addEndDate}\n                    onChange={this.handleChange}\n                    checked={addEndDate}\n                  />\n                  <label htmlFor=\"addEndDate\">Do you want to add a target date to this investment?</label>\n                </div>\n              </div>\n            </div>\n\n            {addEndDate && <div className=\"row mt-4 align-items-center\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium mt-3\">By what date do you want to have your invested target amount?</p>\n              </div>\n              <div className=\"col-md-6\">\n                <DateBox\n                  onChange={date => this.handleChangeDate('targetDate', date)}\n                  label=\"Target date\"\n                  placeholder=\"Set target date\"\n                  name=\"targetDate\"\n                  value={targetDate}\n                  error={errors ? errors.targetDate : (errorObject && errorObject['targetDate'])}\n                  min={new Date()}\n                />\n              </div>\n            </div>}\n\n            <div className=\"row mt-4 align-items-center\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium mt-3\">How often do you want to set money aside for this investment?</p>\n              </div>\n              <div className=\"col-md-6\">\n                <SelectBox\n                  onChange={this.handleChange}\n                  label=\"Frequency\"\n                  placeholder=\"Set frequency\"\n                  name=\"frequency\"\n                  boxClasses=\"mt-3\"\n                  options={investmentFrequency}\n                  value=\"value\"\n                  optionName=\"name\"\n                  error={errors ? errors.frequency : (errorObject && errorObject['frequency'])}\n                />\n              </div>\n            </div>\n\n            {!addEndDate && <div className=\"row mt-4 align-items-center\">\n              <div className=\"col-md-6\">\n                <p className=\"text-black text-medium mt-3\">How much do you want to pay on every frequency?</p>\n              </div>\n              <div className=\"col-md-6\">\n                <Textbox\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  label=\"Frequency amount\"\n                  placeholder=\"Set frequency amount\"\n                  name=\"frequencyAmount\"\n                  value={formatStringToCurrency(frequencyAmount)}\n                  error={errors ? errors.frequencyAmount : (errorObject && errorObject['amount'])}\n                />\n              </div>\n            </div>}\n\n            <div className=\"text-right mt-3 d-flex justify-content-end\">\n              {entryError && <p className=\"text-error mt-2 mr-3\">{entryError}</p>}\n\n              <button className=\"btn btn-sm btn-primary btn-md-block\" onClick={this.handleComfirmation}>\n                Proceed\n                {calcLoading &&\n                  <div className=\"spinner-border text-white spinner-border-sm ml-2\"></div>\n                }\n              </button>\n            </div>\n          </form>\n        </Card>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const {\n    app: {\n      wallet: { cards, walletDetails },\n      security: { error: confirmPinError },\n      investment: { newError },\n      config,\n      profile: { userProfile: { data } }\n    }\n  } = state;\n\n  return {\n    loading: getActionLoadingState(state, investmentActionTypes.BOOK_NEW_INVESTMENT_REQUEST),\n    payLoading: getActionLoadingState(state, investmentActionTypes.BOOK_INVESTMENT_WITH_PAY_REQUEST),\n    pinLoading: getActionLoadingState(state, securityActionTypes.CONFIRM_PIN_REQUEST),\n    calcLoading: getActionLoadingState(state, investmentActionTypes.CALCULATE_INVESTMENT_REQUEST),\n    cards,\n    confirmPinError,\n    newError,\n    walletDetails,\n    interestRate: config?.data?.investmentConfig,\n    isBvnActive: data && data.bvn ? true : false,\n    isApproved: data && data.isApproved === 1 ? true : false,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getCards: () => dispatch(getCards()),\n    bookNewInvestment: (data) => dispatch(bookNewInvestment(data)),\n    bookInvestmentWithPay: (data) => dispatch(bookInvestmentWithPay(data)),\n    confirmPin: (payload) => dispatch(confirmPin(payload)),\n    calculateInvestment: (payload) => dispatch(calculateInvestment(payload)),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Custom));\n"]},"metadata":{},"sourceType":"module"}