{"ast":null,"code":"import axios from 'axios';\nimport CONFIG from '#/config';\nimport * as actions from \"./actionTypes\";\nimport { logout, updateUser } from \"#/store/user/actions\";\nimport { showAlert } from '#/store/ui/actions';\n\nconst clearError = () => {\n  return {\n    type: actions.CLEAR_ERROR\n  };\n};\n\nconst getActivePpiRequest = () => {\n  return {\n    type: actions.GET_ACTIVE_PPI_REQUEST\n  };\n};\n\nconst getActivePpiError = message => {\n  return {\n    type: actions.GET_ACTIVE_PPI_ERROR,\n    error: message\n  };\n};\n\nconst getActivePpiSuccess = data => {\n  return {\n    type: actions.GET_ACTIVE_PPI_SUCCESS,\n    data\n  };\n};\n\nexport const getActivePpi = (page, limit) => {\n  return (dispatch, getState) => {\n    dispatch(getActivePpiRequest());\n    const {\n      token\n    } = getState().user;\n    axios.get(`${CONFIG.BASE_URL}/mutual-funds?limit=${limit}&page=${page}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      }\n    }).then(response => {\n      var _response$headers;\n\n      ((_response$headers = response.headers) === null || _response$headers === void 0 ? void 0 : _response$headers.authorization) && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if ([200, 201].includes(response.status)) {\n        dispatch(getActivePpiSuccess(response.data.data));\n      }\n    }).catch(error => {\n      error.response && error.response.headers.authorization && dispatch(updateUser({\n        token: error.response.headers.authorization\n      }));\n\n      if (error.response && [400, 404, 403].includes(error.response.status)) {\n        return dispatch(getActivePpiError(error.response.data.error ? error.response.data.error : error.response.data.message));\n      }\n\n      if (error.response && [401].includes(error.response.status)) {\n        dispatch(showAlert({\n          type: 'error',\n          message: 'Your session has expired'\n        }));\n        return setTimeout(() => dispatch(logout()), 2000);\n      }\n\n      if (error.response && error.response.status >= 500) {\n        return dispatch(getActivePpiError('Oops! We did something wrong.'));\n      }\n\n      dispatch(getActivePpiError('Oops! We did something wrong.'));\n    });\n  };\n};\n\nconst getSinglePpiRequest = () => {\n  return {\n    type: actions.GET_SINGLE_PPI_REQUEST\n  };\n};\n\nconst getSinglePpiError = message => {\n  return {\n    type: actions.GET_SINGLE_PPI_ERROR,\n    error: message\n  };\n};\n\nconst getSinglePpiSuccess = data => {\n  return {\n    type: actions.GET_SINGLE_PPI_SUCCESS,\n    data\n  };\n};\n\nexport const getSinglePpi = slug => {\n  return (dispatch, getState) => {\n    dispatch(getSinglePpiRequest());\n    const {\n      token\n    } = getState().user;\n    axios.get(`${CONFIG.BASE_URL}/mutual-funds/${slug}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      }\n    }).then(response => {\n      var _response$headers2;\n\n      ((_response$headers2 = response.headers) === null || _response$headers2 === void 0 ? void 0 : _response$headers2.authorization) && dispatch(updateUser({\n        token: response.headers.authorization\n      }));\n\n      if ([200, 201].includes(response.status)) {\n        dispatch(getSinglePpiSuccess(response.data.data));\n      }\n    }).catch(error => {\n      error.response && error.response.headers.authorization && dispatch(updateUser({\n        token: error.response.headers.authorization\n      }));\n\n      if (error.response && [400, 404, 403].includes(error.response.status)) {\n        return dispatch(getSinglePpiError(error.response.data.error ? error.response.data.error : error.response.data.message));\n      }\n\n      if (error.response && [401].includes(error.response.status)) {\n        dispatch(showAlert({\n          type: 'error',\n          message: 'Your session has expired'\n        }));\n        return setTimeout(() => dispatch(logout()), 2000);\n      }\n\n      if (error.response && error.response.status >= 500) {\n        return dispatch(getSinglePpiError('Oops! We did something wrong.'));\n      }\n\n      dispatch(getSinglePpiError('Oops! We did something wrong.'));\n    });\n  };\n};\n\nconst submitMutualFormRequest = () => {\n  return {\n    type: actions.SUBMIT_MUTUAL_FORM_REQUEST\n  };\n};\n\nconst submitMutualFormError = message => {\n  return {\n    type: actions.SUBMIT_MUTUAL_FORM_ERROR,\n    error: message\n  };\n};\n\nconst submitMutualFormSuccess = data => {\n  return {\n    type: actions.SUBMIT_MUTUAL_FORM_SUCCESS,\n    data\n  };\n};\n\nexport const submitMutualForm = (slug, payload) => {\n  return (dispatch, getState) => {\n    dispatch(submitMutualFormRequest());\n    const {\n      token\n    } = getState().user;\n    return new Promise(resolve => {\n      axios.post(`${CONFIG.BASE_URL}/mutual-funds/${slug}/subscribe`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      }).then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if ([200, 201].includes(response.status)) {\n          dispatch(submitMutualFormSuccess(response.data.data));\n          dispatch(showAlert({\n            type: 'success',\n            message: response.data.message\n          }));\n          resolve();\n        }\n      }).catch(error => {\n        error.response && error.response.headers.authorization && dispatch(updateUser({\n          token: error.response.headers.authorization\n        }));\n\n        if (error.response && [400, 404, 403].includes(error.response.status)) {\n          dispatch(submitMutualFormError(error.response.data.error ? error.response.data.error : error.response.data.message));\n          return setTimeout(() => dispatch(clearError()), 3000);\n        }\n\n        if (error.response && [401].includes(error.response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (error.response && error.response.status >= 500) {\n          return dispatch(submitMutualFormError('Oops! We did something wrong.'));\n        }\n\n        dispatch(submitMutualFormError('Oops! We did something wrong.'));\n      });\n    });\n  };\n};\n\nconst sendFormToMailRequest = () => {\n  return {\n    type: actions.SEND_FORM_TO_EMAIL_REQUEST\n  };\n};\n\nconst sendFormToMailError = message => {\n  return {\n    type: actions.SEND_FORM_TO_EMAIL_ERROR,\n    error: message\n  };\n};\n\nconst sendFormToMailSuccess = data => {\n  return {\n    type: actions.SEND_FORM_TO_EMAIL_SUCCESS,\n    data\n  };\n};\n\nexport const sendFormToMail = slug => {\n  return (dispatch, getState) => {\n    dispatch(sendFormToMailRequest());\n    const {\n      token\n    } = getState().user;\n    return new Promise(resolve => {\n      axios.get(`${CONFIG.BASE_URL}/mutual-funds/${slug}/download`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      }).then(response => {\n        response.headers.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }));\n\n        if ([200, 201].includes(response.status)) {\n          dispatch(sendFormToMailSuccess(response.data.data));\n          dispatch(showAlert({\n            type: 'success',\n            message: response.data.message\n          }));\n          resolve(response.data.data);\n        }\n      }).catch(error => {\n        error.response && error.response.headers.authorization && dispatch(updateUser({\n          token: error.response.headers.authorization\n        }));\n\n        if (error.response && [400, 404, 403].includes(error.response.status)) {\n          return dispatch(sendFormToMailError(error.response.data.error ? error.response.data.error : error.response.data.message));\n        }\n\n        if (error.response && [401].includes(error.response.status)) {\n          dispatch(showAlert({\n            type: 'error',\n            message: 'Your session has expired'\n          }));\n          return setTimeout(() => dispatch(logout()), 2000);\n        }\n\n        if (error.response && error.response.status >= 500) {\n          return dispatch(sendFormToMailError('Oops! We did something wrong.'));\n        }\n\n        dispatch(sendFormToMailError('Oops! We did something wrong.'));\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/adebayooluyemi/Documents/THE BULB/cpinvest-app/cpinvest-app/src/store/ppi/actions.js"],"names":["axios","CONFIG","actions","logout","updateUser","showAlert","clearError","type","CLEAR_ERROR","getActivePpiRequest","GET_ACTIVE_PPI_REQUEST","getActivePpiError","message","GET_ACTIVE_PPI_ERROR","error","getActivePpiSuccess","data","GET_ACTIVE_PPI_SUCCESS","getActivePpi","page","limit","dispatch","getState","token","user","get","BASE_URL","headers","Authorization","then","response","authorization","includes","status","catch","setTimeout","getSinglePpiRequest","GET_SINGLE_PPI_REQUEST","getSinglePpiError","GET_SINGLE_PPI_ERROR","getSinglePpiSuccess","GET_SINGLE_PPI_SUCCESS","getSinglePpi","slug","submitMutualFormRequest","SUBMIT_MUTUAL_FORM_REQUEST","submitMutualFormError","SUBMIT_MUTUAL_FORM_ERROR","submitMutualFormSuccess","SUBMIT_MUTUAL_FORM_SUCCESS","submitMutualForm","payload","Promise","resolve","post","sendFormToMailRequest","SEND_FORM_TO_EMAIL_REQUEST","sendFormToMailError","SEND_FORM_TO_EMAIL_ERROR","sendFormToMailSuccess","SEND_FORM_TO_EMAIL_SUCCESS","sendFormToMail"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport CONFIG from '#/config';\nimport * as actions from \"./actionTypes\";\nimport { logout, updateUser } from \"#/store/user/actions\";\nimport { showAlert } from '#/store/ui/actions';\n\nconst clearError = () => {\n  return {\n    type: actions.CLEAR_ERROR,\n  }\n}\n\nconst getActivePpiRequest = () => {\n  return {\n    type: actions.GET_ACTIVE_PPI_REQUEST,\n  }\n}\n\nconst getActivePpiError = (message) => {\n  return {\n    type: actions.GET_ACTIVE_PPI_ERROR,\n    error: message,\n  }\n}\n\nconst getActivePpiSuccess = (data) => {\n  return {\n    type: actions.GET_ACTIVE_PPI_SUCCESS,\n    data,\n  }\n}\n\nexport const getActivePpi = (page, limit) => {\n  return (dispatch, getState) => {\n    dispatch(getActivePpiRequest());\n\n    const { token } = getState().user;\n\n    axios.get(`${CONFIG.BASE_URL}/mutual-funds?limit=${limit}&page=${page}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    })\n      .then(response => {\n        response.headers?.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if ([200, 201].includes(response.status)) {\n          dispatch(getActivePpiSuccess(response.data.data));\n        }\n      })\n      .catch((error) => {\n        error.response && error.response.headers.authorization && dispatch(updateUser({\n          token: error.response.headers.authorization\n        }))\n        if (error.response && [400, 404, 403].includes(error.response.status)) {\n          return dispatch(getActivePpiError(error.response.data.error ? error.response.data.error : error.response.data.message));\n        }\n        if (error.response && [401].includes(error.response.status)) {\n          dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n          return setTimeout(() => dispatch(logout()), 2000)\n        }\n        if (error.response && error.response.status >= 500) {\n          return dispatch(getActivePpiError('Oops! We did something wrong.'));\n        }\n        dispatch(getActivePpiError('Oops! We did something wrong.'));\n      })\n  }\n}\n\nconst getSinglePpiRequest = () => {\n  return {\n    type: actions.GET_SINGLE_PPI_REQUEST,\n  }\n}\n\nconst getSinglePpiError = (message) => {\n  return {\n    type: actions.GET_SINGLE_PPI_ERROR,\n    error: message,\n  }\n}\n\nconst getSinglePpiSuccess = (data) => {\n  return {\n    type: actions.GET_SINGLE_PPI_SUCCESS,\n    data,\n  }\n}\n\nexport const getSinglePpi = (slug) => {\n  return (dispatch, getState) => {\n    dispatch(getSinglePpiRequest());\n\n    const { token } = getState().user;\n\n    axios.get(`${CONFIG.BASE_URL}/mutual-funds/${slug}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token,\n      },\n    })\n      .then(response => {\n        response.headers?.authorization && dispatch(updateUser({\n          token: response.headers.authorization\n        }))\n        if ([200, 201].includes(response.status)) {\n          dispatch(getSinglePpiSuccess(response.data.data));\n        }\n      })\n      .catch((error) => {\n        error.response && error.response.headers.authorization && dispatch(updateUser({\n          token: error.response.headers.authorization\n        }))\n        if (error.response && [400, 404, 403].includes(error.response.status)) {\n          return dispatch(getSinglePpiError(error.response.data.error ? error.response.data.error : error.response.data.message));\n        }\n        if (error.response && [401].includes(error.response.status)) {\n          dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n          return setTimeout(() => dispatch(logout()), 2000)\n        }\n        if (error.response && error.response.status >= 500) {\n          return dispatch(getSinglePpiError('Oops! We did something wrong.'));\n        }\n        dispatch(getSinglePpiError('Oops! We did something wrong.'));\n      })\n  }\n}\n\nconst submitMutualFormRequest = () => {\n  return {\n    type: actions.SUBMIT_MUTUAL_FORM_REQUEST,\n  }\n}\n\nconst submitMutualFormError = (message) => {\n  return {\n    type: actions.SUBMIT_MUTUAL_FORM_ERROR,\n    error: message,\n  }\n}\n\nconst submitMutualFormSuccess = (data) => {\n  return {\n    type: actions.SUBMIT_MUTUAL_FORM_SUCCESS,\n    data,\n  }\n}\n\nexport const submitMutualForm = (slug, payload) => {\n  return (dispatch, getState) => {\n    dispatch(submitMutualFormRequest());\n\n    const { token } = getState().user;\n\n    return new Promise(resolve => {\n      axios.post(`${CONFIG.BASE_URL}/mutual-funds/${slug}/subscribe`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(response => {\n          response.headers.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          if ([200, 201].includes(response.status)) {\n            dispatch(submitMutualFormSuccess(response.data.data));\n            dispatch(showAlert({ type: 'success', message: response.data.message }))\n            resolve();\n          }\n        })\n        .catch((error) => {\n          error.response && error.response.headers.authorization && dispatch(updateUser({\n            token: error.response.headers.authorization\n          }))\n          if (error.response && [400, 404, 403].includes(error.response.status)) {\n            dispatch(submitMutualFormError(error.response.data.error ? error.response.data.error : error.response.data.message));\n            return setTimeout(() => dispatch(clearError()), 3000);\n\n          }\n          if (error.response && [401].includes(error.response.status)) {\n            dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n            return setTimeout(() => dispatch(logout()), 2000)\n          }\n          if (error.response && error.response.status >= 500) {\n            return dispatch(submitMutualFormError('Oops! We did something wrong.'));\n          }\n          dispatch(submitMutualFormError('Oops! We did something wrong.'));\n        })\n    })\n  }\n}\n\nconst sendFormToMailRequest = () => {\n  return {\n    type: actions.SEND_FORM_TO_EMAIL_REQUEST,\n  }\n}\n\nconst sendFormToMailError = (message) => {\n  return {\n    type: actions.SEND_FORM_TO_EMAIL_ERROR,\n    error: message,\n  }\n}\n\nconst sendFormToMailSuccess = (data) => {\n  return {\n    type: actions.SEND_FORM_TO_EMAIL_SUCCESS,\n    data,\n  }\n}\n\nexport const sendFormToMail = (slug) => {\n  return (dispatch, getState) => {\n    dispatch(sendFormToMailRequest());\n\n    const { token } = getState().user;\n\n    return new Promise(resolve => {\n      axios.get(`${CONFIG.BASE_URL}/mutual-funds/${slug}/download`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token,\n        },\n      })\n        .then(response => {\n          response.headers.authorization && dispatch(updateUser({\n            token: response.headers.authorization\n          }))\n          if ([200, 201].includes(response.status)) {\n            dispatch(sendFormToMailSuccess(response.data.data));\n            dispatch(showAlert({ type: 'success', message: response.data.message }))\n            resolve(response.data.data);\n          }\n        })\n        .catch((error) => {\n          error.response && error.response.headers.authorization && dispatch(updateUser({\n            token: error.response.headers.authorization\n          }))\n          if (error.response && [400, 404, 403].includes(error.response.status)) {\n            return dispatch(sendFormToMailError(error.response.data.error ? error.response.data.error : error.response.data.message));\n          }\n          if (error.response && [401].includes(error.response.status)) {\n            dispatch(showAlert({ type: 'error', message: 'Your session has expired' }))\n            return setTimeout(() => dispatch(logout()), 2000)\n          }\n          if (error.response && error.response.status >= 500) {\n            return dispatch(sendFormToMailError('Oops! We did something wrong.'));\n          }\n          dispatch(sendFormToMailError('Oops! We did something wrong.'));\n        })\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}